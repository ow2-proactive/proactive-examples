<?xml version="1.0" encoding="UTF-8"?>
<job xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:proactive:jobdescriptor:3.8"
	xsi:schemaLocation="urn:proactive:jobdescriptor:3.8 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.8/schedulerjob.xsd"
	name="Gantt_chart" projectName="Scheduler Analytics" priority="normal"
	onTaskError="continueJobExecution" maxNumberOfExecution="2">
	<variables>
		<variable name="url" value="https://try.activeeon.com" model="PA:URL" />
		<variable name="palette" value="Oranges"
			model="PA:LIST(Accent,Blues,BrBG,BuGn,BuPu,Category10,Category20,Category20b,Category20c,Colorblind,Dark2,GnBu,Greens,Greys,Inferno,Magma,OrRd,Oranges,PRGn,Paired,Pastel1,Pastel2,PiYG,Plasma,PuBu,PuBuGn,PuOr,PuRd,Purples,RdBu,RdGy,RdPu,RdYlBu,RdYlGn,Reds,Set1,Set2,Set3,Spectral,Viridis,YlGn,YlGnBu,YlOrBr,YlOrRd)" />
		<variable name="color_key" value="taskname"
			model="PA:LIST(jobname,jobid,taskname,taskid)" />
		<variable name="width" value="1200" model="PA:INTEGER" />
		<variable name="height" value="800" model="PA:INTEGER" />
		<variable name="title"
			value="Gantt chart from ProActive resources usage and Scheduler jobs" />
		<variable name="from" value="0000-00-00 00:00" model="PA:DATETIME(yyyy-MM-dd HH:mm)" />
		<variable name="to" value="0000-00-00 00:00" model="PA:DATETIME(yyyy-MM-dd HH:mm)" />
		<variable name="jobname" value=".+" />
		<variable name="jobid" value="" />
		<variable name="taskname" value=".+" />
		<variable name="node" value=".+" />
	</variables>
	<description>
    <![CDATA[ Generate a Gantt chart from ProActive Resources usages and Scheduler Jobs. Please setup SCHEDULER_PASSWORD third-party credentials (See Administrator Documentation to learn more). ]]>
  </description>
	<genericInformation>
		<info name="pca.action.icon"
			value="/automation-dashboard/styles/patterns/img/wf-icons/gantt_chart_ter.png" />
	</genericInformation>
	<taskFlow>
		<task name="pa_plot">
			<description>
        <![CDATA[ The simplest task, ran by a bash engine. ]]>
      </description>
			<genericInformation>
				<info name="task.icon"
					value="/automation-dashboard/styles/patterns/img/wf-icons/gantt_chart_ter.png" />
			</genericInformation>

			<forkEnvironment javaHome="/root/jre1.8.0_131">
				<envScript>
					<script>
						<code language="python">
              <![CDATA[
#Be aware, that the prefix command is internally split by spaces. So paths with spaces won't work.
# Prepare Docker parameters 
containerName = 'activeeon/pa_plot' 
dockerRunCommand =  'docker run ' 
dockerParameters = '--rm ' 
# Prepare ProActive home volume 
paHomeHost = variables.get("PA_SCHEDULER_HOME") 
paHomeContainer = variables.get("PA_SCHEDULER_HOME") 
proActiveHomeVolume = '-v '+paHomeHost +':'+paHomeContainer+' ' 
# Prepare working directory (For Dataspaces and serialized task file) 
workspaceHost = localspace 
workspaceContainer = localspace 
workspaceVolume = '-v '+localspace +':'+localspace+' ' 
# Prepare container working directory 
containerWorkingDirectory = '-w '+workspaceContainer+' ' 
# Save pre execution command into magic variable 'preJavaHomeCmd', which is picked up by the node 
preJavaHomeCmd = dockerRunCommand + dockerParameters + proActiveHomeVolume + workspaceVolume + containerWorkingDirectory + containerName
]]>
						</code>
					</script>
				</envScript>
			</forkEnvironment>
			<pre>
				<script>
					<code language="bash">
            <![CDATA[
if [ -z $variables_jobid ]
then
  jobid_argument=""
else
  jobid_argument="--jobid $variables_jobid"
fi

echo "BEFORE--> $variables_from $variables_to"

if [[ $variables_from == "0000-00-00 00:00" ]]
then
  variables_from=$(date -d '15 minutes ago' "+%Y-%m-%d %H:%M")
  variables_to=$(date "+%Y-%m-%d %H:%M")
fi
echo "AFTER--> $variables_from $variables_to"

pa_plot --url $variables_url -u $variables_PA_USER -p $credentials_SCHEDULER_PASSWORD -o gantt_chart.html --palette $variables_palette --color_key $variables_color_key --width $variables_width --height $variables_height --title "$variables_title" --from "$variables_from" --to "$variables_$variables_to" --jobname "$variables_jobname" --taskname "$variables_taskname" --node "$variables_node" $jobid_argument
]]>
					</code>
				</script>
			</pre>
			<scriptExecutable>
				<script>
					<code language="groovy">
            <![CDATA[
import com.google.common.net.MediaType;

file = new File("gantt_chart.html");
result = file.getBytes();
resultMetadata.put("file.name", "gantt_chart.html");
resultMetadata.put("content.type", MediaType.HTML_UTF_8.toString());
]]>
					</code>
				</script>
			</scriptExecutable>
			<post>
				<script>
					<code language="groovy">
            <![CDATA[

]]>
					</code>
				</script>
			</post>
		</task>
	</taskFlow>
</job>
