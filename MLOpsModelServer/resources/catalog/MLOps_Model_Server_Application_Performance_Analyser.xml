<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="MLOps_Model_Server_Application_Performance_Analyser" projectName="3. MLOps Model Server Workflows" tags="Model Inference" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="GRPC_INFERENCE_URL" value="" model="" description="HTTP inference url of the model server (e.g. localhost:8001)." group="Model Server" advanced="false" hidden="false"/>
    <variable name="MODEL_NAME" value="simple" model="PA:LIST(simple,simple_int8,densenet_onnx,inception_graphdef)" description="Name of the model to be tested." group="Model Server" advanced="false" hidden="false"/>
    <variable name="CONTAINER_PLATFORM" value="docker" model="PA:LIST(no-container,docker,podman,singularity)" description="Container platform used for executing the workflow tasks." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="CONTAINER_IMAGE" value="nvcr.io/nvidia/tritonserver:22.10-py3-sdk" model="PA:LIST(,nvcr.io/nvidia/tritonserver:22.10-py3-sdk)" description="Name of the container image being used to run the workflow tasks." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="CONCURRENCY_RANGE" value="1:4:1" model="PA:REGEXP(^(\d+):(\d+):(\d+)$)?" description="The option concurrency-range &lt;start&gt;:&lt;end&gt;:&lt;step&gt; enables data collection for a range of request concurrency levels." group="" advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ Analyze the performance of your deployed model by sending multiple inferences concurrently ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="ai-mlops-dashboard"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/model_server.png"/>
    <info name="Documentation" value="PAIO/PAIOUserGuide.html"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="MaaS_Server_Performance_Analyzer" 
    
    
    
    preciousResult="true" 
    fork="true"
    runAsMe="true" >
      <description>
        <![CDATA[ Simple task for MaaS Server Performance Analyzer ]]>
      </description>
      <variables>
        <variable name="TASK_FILE_PATH" value="main.py" inherited="false"    advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/model_server.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html"/>
        <info name="PRE_SCRIPT_AS_FILE" value="$TASK_FILE_PATH"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
GRPC_INFERENCE_URL = variables.get("GRPC_INFERENCE_URL")
MODEL_NAME = variables.get("MODEL_NAME")
CONCURRENCY_RANGE = variables.get("CONCURRENCY_RANGE")

// -------------------------------------------------------------
// Execute performance analyzer
try {
    def command = "perf_analyzer -i grpc -u $GRPC_INFERENCE_URL -m $MODEL_NAME --concurrency-range $CONCURRENCY_RANGE -f perf.csv"
    def output = command.execute().text
    println(output)
    // -------------------------------------------------------------
    // Preview performance results   
    //result = file.getBytes()
    //resultMetadata.put("content.type","text/html")
    // -------------------------------------------------------------
} catch(java.io.IOException e) {
    println("This model can not be tested using the performance analyzer")
}

// -------------------------------------------------------------
// -------------------------------------------------------------
// -------------------------------------------------------------

import groovy.io.FileType

// Read CSV file
def inputFile = new File('perf.csv')
def lines = inputFile.readLines()
def headers = lines[0].split(',')

// Generate HTML output
def html = new StringBuilder()
html << """
<!DOCTYPE html>
<html>
<head>
<style>
  table {
    width: 100%;
    border-collapse: collapse;
  }
  th, td {
    padding: 8px;
    text-align: left;
    border-bottom: 1px solid #ddd;
  }
  th {
    background-color: rgb(51, 122, 183);
    color: white; /* Optional - this will set the text color to white */
    font-weight: bold;
  }
  tr:nth-child(even) {
    background-color: #f2f2f2;
  }
</style>
</head>
<body>
<table>
"""

// Add table headers
html << '<tr>'
headers.each { header ->
    html << "<th>${header}</th>"
}
html << '</tr>'

// Add table data
lines.drop(1).each { line ->
    def values = line.split(',')
    html << '<tr>'
    values.each { value ->
        html << "<td>${value}</td>"
    }
    html << '</tr>'
}
byte[] htmlBytes = html.toString().getBytes("UTF-8")
result = htmlBytes
//result = result.encode('utf-8')
resultMetadata.put("file.extension", ".html")
resultMetadata.put("file.name", "output.html")
resultMetadata.put("content.type","text/html")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            151.47727966308594
        </positionTop>
        <positionLeft>
            347.9190368652344
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:1835px;
            height:2149px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-146.47727966308594px;left:-342.9190368652344px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_43" style="top: 151.477px; left: 347.919px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Simple task for MaaS Server Performance Analyzer"><img src="/automation-dashboard/styles/patterns/img/wf-icons/model_server.png" width="20px">&nbsp;<span class="name">MaaS_Server_Performance_Analyzer</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 442.5px; top: 181px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>