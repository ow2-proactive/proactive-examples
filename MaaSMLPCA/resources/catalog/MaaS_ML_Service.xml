<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.12" xsi:schemaLocation="urn:proactive:jobdescriptor:3.12 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.12/schedulerjob.xsd"  name="MaaS_ML_Service" projectName="Service Automation - Management" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="NATIVE_SCHEDULER" value="" />
    <variable name="NATIVE_SCHEDULER_PARAMS" value="" />
    <variable name="NODE_NAME" value="" />
    <variable name="INSTANCE_NAME" value="maas-ml-$PA_JOB_ID" />
    <variable name="ENDPOINT_ID" value="maas-ml-gui-$PA_JOB_ID" />
    <variable name="PROXYFIED" value="False" model="PA:Boolean"/>
    <variable name="HTTPS_ENABLED" value="False" model="PA:Boolean"/>
    <variable name="DEBUG_ENABLED" value="True" model="PA:Boolean"/>
    <variable name="TRACE_ENABLED" value="True" model="PA:Boolean"/>
    <variable name="DRIFT_ENABLED" value="True" model="PA:Boolean"/>
    <variable name="YAML_FILE" value="ml_service-api" />
    <variable name="PYTHON_ENTRYPOINT" value="ml_service" />
    <variable name="SERVICE_PORT" value="-1" />
    <variable name="ENGINE" value="docker" model="PA:List(docker,singularity)"/>
    <variable name="DOCKER_IMAGE" value="activeeon/maas_ml:latest" model="PA:LIST(activeeon/maas_ml:latest,activeeon/maas_ml:gpu)"/>
    <variable name="SINGULARITY_IMAGE_PATH" value="/tmp/maas_ml.sif" />
    <variable name="BUILD_IMAGE_IF_NOT_EXISTS" value="True" model="PA:Boolean"/>
    <variable name="GPU_ENABLED" value="False" model="PA:Boolean"/>
    <variable name="DRIFT_NOTIFICATION" value="True" model="PA:Boolean"/>
  </variables>
  <description>
    <![CDATA[ This service allows to launch an instance of MaaS_ML under the name: INSTANCE_NAME, through ProActive Service Automation (PSA) Portal. Using the launched instance, an already built, tested and validated ML model can be deployed to be employed for predictive purposes on new datasets.
The lifecycle of each MaaS_ML instance is constituted of four main phases:
1. Launching the MaaS_ML instance.
2. Deploying the ML model.
3. Calling the deployed ML model for predictions.
4. Finishing or terminating the MaaS_ML instance.
By clicking on the Execute Action button, you will be launching the MaaS_ML instance. The other phases and features can be consequently enacted using the available actions associated to each MaaS_ML instance.
For the descriptions of the workflow variables below, please check the documentation link. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="service-automation"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png"/>
    <info name="Documentation" value="../doc/PSA/PSAUserGuide.html#_model_service"/>
    <info name="pca.service.id" value="MaaS_ML"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Start_MaaS_ML_Service" 
    
    onTaskError="cancelJob" 
    
    
    fork="true">
      <description>
        <![CDATA[ Start the MaaS_ML as a service. ]]>
      </description>
      <variables>
        <variable name="SERVICE_ID" value="MaaS_ML" inherited="false" />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png"/>
        <info name="task.documentation" value="PSA/PSAUserGuide.html"/>
      </genericInformation>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Start/raw" language="groovy">
            <arguments>
              <argument value="true"/>
              <argument value="true"/>
              <argument value="NATIVE_SCHEDULER"/>
              <argument value="NATIVE_SCHEDULER_PARAMS"/>
              <argument value="NODE_NAME"/>
              <argument value="INSTANCE_NAME"/>
              <argument value="ENDPOINT_ID"/>
              <argument value="PROXYFIED"/>
              <argument value="HTTPS_ENABLED"/>
              <argument value="DEBUG_ENABLED"/>
              <argument value="TRACE_ENABLED"/>
              <argument value="DRIFT_ENABLED"/>
              <argument value="YAML_FILE"/>
              <argument value="PYTHON_ENTRYPOINT"/>
              <argument value="SERVICE_PORT"/>
              <argument value="ENGINE"/>
              <argument value="DOCKER_IMAGE"/>
              <argument value="SINGULARITY_IMAGE_PATH"/>
              <argument value="BUILD_IMAGE_IF_NOT_EXISTS"/>
              <argument value="GPU_ENABLED"/>
              <argument value="DRIFT_NOTIFICATION"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            489.4375
        </positionTop>
        <positionLeft>
            338.515625
        </positionLeft>
      </metadata>
    </task>
    <task name="Stop_MaaS_ML_Service" 
    
    onTaskError="cancelJob" 
    
    
    fork="true">
      <variables>
        <variable name="ACTION" value="Finish_MaaS_ML" inherited="false" model="PA:LIST(Finish_MaaS_ML, Pause_MaaS_ML, Resume_MaaS_ML, Update_MaaS_ML, Deploy_ML_Model)"/>
        <variable name="INSTANCE_ID" value="" inherited="false" />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png"/>
        <info name="task.documentation" value="PSA/PSAUserGuide.html"/>
      </genericInformation>
      <depends>
        <task ref="wait_for_stop"/>
      </depends>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Action/raw" language="groovy"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            745.4375
        </positionTop>
        <positionLeft>
            338.515625
        </positionLeft>
      </metadata>
    </task>
    <task name="wait_for_stop" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job. ]]>
      </description>
      <variables>
        <variable name="SIGNALS" value="Terminate_job_and_service" inherited="false" />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png"/>
        <info name="TASK.DOCUMENTATION" value="user/ProActiveUserGuide.html#_task_signal_api"/>
      </genericInformation>
      <depends>
        <task ref="Start_MaaS_ML_Service"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import com.google.common.base.Splitter;

if (variables.get("PA_TASK_ITERATION")==0){

    // Read the variable SIGNALS
	signals = variables.get("SIGNALS")

	// Split the value of the variable SIGNALS and transform it into a list
	Set signalsSet = new HashSet<>(Splitter.on(',').trimResults().omitEmptyStrings().splitToList(signals))

    // Send a ready notification for each signal in the set
    println("Ready for signals "+ signalsSet)
    signalsSet.each {
        signal -> signalapi.readyForSignal(signal)
    }

    // Add the signals set as a variable to be used by next tasks
    variables.put("SIGNALS_SET", signalsSet)
}

//Read the variable SIGNALS_SET
Set signalsSet =  variables.get("SIGNALS_SET")

// Check whether one signal among those specified as input is received
println("Checking whether one signal in the set "+ signalsSet +" is received")
receivedSignal = signalapi.checkForSignals(signalsSet)

// If a signal is received, remove ready signals and break the loop, else sleep 10 seconds then restart
if (receivedSignal != null){

    // remove ready signals
	signalapi.removeManySignals(new HashSet<>(signalsSet.collect { signal -> "ready_"+signal }))

    // print the received signal
    println("Received signal: "+ receivedSignal)
    result = receivedSignal

} else {
    result = null
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <loop target="wait_for_stop">
          <script>
            <code language="groovy">
              <![CDATA[
if (result!=null){
    loop = false
} else {
    loop = "* * * * *"
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            617.4375
        </positionTop>
        <positionLeft>
            338.515625
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2144px;
            height:2808px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-484.4375px;left:-333.515625px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_1" style="top: 489.438px; left: 338.516px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start the MaaS_ML as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png" width="20px">&nbsp;<span class="name">Start_MaaS_ML_Service</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_4" style="top: 745.438px; left: 338.516px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png" width="20px">&nbsp;<span class="name">Stop_MaaS_ML_Service</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_7" style="top: 617.438px; left: 338.516px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png" width="20px">&nbsp;<span class="name">wait_for_stop</span></a></div><svg style="position:absolute;left:378.5px;top:656.5px" width="43.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 22.5 88 C 32.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M23.40936,66.303232 L23.83038624209553,45.1177950938735 L19.047922429813696,52.999929315276646 L10.52708355737218,49.47923266405979 L23.40936,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M23.40936,66.303232 L23.83038624209553,45.1177950938735 L19.047922429813696,52.999929315276646 L10.52708355737218,49.47923266405979 L23.40936,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:378.5px;top:528.5px" width="43.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 32.5 50 22.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-0.9093600000000013,66.303232 L11.972916442627813,49.479232664059786 L3.4520775701862974,52.999929315276646 L-1.3303862420955355,45.11779509387349 L-0.9093600000000013,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-0.9093600000000013,66.303232 L11.972916442627813,49.479232664059786 L3.4520775701862974,52.999929315276646 L-1.3303862420955355,45.11779509387349 L-0.9093600000000013,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:419.0266769263776px;top:566.5px" width="20.473323073622403" height="141" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C -10 90 -10 -50 0 0 " transform="translate(19.973323073622403,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_21" style="position: absolute; transform: translate(-50%, -50%); left: 431px; top: 636.5px;">loop</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 401.5px; top: 519px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 401.5px; top: 775px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 401.5px; top: 735px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 379px; top: 647px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 379px; top: 607px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 429px; top: 607px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 429px; top: 647px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>