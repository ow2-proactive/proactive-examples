<?xml version="1.0" encoding="UTF-8"?>
<rule xmlns="urn:proactive:ruledescriptor:1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:proactive:ruledescriptor:1.0 https://www.activeeon.com/public_content/schemas/proactive/ruledescriptor/1.0/ruleschema.xsd">

    <variables>
        <variable name="nodeUrlVar" value="service:jmx:rmi:///jndi/rmi://tryqa.activeeon.com:59885/rmnode" />
        <variable name="bucketNameOfWorkflowAsActionVar" value="basic-examples" />
        <variable name="workflowNameAsActionVar" value="Native_Task_Linux" />
        <variable name="thresholdDiskWritesPerSecond" value="1000" />
        <variable name="pollingPeriodInSecondsVar" value="60" />
        <variable name="calmPeriodInSecondsVar" value="120" />
        <variable name="diskWritesMetric" value="sigar:Type=FileSystem,Name=/ DiskWrites" />
    </variables>

    <ruleImplementation>
        <pollingClass value="Jmx_Metrics">
            <parameters>
                <parameter name="jmxCredentialsFile" value="#pathToCredentialFileVar" />
                <parameter name="nodeUrl" value="#nodeUrlVar" />
                <parameter name="pollingPeriodInSeconds" value="#pollingPeriodInSecondsVar" />
                <parameter name="calmPeriodInSeconds" value="#calmPeriodInSecondsVar" />
            </parameters>
        </pollingClass>
        <kpis> <kpi>#diskWritesMetric</kpi> </kpis>
        <droolContent>
        <![CDATA[
package org.ow2.proactive.cloud_watch.rules
import java.util.*;
import  org.ow2.proactive.cloud_watch.model.*;
import  org.ow2.proactive.cloud_watch.service.*;
global org.ow2.proactive.cloud_watch.action.ActionExecutorFromCatalog executorWorkflowFromCatalog;
declare isNodeAction
 nodeMetrics: NodeMetrics
end

rule #autogenerated_rule_id when
    exists  kpi : NodeMetrics( url == "#nodeUrlVar" )
    $metric : NodeMetrics(metrics["#diskWritesMetric"] < #thresholdDiskWritesPerSecond)

then
    Map<String, String> parameters = new HashMap();
    parameters.put("credentialsPath","#pathToCredentialFileVar");
    executorWorkflowFromCatalog.submitToScheduler(parameters, "#autogenerated_rule_id", "{'bucket_name':'#bucketNameOfWorkflowAsActionVar','workflow_name':'#workflowNameAsActionVar','variables':{}}");
end
]]>
        </droolContent>
    </ruleImplementation>
</rule>
