<?xml version="1.0" encoding="UTF-8"?>
<rule xmlns="urn:proactive:ruledescriptor:1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:proactive:ruledescriptor:1.0 https://www.activeeon.com/public_content/schemas/proactive/ruledescriptor/1.0/ruleschema.xsd">
    <name>FSUsagePercentageRule</name>

    <variables>
        <variable name="percentageUsedLimit" value="90" />
        <variable name="totalSizeFSMetric" value="sigar:Type=FileSystem,Name=/ Total" />
        <variable name="usedSizeFSMetric" value="sigar:Type=FileSystem,Name=/ Used" />
        <variable name="nodeUrlVar" value="service:jmx:rmi:///jndi/rmi://tryqa.activeeon.com:59885/rmnode" />
        <variable name="pathToCredentialFileVar" value="/home/cperMaster/opt/proactive/scheduling/config/authentication/admin_user.cred" />
        <variable name="bucketNameOfWorkflowAsActionVar" value="cloud-automation" />
        <variable name="workflowNameAsActionVar" value="PCW_action_wf" />
        <variable name="pollingPeriodInSecondsVar" value="10" />
        <variable name="calmPeriodInSecondsVar" value="20" />
    </variables>

    <ruleImplementation>
        <pollingClass value="Jmx_Metrics">
            <parameters>
                <parameter name="jmxCredentialsFile" value="#pathToCredentialFileVar" />
                <parameter name="nodeUrl" value="#nodeUrlVar" />
                <parameter name="pollingPeriodInSeconds" value="#pollingPeriodInSecondsVar" />
                <parameter name="calmPeriodInSeconds" value="#calmPeriodInSecondsVar" />
            </parameters>
        </pollingClass>
        <kpis>
            <kpi>#totalSizeFSMetric</kpi>
            <kpi>#usedSizeFSMetric</kpi>
        </kpis>
        <droolContent>
            <![CDATA[
 package org.ow2.proactive.cloud_watch.rules
 import java.util.*;
 import  org.ow2.proactive.cloud_watch.model.*;
import  org.ow2.proactive.cloud_watch.service.*;
global org.ow2.proactive.cloud_watch.action.ActionExecutor actionExecutorCloudAutomationService;
declare isNodeAction
 nodeMetrics: NodeMetrics
end

rule FSUsagePercentageRule
when
  exists  kpi : NodeMetrics( url == "#nodeUrlVar" )
  $result : NodeMetrics($metricTotal : metrics["#totalSizeFSMetric"])
 NodeMetrics($metricUsed : metrics["#usedSizeFSMetric"] / $metricTotal * 100 > #percentageUsedLimit)
then
    System.out.println("In then condition of rule for file system limit, amount of used: " + $metricUsed);
    Map<String, String> parameters = new HashMap();
	parameters.put("credentialsPath","#pathToCredentialFile");
    actionExecutorCloudAutomationService.execute(parameters, "FSUsagePercentageRule", "{'bucket_name':'#workflowNameAsActionVar','workflow_name':'#workflowNameAsActionVar','variables':{}}");
end
]]>
        </droolContent>
    </ruleImplementation>
</rule>