<?xml version="1.0" encoding="UTF-8"?>
<job xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:proactive:jobdescriptor:3.9"
	xsi:schemaLocation="urn:proactive:jobdescriptor:3.9 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.9/schedulerjob.xsd"
	name="Load_Trained_Model" projectName="2. Input and Output Data"
	priority="normal" onTaskError="continueJobExecution"
	maxNumberOfExecution="2">
	<description>
    <![CDATA[ Load a trained model, and use the model to make prediction for new data. ]]>
	</description>
	<genericInformation>
		<info name="bucketName" value="machine-learning" />
		<info name="pca.action.icon"
			value="/automation-dashboard/styles/patterns/img/wf-icons/load_model.png" />
		<info name="Documentation"
			value="https://doc.activeeon.com/latest/MLOS/MLOSUserGuide.html#_machine_learning_bucket" />
		<info name="group" value="public-objects" />
	</genericInformation>
	<taskFlow>
		<task name="Load_Trained_Model">
			<description>
        <![CDATA[ Load a trained model, and use the model to make prediction for new data. ]]>
			</description>
			<variables>
				<variable name="MODEL_URL"
					value="https://s3.eu-west-2.amazonaws.com/activeeon-public/models/pima-indians-diabetes.model"
					inherited="false" />
			</variables>
			<genericInformation>
				<info name="task.icon"
					value="/automation-dashboard/styles/patterns/img/wf-icons/load_model.png" />
			</genericInformation>
			<forkEnvironment javaHome="${PA_SCHEDULER_HOME}/jre">
				<envScript>
					<script>
						<code language="python">
              <![CDATA[
#Be aware, that the prefix command is internally split by spaces. So paths with spaces won't work.
# Prepare Docker parameters 
containerName = 'activeeon/dlm3' 
dockerRunCommand =  'docker run ' 
dockerParameters = '--rm ' 
# Prepare ProActive home volume 
paHomeHost = variables.get("PA_SCHEDULER_HOME") 
paHomeContainer = variables.get("PA_SCHEDULER_HOME") 
proActiveHomeVolume = '-v '+paHomeHost +':'+paHomeContainer+' ' 
# Prepare working directory (For Dataspaces and serialized task file) 
workspaceHost = localspace 
workspaceContainer = localspace 
workspaceVolume = '-v '+localspace +':'+localspace+' ' 
# Prepare container working directory 
containerWorkingDirectory = '-w '+workspaceContainer+' ' 
# Save pre execution command into magic variable 'preJavaHomeCmd', which is picked up by the node 
preJavaHomeCmd = dockerRunCommand + dockerParameters + proActiveHomeVolume + workspaceVolume + containerWorkingDirectory + containerName
]]>
						</code>
					</script>
				</envScript>
			</forkEnvironment>
			<scriptExecutable>
				<script>
					<code language="cpython">
            <![CDATA[
print("BEGIN Load_Model")

import pickle
import wget

MODEL_GET = str(variables.get("MODEL_URL"))
filename = wget.download(MODEL_GET)
model = pickle.load(open(filename, "rb"))
model_bin = pickle.dumps(model)

variables.put("MODEL", model_bin)

print("END Load_Model")
]]>
					</code>
				</script>
			</scriptExecutable>
			<controlFlow block="none"></controlFlow>
			<post>
				<script>
					<code language="groovy">
            <![CDATA[
variables.put("PREVIOUS_PA_TASK_NAME", variables.get("PA_TASK_NAME"))
]]>
					</code>
				</script>
			</post>
		</task>
	</taskFlow>
</job>
