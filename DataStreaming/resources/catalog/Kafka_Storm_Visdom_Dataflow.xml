<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Kafka_Storm_Visdom_Dataflow" projectName="09. Data Streaming Workflows" tags="Streaming,Storm,Zookeeper,Big Data,Kafka,Visdom,Dataflow" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="1"  >
  <variables>
    <variable name="dataflow_name" value="BitcoinExchangeDataflow"     />
    <variable name="execution_duration" value="60"     />
    <variable name="automatic_kill" value="true" model="PA:Boolean"    />
    <variable name="kafka_instance_name" value="kafka-server-$PA_JOB_ID"   group="Kafka" advanced="false" hidden="false"/>
    <variable name="kafka_service_id" value="Kafka"   group="Kafka" advanced="true" hidden="false"/>
    <variable name="message_topic" value="BitCoinExchangeTopic"    advanced="false" hidden="false"/>
    <variable name="storm_instance_name" value="storm-cluster-$PA_JOB_ID"   group="Storm" advanced="false" hidden="false"/>
    <variable name="storm_service_id" value="Storm"   group="Storm" advanced="true" hidden="false"/>
    <variable name="zookeeper_instance_name" value="zookeeper-server-$PA_JOB_ID"   group="Zookeeper" advanced="false" hidden="false"/>
    <variable name="zookeeper_service_id" value="Zookeeper"   group="Zookeeper" advanced="true" hidden="false"/>
    <variable name="visdom_instance_name" value="visdom-server-$PA_JOB_ID"  description="Name of the Visdom service instance to use." group="Visdom" advanced="false" hidden="false"/>
    <variable name="visdom_service_id" value="Visdom"   group="Visdom" advanced="true" hidden="false"/>
    <variable name="VISDOM_ENABLE_LOGIN" value="false" model="PA:Boolean" description="If True, a login in required for accessing the Visdom service." group="Visdom" advanced="false" hidden="false"/>
    <variable name="PROXYFIED" value="true" model="PA:Boolean" description="True if a proxy is needed to protect the access to this model-service endpoint" group="Visdom" advanced="true" hidden="false"/>
    <variable name="VISDOM_USERNAME" value=""  description="Username to access the Visdom service." group="Visdom" advanced="false" hidden="false"/>
    <variable name="VISDOM_PASSWORD" value=""  description="Password to access the Visdom service." group="Visdom" advanced="false" hidden="false"/>
    <variable name="HOST" value="" model="PA:MODEL_FROM_URL(${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/hosts)" description="Host where this workflow&#39;s services will be deployed. This parameter is optional but it is recommended to choose a host with at least 8 nodes deployed."  advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ This workflow calls ProActive-Service-Automation service to deploy instances of (i) Apache Zookeeper coordination server (https://zookeeper.apache.org/), (ii) Apache Kafka publish/subscribe system (https://kafka.apache.org/), and (iii) Apache Storm stream processing system (http://storm.apache.org). It further runs a (Apache Storm) dataflow application that processes a stream of real-time data dealing with the Chinese Yuan to Bitcoin exchange rate.
The workflow will execute several services in a single host. Accordingly it must run on a host with at least 8 nodes available. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="data-big-data"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/bigdata.png"/>
    <info name="Documentation" value="https://ow2-proactive.github.io/proactive-examples/DeepLearningWorkflows/resources/doc/V1/ActiveEon-Data+Streaming-Doc.pdf"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Submit_Dataflow" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Submit Storm topology ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/storm.png"/>
      </genericInformation>
      <depends>
        <task ref="Start_Storm"/>
        <task ref="create_topic"/>
        <task ref="Start_Visdom_Service"/>
      </depends>
      <inputFiles>
        <files  includes="BitcoinExchangeDataflow-1.0.jar" accessMode="transferFromGlobalSpace"/>
        <files  includes="BitcoinExchangeDataflow.yaml" accessMode="transferFromGlobalSpace"/>
        <files  includes="BitcoinExchangeDataflow.properties" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
            <arguments>
              <argument value="${HOST}"/>
            </arguments>
          </file>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
NIMBUS=$variables_storm_instance_name"-nimbus"
DATAFLOW=$variables_dataflow_name

ZOOKEEPER_ENDPOINT=$variables_zookeeper_endpoint
KAFKA_ENDPOINT=$variables_kafka_endpoint

echo "kafka.zookeeper.hosts: $ZOOKEEPER_ENDPOINT" >> BitcoinExchangeDataflow.properties
echo "kafka.bootstrap.servers: $KAFKA_ENDPOINT" >> BitcoinExchangeDataflow.properties

docker exec $NIMBUS mkdir -p /topologies

docker cp BitcoinExchangeDataflow-1.0.jar $NIMBUS:/topologies/
docker cp BitcoinExchangeDataflow.yaml $NIMBUS:/topologies/
docker cp BitcoinExchangeDataflow.properties $NIMBUS:/topologies/

##test if dataflow exists
docker exec -i  $NIMBUS storm list | grep -w "$DATAFLOW" && result=$?

if [[ "$result" == 0 ]]; then
	echo "Dataflow $DATAFLOW already exists, killing it"
    docker exec -i  $NIMBUS storm kill $DATAFLOW -w 1
    sleep 10
fi

## deploy dataflow
docker exec -i $NIMBUS storm jar /topologies/BitcoinExchangeDataflow-1.0.jar org.apache.storm.flux.Flux --remote /topologies/BitcoinExchangeDataflow.yaml --filter /topologies/BitcoinExchangeDataflow.properties
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            536.5625
        </positionTop>
        <positionLeft>
            594.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="Vis-Rate" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Send bitcoin rate data to Visdom server ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
      </genericInformation>
      <depends>
        <task ref="Submit_Dataflow"/>
      </depends>
      <inputFiles>
        <files  includes="visdomRateClient.py" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
            <arguments>
              <argument value="${HOST}"/>
            </arguments>
          </file>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
KAFKA=$variables_kafka_instance_name
VISDOM=$variables_visdom_instance_name
TOPIC=BitCoinRateTopic

pyscript=visdomRateClient.py
timeout=$variables_execution_duration

docker cp $pyscript $VISDOM:/root/$pyscript

docker exec $VISDOM /bin/bash -c 'rm rate.pckl'

timeout $timeout docker exec -i $KAFKA /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic $TOPIC | \
while read LINE; do
    docker exec $VISDOM /bin/bash -c "python $pyscript --value $LINE"
done

exit 0
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            664.5625
        </positionTop>
        <positionLeft>
            338.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="Vis_Variation" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Send bitcoin rate variation to Visdom server ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
      </genericInformation>
      <depends>
        <task ref="Submit_Dataflow"/>
      </depends>
      <inputFiles>
        <files  includes="visdomGapClient.py" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
            <arguments>
              <argument value="${HOST}"/>
            </arguments>
          </file>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
KAFKA=$variables_kafka_instance_name
VISDOM=$variables_visdom_instance_name
TOPIC=BitCoinGapTopic

pyscript=visdomGapClient.py
timeout=$variables_execution_duration

docker cp $pyscript $VISDOM:/root/$pyscript

docker exec $VISDOM /bin/bash -c 'rm gap.pckl'

timeout $timeout docker exec -i $KAFKA /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic $TOPIC | \
while read LINE; do
    docker exec $VISDOM /bin/bash -c "python $pyscript --value $LINE"
done

exit 0
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            665.5625
        </positionTop>
        <positionLeft>
            468.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="View_Result" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Give link to view results on Visdom and dataflow status on Storm ]]>
      </description>
      <depends>
        <task ref="Submit_Dataflow"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
visdomInstanceName =  variables.get("visdom_instance_name")
visdomEndpointKey = "ENDPOINT_" + visdomInstanceName
visdomEndpoint = variables.get(visdomEndpointKey)

result = '<meta http-equiv="refresh" content="1; url=' + visdomEndpoint + '/" />'
result+= '<h2><span style="color:black">Please wait while redirecting...</span></h2>'
resultMetadata.put("content.type", "text/html")
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            664.5625
        </positionTop>
        <positionLeft>
            594.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="Poll_Data" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Poll online data and send it to Kafka topic (input of the dataflow) ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/kafka.png"/>
      </genericInformation>
      <depends>
        <task ref="Submit_Dataflow"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
            <arguments>
              <argument value="${HOST}"/>
            </arguments>
          </file>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
KAFKA=$variables_kafka_instance_name
TOPIC=$variables_message_topic
ENDPOINT=$variables_kafka_endpoint

end=$((SECONDS+$variables_execution_duration))

counter=0
while [ $SECONDS -lt $end ]; do

	#message1=$(curl -s "https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=BTC&to_currency=CNY&apikey=PVCAYZTDBSG37ARW")
	#message2=$(curl -s "https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=BTC&to_currency=CNY&apikey=PVCAYZTDBSG37ARW")
	#message3=$(curl -s "https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=BTC&to_currency=CNY&apikey=PVCAYZTDBSG37ARW")    
 	#docker exec -i $KAFKA /opt/kafka/bin/kafka-console-producer.sh --broker-list localhost:9092 --topic $TOPIC <<< $message1$'\n'$message2$'\n'$message3    
    
    message1=$(shuf -i 25000-35000 -n 1)
    message2=$(shuf -i 25000-35000 -n 1)
    message3=$(shuf -i 25000-35000 -n 1)
    
    echo "$message1$'\n'$message2$'\n'$message3"
    
    docker run -i --rm bitnami/kafka:3.5 /opt/bitnami/kafka/bin/kafka-console-producer.sh --bootstrap-server $ENDPOINT --topic $TOPIC --producer.config /opt/bitnami/kafka/config/producer.properties  <<< $message1$'\n'$message2$'\n'$message3
     (( counter=counter+3 ))

done
echo $counter
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            664.5625
        </positionTop>
        <positionLeft>
            723.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="Vis_Alerts" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Send bitcoin alerts to Visdom server ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
      </genericInformation>
      <depends>
        <task ref="Submit_Dataflow"/>
      </depends>
      <inputFiles>
        <files  includes="visdomAlertClient.py" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
            <arguments>
              <argument value="${HOST}"/>
            </arguments>
          </file>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
KAFKA=$variables_kafka_instance_name
VISDOM=$variables_visdom_instance_name
TOPIC=BitCoinAlertTopic

pyscript=visdomAlertClient.py
timeout=$variables_execution_duration

docker cp $pyscript $VISDOM:/root/$pyscript

docker exec $VISDOM /bin/bash -c 'rm alerts.pckl'

timeout $timeout docker exec -i $KAFKA /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic $TOPIC | \
while read LINE; do
    docker exec $VISDOM /bin/bash -c "python $pyscript --value '$LINE'"
done

exit 0
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            664.5625
        </positionTop>
        <positionLeft>
            850.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="Stop_Services" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Stop PSA services, Zookeeper, Kafka, Storm and Visdom. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/proactive.png"/>
      </genericInformation>
      <depends>
        <task ref="Stop_Dataflow_Application"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.ow2.proactive.pca.service.client.ApiClient
import org.ow2.proactive.pca.service.client.api.ServiceInstanceRestApi
import org.ow2.proactive.pca.service.client.model.ServiceInstanceData
import org.ow2.proactive.pca.service.client.model.ServiceDescription

// Get schedulerapi access
schedulerapi.connect()

// Acquire session id
def session_id = schedulerapi.getSession()
println(session_id)

// Define PCA URL
def pca_url = variables.get('PA_CLOUD_AUTOMATION_REST_URL')

// Connect to APIs
def api_client = new ApiClient()
api_client.setBasePath(pca_url)
//api_client.setDebugging(true)
def service_instance_rest_api = new ServiceInstanceRestApi(api_client)

// Finish Zookeeper
/*ServiceDescription zookeeperFinishService = new ServiceDescription()
zookeeperFinishService.setBucketName("service-automation")
zookeeperFinishService.setWorkflowName("Finish_Zookeeper")
service_instance_rest_api.launchServiceInstanceAction(session_id, variables.get("zookeeper_instance_id"), zookeeperFinishService, variables.get("PA_JOB_ID"))*/

// Finish Kafka
ServiceDescription kafkaFinishService = new ServiceDescription()
kafkaFinishService.setBucketName("service-automation")
kafkaFinishService.setWorkflowName("Finish_Kafka")
service_instance_rest_api.launchServiceInstanceAction(session_id, variables.get("kafka_instance_id"), kafkaFinishService, variables.get("PA_JOB_ID"))

// Finish Storm
ServiceDescription stormFinishService = new ServiceDescription()
stormFinishService.setBucketName("service-automation")
stormFinishService.setWorkflowName("Finish_Storm")
service_instance_rest_api.launchServiceInstanceAction(session_id, variables.get("storm_instance_id"), stormFinishService, variables.get("PA_JOB_ID"))
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            1045.5625
        </positionTop>
        <positionLeft>
            658.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="Finish" 
    
    
    
    
    fork="true">
      <depends>
        <task ref="Vis-Rate"/>
        <task ref="Vis_Variation"/>
        <task ref="Vis_Alerts"/>
        <task ref="View_Result"/>
        <task ref="Poll_Data"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[

]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <if target="Immediately"
        else="After_Web_Validation"
        continuation="Stop_Dataflow_Application">
          <script>
            <code language="javascript">
              <![CDATA[
kill=variables.get("automatic_kill")
if(kill=="true"){
    branch = "if";
} else {
    branch = "else";
}
]]>
            </code>
          </script>
        </if>
      </controlFlow>
      <metadata>
        <positionTop>
            792.5625
        </positionTop>
        <positionLeft>
            594.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="Immediately" 
    
    
    
    
    fork="true">
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
echo "Stopping dataflow and removing PSA platforms immediately"
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            920.5625
        </positionTop>
        <positionLeft>
            466.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="After_Web_Validation" 
    
    
    
    
    fork="true">
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/control-notification/resources/Web_Validation_Script/raw" language="groovy">
            <arguments>
              <argument value="Please validate to terminate the Kafka-Storm-Visdom Dataflow"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            920.5625
        </positionTop>
        <positionLeft>
            594.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="Stop_Dataflow_Application" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Remove Storm topology ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/storm.png"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
            <arguments>
              <argument value="${HOST}"/>
            </arguments>
          </file>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
ZOOKEEPER=$variables_zookeeper_endpoint
NIMBUS=$variables_storm_instance_name"-nimbus"
KAFKA=$variables_kafka_instance_name

docker exec -i $NIMBUS storm kill $variables_dataflow_name -w 5

#docker exec $KAFKA /opt/kafka/bin/kafka-topics.sh --zookeeper $ZOOKEEPER --delete --topic BitCoinRateTopic
#docker exec $KAFKA /opt/kafka/bin/kafka-topics.sh --zookeeper $ZOOKEEPER --delete --topic BitCoinGapTopic
#docker exec $KAFKA /opt/kafka/bin/kafka-topics.sh --zookeeper $ZOOKEEPER --delete --topic BitCoinAlertTopic

#docker run -i --rm bitnami/kafka:3.5 kafka-topics.sh --delete --bootstrap-server $variables_kafka_endpoint --topic BitCoinRateTopic
#docker run -i --rm bitnami/kafka:3.5 kafka-topics.sh --delete --bootstrap-server $variables_kafka_endpoint --topic BitCoinGapTopic
#docker run -i --rm bitnami/kafka:3.5 kafka-topics.sh --delete --bootstrap-server $variables_kafka_endpoint --topic BitCoinAlertTopic
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            916.5625
        </positionTop>
        <positionLeft>
            789.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="Start_Storm" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/storm.png"/>
      </genericInformation>
      <depends>
        <task ref="start_kafka"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
            <arguments>
              <argument value="${HOST}"/>
            </arguments>
          </file>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.ow2.proactive.pca.service.client.ApiClient
import org.ow2.proactive.pca.service.client.api.ServiceInstanceRestApi
import org.ow2.proactive.pca.service.client.model.ServiceInstanceData
import org.ow2.proactive.pca.service.client.model.ServiceDescription


// Get schedulerapi access
schedulerapi.connect()

// Acquire session id
def session_id = schedulerapi.getSession()
println(session_id)

// Define PCA URL
def pca_url = variables.get('PA_CLOUD_AUTOMATION_REST_URL')

// Connect to APIs
def api_client = new ApiClient()
api_client.setBasePath(pca_url)
//api_client.setDebugging(true)
def service_instance_rest_api = new ServiceInstanceRestApi(api_client)

// Check existing storm instances
def storm_service_id = variables.get("storm_service_id")
def storm_instance_name = variables.get("storm_instance_name")
boolean instance_exists = false
List<ServiceInstanceData> service_instances = service_instance_rest_api.getServiceInstances(session_id, null)

for (ServiceInstanceData service_instance_data : service_instances) {

	if ( (service_instance_data.getServiceId() == storm_service_id) && (service_instance_data.getInstanceStatus()  == "RUNNING")){

      if (service_instance_data.getVariables().get("INSTANCE_NAME") == storm_instance_name) {
        instance_exists = true
        variables.put("storm_instance_id", service_instance_data.getInstanceId())
        variables.put("storm_endpoint", service_instance_data.getDeployments().iterator().next().getEndpoint().getUrl())
        println(variables.get("storm_endpoint"))
        break
      }
  	}
}

if (!instance_exists){
  def zookeeper_instance_name = variables.get("zookeeper_instance_name")
  def zookeeper_service_id = variables.get("zookeeper_service_id")
  // Prepare storm description
  ServiceDescription serviceDescription = new ServiceDescription()
  serviceDescription.setBucketName("service-automation")
  serviceDescription.setWorkflowName(storm_service_id)
  serviceDescription.putVariablesItem("INSTANCE_NAME", storm_instance_name)
  serviceDescription.putVariablesItem("ZOOKEEPER_INSTANCE_NAME", zookeeper_instance_name)
  serviceDescription.putVariablesItem("ZOOKEEPER_SERVICE_ID", zookeeper_service_id)
  serviceDescription.putVariablesItem("HOST", variables.get( "PA_NODE_HOST" ))

  // Run storm
  def service_instance_data = service_instance_rest_api.createRunningServiceInstance(session_id, serviceDescription, Integer.parseInt(variables.get("PA_JOB_ID")))

  // Acquire storm Instance ID
  def service_instance_id  = service_instance_data.getInstanceId()

  // Create synchro channel
  channel = "Service_Instance_" + service_instance_id
  synchronizationapi.createChannelIfAbsent(channel, false)
  synchronizationapi.waitUntil(channel, "RUNNING_STATE", "{k,x -> x == 1}")

  // Acquire storm endpoint
  service_instance_data = service_instance_rest_api.getServiceInstance(session_id, service_instance_id)
  variables.put("storm_instance_id", service_instance_data.getInstanceId())
  variables.put("storm_endpoint", service_instance_data.getDeployments().iterator().next().getEndpoint().getUrl())
  println(variables.get("storm_endpoint"))
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            268.5625
        </positionTop>
        <positionLeft>
            420.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="Start_Visdom_Service" 
    
    onTaskError="cancelJob" 
    
    
    fork="true">
      <description>
        <![CDATA[ Start the Visdom server as a service. ]]>
      </description>
      <variables>
        <variable name="SERVICE_ID" value="$visdom_service_id" inherited="true"  description="The name of the service. Please keep the default value for this variable."   />
        <variable name="INSTANCE_NAME" value="$visdom_instance_name" inherited="true"  description="Service instance name."   />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html"/>
      </genericInformation>
      <depends>
        <task ref="start_kafka"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
            <arguments>
              <argument value="${HOST}"/>
            </arguments>
          </file>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Start/raw" language="groovy">
            <arguments>
              <argument value="true"/>
              <argument value="PROXYFIED"/>
              <argument value="VISDOM_ENABLE_LOGIN"/>
              <argument value="VISDOM_USERNAME"/>
              <argument value="VISDOM_PASSWORD"/>
              <argument value="HOST"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            269.5625
        </positionTop>
        <positionLeft>
            732.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="Visdom_Service_Actions" 
    
    onTaskError="cancelJob" 
    
    
    fork="true">
      <description>
        <![CDATA[ Manage the life-cycle of Visdom PSA service. It allows to trigger the following action: Finish_Visdom.
It requires the following variables:
INSTANCE_ID: if used alone or;
INSTANCE_NAME: if used within the same workflow as a Visdom_Service_Start task. In this case there is no need for an INSTANCE_ID.
ACTION: the action to execute on the Visdom service among the aforementioned actions. ]]>
      </description>
      <variables>
        <variable name="INSTANCE_NAME" value="$visdom_instance_name" inherited="true"  description="Service instance name."   />
        <variable name="SERVICE_ACTION_WORKFLOW" value="service-automation/Finish_Visdom" inherited="false" model="PA:CATALOG_OBJECT(Workflow/psa,,,%Visdom)" description="The action that will be processed regarding the service status."  advanced="false" hidden="false"/>
        <variable name="INSTANCE_ID" value="" inherited="false"  description="The service instance ID"   />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html"/>
      </genericInformation>
      <depends>
        <task ref="Stop_Dataflow_Application"/>
      </depends>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Action/raw" language="groovy">
            <arguments>
              <argument value="INSTANCE_NAME"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            1050.5625
        </positionTop>
        <positionLeft>
            839.59375
        </positionLeft>
      </metadata>
    </task>
    <task name="start_kafka" 
    
    onTaskError="cancelJob" 
    
    
    fork="false">
      <description>
        <![CDATA[ A task that starts Kafka as a service. ]]>
      </description>
      <variables>
        <variable name="SERVICE_ACTIVATION_WORKFLOW" value="service-automation/Kafka" inherited="false" model="PA:CATALOG_OBJECT(Workflow/psa,,,Kafka%)" description="The Kafka service activation workflow. Please keep the default value for this variable."  advanced="false" hidden="false"/>
        <variable name="INSTANCE_NAME" value="${kafka_instance_name}" inherited="false"  description="Name of the Kafka instance to start"  advanced="false" hidden="false"/>
        <variable name="ZOOKEEPER_INSTANCE_NAME" value="${zookeeper_instance_name}" inherited="false"    advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/kafka.png"/>
        <info name="task.documentation" value="PSA/PSAUserGuide.html"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
            
///////////////////////////////////////////////////////////////////////////////
//   This script is used to start a PSA service from a Groovy task           //
//   To use this script in a task, users should provide:                     //
//   1- A task variable named `INSTANCE_NAME` of type PA:NOT_EMPTY_STRING    //
//   that will be used to identify the PSA instance                          //
//   2- At least one task variable to identify the service to deploy:        //
//      i- A valid `SERVICE_ID` of type PA:NOT_EMPTY_STRING                  //
//     ii- A `SERVICE_ACTIVATION_WORKFLOW` of type PA:CATALOG_OBJECT         //
//    N.B: We recommend using `SERVICE_ACTIVATION_WORKFLOW`.                 //
//   3- A boolean argument (true/false) to say if the related service        //
//      should be published.                                                 //
///////////////////////////////////////////////////////////////////////////////

import org.ow2.proactive.pca.service.client.ApiClient
import org.ow2.proactive.pca.service.client.api.ServiceInstanceRestApi
import org.ow2.proactive.pca.service.client.model.ServiceInstanceData
import org.ow2.proactive.pca.service.client.model.ServiceDescription
import org.ow2.proactive.pca.service.client.model.CloudAutomationWorkflow
import org.ow2.proactive.pca.service.client.api.CatalogRestApi
import com.google.common.base.Strings;

println("BEGIN " + variables.get("PA_TASK_NAME"))

// Get schedulerapi access
schedulerapi.connect()

// Acquire session id
def sessionId = schedulerapi.getSession()

// Define PCA URL
def pcaUrl = variables.get('PA_CLOUD_AUTOMATION_REST_URL')

// Connect to APIs
def apiClient = new ApiClient()
apiClient.setBasePath(pcaUrl)
//apiClient.setDebugging(true)
def serviceInstanceRestApi = new ServiceInstanceRestApi(apiClient)
def catalogRestApi = new CatalogRestApi(apiClient)

def serviceId = variables.get("SERVICE_ID")
def instanceName = variables.get("INSTANCE_NAME")
def serviceActivationWorkflow = variables.get("SERVICE_ACTIVATION_WORKFLOW")

def bucketName
def startingWorkflowName
def serviceVariables

if (serviceActivationWorkflow != null) {
    def serviceActivationWorkflowSplits = serviceActivationWorkflow.split('/')
    bucketName = serviceActivationWorkflowSplits[0]
    startingWorkflowName = serviceActivationWorkflowSplits[1]
    println("Service Bucket_name: " + bucketName + ", Workflow_name: " + startingWorkflowName)
}

def publishService = false
def enableServiceActions = true
if (binding.variables["args"]) {
    if (args.length > 0) {
        publishService = Boolean.parseBoolean(args[0])
    }
    if (args.length > 1) {
        enableServiceActions = Boolean.parseBoolean(args[1])
    }
}

if (!Strings.isNullOrEmpty(serviceId)) {
    // Get the service workflow
    // Check that the provided serviceId belongs to the existing Service Activation list
    List<CloudAutomationWorkflow> listStartingWorkflows = catalogRestApi.getWorkflowsByServiceId(sessionId, serviceId)
    if (!listStartingWorkflows) {
        throw new IllegalArgumentException("The provided SERVICE_ID is not valid.")
    }
    // Check when SERVICE_ID and SERVICE_ACTIVATION_WORKFLOW are provided the specific service activation workflow
    if (serviceActivationWorkflow != null) {
        for (CloudAutomationWorkflow cloudAutomationWorkflow : listStartingWorkflows) {
            if (cloudAutomationWorkflow.getName().equals(startingWorkflowName) && cloudAutomationWorkflow.getBucket().equals(bucketName)) {
                serviceVariables = cloudAutomationWorkflow.getVariables().collectEntries {var -> [var.getName(), var.getValue()]}
                println("The provided SERVICE_ID and SERVICE_ACTIVATION_WORKFLOW are compatible.")
                break
            }
        }
        if (serviceVariables == null) {
            throw new IllegalArgumentException("The provided SERVICE_ID and SERVICE_ACTIVATION_WORKFLOW does not belong to the same PSA Service.")
        }
    } else {
        // Get the first valid activation workflow
        startingWorkflowName = listStartingWorkflows[0].getName()
        bucketName = listStartingWorkflows[0].getBucket()
        serviceVariables = listStartingWorkflows[0].getVariables().collectEntries {var -> [var.getName(), var.getValue()]}
    }
} else if (serviceActivationWorkflow != null) {
    //Identifying the starting workflow, the service ID and the default variables inside the catalog
    def cloudAutomationWorkflow = catalogRestApi.getWorkflowByCatalogObject(sessionId, bucketName, startingWorkflowName)
    if (cloudAutomationWorkflow != null) {
        serviceId = cloudAutomationWorkflow.getGenericInformation().getServiceId()
        serviceVariables = cloudAutomationWorkflow.getVariables().collectEntries {var -> [var.getName(), var.getValue()]}
        println("Found Service_id : " + serviceId)
    }
} else {
    throw new IllegalArgumentException("The provided SERVICE_ID or SERVICE_ACTIVATION_WORKFLOW does not belong to the existing Service Activation list. You have to specify an existing service ID or service activation workflow.")
}

println("SERVICE_ID: " + serviceId)
println("INSTANCE_NAME: " + instanceName)


    // Retrieve and update workflow variables
    if (binding.variables["args"]){
        for (String var: args){
            if (variables.containsKey(var)) {
                serviceVariables.put(var, variables.get(var))
            }
        }
    }

    // Prepare service description
    ServiceDescription serviceDescription = new ServiceDescription()
    serviceDescription.setBucketName(bucketName)
    serviceDescription.setWorkflowName(startingWorkflowName)
    if( !serviceVariables.isEmpty() ){
        serviceVariables.each{ k, v -> serviceDescription.putVariablesItem("${k}", "${v}") }
    }
    // Add INSTANCE_NAME variable which is conventionnally required for docker-based PCA Services
    serviceDescription.putVariablesItem("INSTANCE_NAME", instanceName)

    // Run service
    def serviceInstanceData = serviceInstanceRestApi.createRunningServiceInstance(sessionId, serviceDescription, Integer.parseInt(variables.get("PA_JOB_ID")))

    // Acquire service Instance ID
    def serviceInstanceId = serviceInstanceData.getInstanceId()

    // Create synchro channel
    def channel = "Service_Instance_" + serviceInstanceId
    println("CHANNEL: " + channel)
    synchronizationapi.createChannelIfAbsent(channel, false)
    synchronizationapi.waitUntil(channel, "RUNNING_STATE", "{k,x -> x == 1}")

    // Acquire service endpoint
    serviceInstanceData = serviceInstanceRestApi.getServiceInstance(sessionId, serviceInstanceId)
    def instanceId = serviceInstanceData.getInstanceId()
    endpoint = serviceInstanceData.getDeployments().iterator().next().getEndpoint().getUrl().replace("kafka://","")
    
    // Acquire service job id
    serviceJobId = serviceInstanceData.getJobSubmissions().get(0).getJobId().toString()
    variables.put("SERVICE_JOB_ID", serviceJobId)
    println("SERVICE_JOB_ID: " + serviceJobId)

    if (publishService) {
        schedulerapi.registerService(variables.get("PA_JOB_ID"), instanceId as int, enableServiceActions)
    }

    println("KAFKA_INSTANCE_ID: " + instanceId)
    println("KAFKA_ENDPOINT: " + endpoint)

    variables.put("kafka_instance_id", instanceId)
    variables.put("kafka_endpoint", endpoint)

    variables.put("HOST", variables.get( "PA_NODE_HOST" ))

    result = endpoint


println("END " + variables.get("PA_TASK_NAME"))
]]>
          </code>
          <arguments>
            <argument value="true"/>
            <argument value="false"/>
            <argument value="INSTANCE_NAME"/>
            <argument value="ZOOKEEPER_INSTANCE_NAME"/>
          </arguments>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
import org.ow2.proactive.pca.service.client.ApiClient
import org.ow2.proactive.pca.service.client.api.ServiceInstanceRestApi
import org.ow2.proactive.pca.service.client.model.ServiceInstanceData

def serviceId =variables.get("zookeeper_service_id")
def instanceName = variables.get("zookeeper_instance_name")

// Get schedulerapi access
schedulerapi.connect()

// Acquire session id
def sessionId = schedulerapi.getSession()

// Define PCA URL
def pcaUrl = variables.get('PA_CLOUD_AUTOMATION_REST_URL')

// Connect to APIs
def apiClient = new ApiClient()
apiClient.setBasePath(pcaUrl)
//apiClient.setDebugging(true)
def serviceInstanceRestApi = new ServiceInstanceRestApi(apiClient)

// Check existing service instances
boolean instance_exists = false
List<ServiceInstanceData> service_instances = serviceInstanceRestApi.getServiceInstances(sessionId, null)
for (ServiceInstanceData serviceInstanceData : service_instances) {
    if ( (serviceInstanceData.getServiceId() == serviceId) && (serviceInstanceData.getInstanceStatus()  == "RUNNING")){
        if (serviceInstanceData.getVariables().get("INSTANCE_NAME") == instanceName) {
            instance_exists = true
            def instanceId = serviceInstanceData.getInstanceId()
            endpoint = serviceInstanceData.getDeployments().iterator().next().getEndpoint().getUrl().replace("zookeeper://","")
            println("ZOOKEEPER_INSTANCE_ID: " + instanceId)
            println("ZOOKEEPER_ENDPOINT:    " + endpoint)
            variables.put("zookeeper_instance_id", instanceId)
            variables.put("zookeeper_endpoint", endpoint)

            break
        }
    }
}
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            115
        </positionTop>
        <positionLeft>
            604.46875
        </positionLeft>
      </metadata>
    </task>
    <task name="create_topic" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A task that creates a topic in Kafka, which name is given as input variable. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/kafka.png"/>
      </genericInformation>
      <depends>
        <task ref="start_kafka"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
docker run -i --rm bitnami/kafka:3.5 kafka-topics.sh --create --bootstrap-server $variables_kafka_endpoint --topic $variables_message_topic --partitions 1 --replication-factor 1

#docker run -i --rm bitnami/kafka:3.5 kafka-topics.sh --create --bootstrap-server $variables_kafka_endpoint --topic BitCoinRateTopic --partitions 1 --replication-factor 1
#docker run -i --rm bitnami/kafka:3.5 kafka-topics.sh --create --bootstrap-server $variables_kafka_endpoint --topic BitCoinGapTopic --partitions 1 --replication-factor 1
#docker run -i --rm bitnami/kafka:3.5 kafka-topics.sh --create --bootstrap-server $variables_kafka_endpoint --topic BitCoinAlertTopic --partitions 1 --replication-factor 1
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            267.390625
        </positionTop>
        <positionLeft>
            591.5
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2725px;
            height:3364px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-110px;left:-333.59375px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2117" style="top: 536.562px; left: 594.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Submit Storm topology"><img src="/automation-dashboard/styles/patterns/img/wf-icons/storm.png" width="20px">&nbsp;<span class="name">Submit_Dataflow</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2120" style="top: 664.562px; left: 338.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Send bitcoin rate data to Visdom server"><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Vis-Rate</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2123" style="top: 665.562px; left: 468.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Send bitcoin rate variation to Visdom server"><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Vis_Variation</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2126" style="top: 664.562px; left: 594.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Give link to view results on Visdom and dataflow status on Storm"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">View_Result</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2129" style="top: 664.562px; left: 723.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Poll online data and send it to Kafka topic (input of the dataflow)"><img src="/automation-dashboard/styles/patterns/img/wf-icons/kafka.png" width="20px">&nbsp;<span class="name">Poll_Data</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2132" style="top: 664.562px; left: 850.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Send bitcoin alerts to Visdom server"><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Vis_Alerts</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2135" style="top: 1045.56px; left: 658.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Stop PSA services, Zookeeper, Kafka, Storm and Visdom."><img src="/automation-dashboard/styles/patterns/img/wf-icons/proactive.png" width="20px">&nbsp;<span class="name">Stop_Services</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2138" style="top: 792.562px; left: 594.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/LinuxBash.png" width="20px">&nbsp;<span class="name">Finish</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2141" style="top: 920.562px; left: 466.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/LinuxBash.png" width="20px">&nbsp;<span class="name">Immediately</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2144" style="top: 920.562px; left: 594.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">After_Web_Validation</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2147" style="top: 916.562px; left: 789.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Remove Storm topology"><img src="/automation-dashboard/styles/patterns/img/wf-icons/storm.png" width="20px">&nbsp;<span class="name">Stop_Dataflow_Application</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2150" style="top: 268.562px; left: 420.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/storm.png" width="20px">&nbsp;<span class="name">Start_Storm</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2153" style="top: 269.562px; left: 732.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start the Visdom server as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Start_Visdom_Service</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2156" style="top: 1050.56px; left: 839.594px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Manage the life-cycle of Visdom PSA service. It allows to trigger the following action: Finish_Visdom.
It requires the following variables:
INSTANCE_ID: if used alone or;
INSTANCE_NAME: if used within the same workflow as a Visdom_Service_Start task. In this case there is no need for an INSTANCE_ID.
ACTION: the action to execute on the Visdom service among the aforementioned actions."><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Visdom_Service_Actions</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon" class="glyphicon glyphicon-arrow-right"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_2159" style="top: 115px; left: 604.469px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A task that starts Kafka as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/kafka.png" width="20px">&nbsp;<span class="name">start_kafka</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon" class="glyphicon glyphicon-arrow-right"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2162" style="top: 267.391px; left: 591.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A task that creates a topic in Kafka, which name is given as input variable."><img src="/automation-dashboard/styles/patterns/img/wf-icons/kafka.png" width="20px">&nbsp;<span class="name">create_topic</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><svg style="position:absolute;left:460.5px;top:308.5px" width="203" height="229" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 182 228 C 192 178 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M152.08119200000002,173.511948 L143.54671224209622,154.1170348715034 L142.52583382894048,163.2798841699232 L133.3146484120194,163.67239304256293 L152.08119200000002,173.511948" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M152.08119200000002,173.511948 L143.54671224209622,154.1170348715034 L142.52583382894048,163.2798841699232 L133.3146484120194,163.67239304256293 L152.08119200000002,173.511948" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:631.5px;top:306.5px" width="32" height="231" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 11 230 C 21 180 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M12.01159775,178.79702 L17.428525401866075,158.31149108775446 L10.918408238023241,164.83976609061997 L3.471271492486048,159.4046805997312 L12.01159775,178.79702" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M12.01159775,178.79702 L17.428525401866075,158.31149108775446 L10.918408238023241,164.83976609061997 L3.471271492486048,159.4046805997312 L12.01159775,178.79702" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:642.5px;top:309.5px" width="170.5" height="228" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 227 C -10 177 159.5 50 149.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M23.18530712500001,173.89390725 L40.951973162477124,162.34637167253774 L31.74434499560644,162.81496909106417 L29.87303500354127,153.78733380193128 L23.18530712500001,173.89390725" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M23.18530712500001,173.89390725 L40.951973162477124,162.34637167253774 L31.74434499560644,162.81496909106417 L29.87303500354127,153.78733380193128 L23.18530712500001,173.89390725" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:378.5px;top:576.5px" width="285" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 274 50 264 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M44.624196000000005,58.618708 L65.67385668761038,61.050124240891314 L58.281620908993894,55.54060065047606 L62.59574933808644,47.392699331897425 L44.624196000000005,58.618708" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M44.624196000000005,58.618708 L65.67385668761038,61.050124240891314 L58.281620908993894,55.54060065047606 L62.59574933808644,47.392699331897425 L44.624196000000005,58.618708" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:508.5px;top:576.5px" width="155" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 89 C -10 39 144 50 134 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M17.358690999999997,61.44042775 L38.43595942658394,59.261263764952616 L30.02701413788165,55.481099862208254 L32.4766315387922,46.59294062707097 L17.358690999999997,61.44042775" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M17.358690999999997,61.44042775 L38.43595942658394,59.261263764952616 L30.02701413788165,55.481099862208254 L32.4766315387922,46.59294062707097 L17.358690999999997,61.44042775" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:634.5px;top:576.5px" width="29" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 18 50 8 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.149632,66.303232 L7.49984351657956,47.438247975227235 L-0.24966605297428535,52.43275510120006 L-6.370633382220376,45.538282028201515 L-2.149632,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.149632,66.303232 L7.49984351657956,47.438247975227235 L-0.24966605297428535,52.43275510120006 L-6.370633382220376,45.538282028201515 L-2.149632,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:642.5px;top:576.5px" width="142" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 121 88 C 131 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M106.282048,60.999424000000005 L91.74046518970493,45.587014409954364 L93.8498445997615,54.562008477051535 L85.30304966675646,58.01921781019287 L106.282048,60.999424000000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M106.282048,60.999424000000005 L91.74046518970493,45.587014409954364 L93.8498445997615,54.562008477051535 L85.30304966675646,58.01921781019287 L106.282048,60.999424000000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:642.5px;top:576.5px" width="269" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 248 88 C 258 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M207.7293015,59.00425649999999 L189.94107306016258,47.4899641217355 L194.12327785584768,55.70636011066816 L186.64317667083077,61.09598776588781 L207.7293015,59.00425649999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M207.7293015,59.00425649999999 L189.94107306016258,47.4899641217355 L194.12327785584768,55.70636011066816 L186.64317667083077,61.09598776588781 L207.7293015,59.00425649999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:701px;top:956.5px" width="179.5" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 89 C -10 39 168.5 50 158.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M21.953125,61.03125 L43.126285574973885,60.196222296045576 L34.97462220713843,55.88920658473346 L37.98424215970734,47.17472508890715 L21.953125,61.03125" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M21.953125,61.03125 L43.126285574973885,60.196222296045576 L34.97462220713843,55.88920658473346 L37.98424215970734,47.17472508890715 L21.953125,61.03125" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:378.5px;top:704.5px" width="277" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 256 88 C 266 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M214.3416555,59.00425649999999 L196.47303128566787,47.61512709134967 L200.71281482725897,55.80196014940413 L193.270734935072,61.243967764090705 L214.3416555,59.00425649999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M214.3416555,59.00425649999999 L196.47303128566787,47.61512709134967 L200.71281482725897,55.80196014940413 L193.270734935072,61.243967764090705 L214.3416555,59.00425649999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:508.5px;top:705.5px" width="147" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 126 87 C 136 37 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M110.55628800000001,60.14457600000001 L95.6804739196577,45.05450789388832 L97.98601045680448,53.981125465840265 L89.51702338549795,57.62478543708385 L110.55628800000001,60.14457600000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M110.55628800000001,60.14457600000001 L95.6804739196577,45.05450789388832 L97.98601045680448,53.981125465840265 L89.51702338549795,57.62478543708385 L110.55628800000001,60.14457600000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:634.5px;top:704.5px" width="277" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 266 50 256 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M41.65834450000001,59.00425649999999 L62.729265064928,61.2439677640907 L55.28718517274105,55.801960149404124 L59.52696871433213,47.61512709134966 L41.65834450000001,59.00425649999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M41.65834450000001,59.00425649999999 L62.729265064928,61.2439677640907 L55.28718517274105,55.801960149404124 L59.52696871433213,47.61512709134966 L41.65834450000001,59.00425649999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:629.9817132113825px;top:704.5px" width="15.518286788617468" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 -10 50 0 0 " transform="translate(15.018286788617468,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path></svg><svg style="position:absolute;left:634.5px;top:704.5px" width="150" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 139 50 129 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M15.879167999999998,60.999424000000005 L36.92551872548093,58.539521331183956 L28.466935798642954,54.87177340230373 L30.797868127784653,45.951753532541 L15.879167999999998,60.999424000000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M15.879167999999998,60.999424000000005 L36.92551872548093,58.539521331183956 L28.466935798642954,54.87177340230373 L30.797868127784653,45.951753532541 L15.879167999999998,60.999424000000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:456.5px;top:832.5px" width="149" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 138 50 128 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M15.734015999999999,60.999424000000005 L36.77298385959016,58.47715688426225 L28.30356794508451,54.834493838204 L30.608053697794155,45.90760493917774 L15.734015999999999,60.999424000000005" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M15.734015999999999,60.999424000000005 L36.77298385959016,58.47715688426225 L28.30356794508451,54.834493838204 L30.608053697794155,45.90760493917774 L15.734015999999999,60.999424000000005" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_2200" style="position: absolute; transform: translate(-50%, -50%); left: 530.5px; top: 876.5px;">if</div><svg style="position:absolute;left:579.9817132113825px;top:832.5px" width="15.518286788617468" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 -10 50 0 0 " transform="translate(15.018286788617468,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#00f" fill="#00f" transform="translate(15.018286788617468,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#00f" fill="#00f" transform="translate(15.018286788617468,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_2204" style="position: absolute; transform: translate(-50%, -50%); left: 587px; top: 876.5px;">else</div><svg style="position:absolute;left:584.5px;top:832.5px" width="216" height="85" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 195 84 C 205 34 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M165.07919999999996,56.064767999999994 L147.82239734260492,43.76831476975013 L151.63386111217122,52.16311934956514 L143.92074869217004,57.21365365757887 L165.07919999999996,56.064767999999994" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M165.07919999999996,56.064767999999994 L147.82239734260492,43.76831476975013 L151.63386111217122,52.16311934956514 L143.92074869217004,57.21365365757887 L165.07919999999996,56.064767999999994" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_2208" style="position: absolute; transform: translate(-50%, -50%); left: 692px; top: 874.5px;">continuation</div><svg style="position:absolute;left:460.5px;top:154.5px" width="204" height="115" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 114 C -10 64 193 50 183 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M27.909024000000002,81.03532799999999 L48.990364368940746,78.89591493823067 L40.58856258184859,75.09990035311446 L43.05493672205522,66.21637635638209 L27.909024000000002,81.03532799999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M27.909024000000002,81.03532799999999 L48.990364368940746,78.89591493823067 L40.58856258184859,75.09990035311446 L43.05493672205522,66.21637635638209 L27.909024000000002,81.03532799999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:643.5px;top:154.5px" width="169.5" height="116" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 148.5 115 C 158.5 65 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M128.109375,82.96875 L114.44257656442346,66.77558414148663 L116.05228409555515,75.85351571559634 L107.32734228001982,78.8326750459315 L128.109375,82.96875" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M128.109375,82.96875 L114.44257656442346,66.77558414148663 L116.05228409555515,75.85351571559634 L107.32734228001982,78.8326750459315 L128.109375,82.96875" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:859.5px;top:956.5px" width="66.5" height="95" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 45.5 94 C 55.5 44 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M43.648,69.82400000000001 L38.9823064307512,49.15442565707097 L36.22703678174452,57.9526350863391 L27.11094151709029,56.57538887532645 L43.648,69.82400000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M43.648,69.82400000000001 L38.9823064307512,49.15442565707097 L36.22703678174452,57.9526350863391 L27.11094151709029,56.57538887532645 L43.648,69.82400000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:631.5px;top:154.5px" width="33" height="113" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 112 C -10 62 22 50 12 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.5785205,85.38610050000001 L8.53267259793704,66.76450620369363 L0.6624991578715946,71.56662761233049 L-5.286800289732484,64.52348654582204 L-1.5785205,85.38610050000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.5785205,85.38610050000001 L8.53267259793704,66.76450620369363 L0.6624991578715946,71.56662761233049 L-5.286800289732484,64.52348654582204 L-1.5785205,85.38610050000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 643px; top: 567px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 643px; top: 527px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 379px; top: 695px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 379px; top: 655px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 509px; top: 696px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 509px; top: 656px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 635px; top: 695px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 635px; top: 655px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 764px; top: 695px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 764px; top: 655px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 891px; top: 695px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 891px; top: 655px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 701.5px; top: 1076px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 701.5px; top: 1036px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 635px; top: 823px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 635px; top: 783px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint if-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 585px; top: 823px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 507px; top: 951px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 457px; top: 911px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 653px; top: 951px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 585px; top: 911px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 860px; top: 947px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 780px; top: 907px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 461px; top: 299px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 461px; top: 259px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 792.5px; top: 300px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 792.5px; top: 260px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 905.5px; top: 1081px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 905.5px; top: 1041px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 644px; top: 145px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 632px; top: 297px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 632px; top: 257px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
