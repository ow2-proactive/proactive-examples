<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.12" xsi:schemaLocation="urn:proactive:jobdescriptor:3.12 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.12/schedulerjob.xsd"  name="Multi_Tuners_Auto_ML_V2" projectName="1. Tuning Algorithms" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="TUNING_ALGORITHM" value="Bayes" model="PA:LIST(Bayes,Grid,Random,QuasiRandom,CMAES,MOCMAES)"/>
    <variable name="WORKFLOW_TO_OPTIMIZE" value="auto-ml-optimization/Himmelblau_Function" model="PA:CATALOG_OBJECT"/>
    <variable name="SEARCH_SPACE" value="{&#39;x&#39;: uniform(-6, 6), &#39;y&#39;: uniform(-6, 6)}" />
    <variable name="MAX_ITERATIONS" value="2" model="PA:Integer"/>
    <variable name="PARALLEL_SAMPLES_PER_LOOP" value="2" model="PA:Integer"/>
    <variable name="VISDOM_ENABLED" value="True" model="PA:Boolean"/>
    <variable name="DOCKER_ENABLED" value="True" model="PA:Boolean"/>
    <variable name="PROXYFIED" value="False" model="PA:Boolean"/>
    <variable name="VISDOM_ENABLE_LOGIN" value="False" model="PA:Boolean"/>
    <variable name="VISDOM_USERNAME" value="" />
    <variable name="VISDOM_PASSWORD" value="" model="PA:HIDDEN"/>
  </variables>
  <description>
    <![CDATA[ This workflow proposes six algorithms for hyperparameter optimization. The choice of the sampling/search strategy depends strongly on the problem tackled. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="auto-ml-optimization"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/tunning_algorithm.png"/>
    <info name="Documentation" value="MLOS/MLOSUserGuide.html#_AutoML"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Split" fork="true">
      <description>
        <![CDATA[ This task defines some input, here strings to be processed. ]]>
      </description>
      <variables>
        <variable name="DOCKER_ENABLED" value="True" inherited="true" model="PA:Boolean"/>
        <variable name="DOCKER_IMAGE" value="activeeon/dlm3" inherited="true" />
        <variable name="TUNING_ALGORITHM" value="Grid" inherited="true" model="PA:LIST(Bayes,Grid,Random,QuasiRandom,CMAES,MOCMAES)"/>
        <variable name="SEARCH_SPACE" value="{&#39;x&#39;: uniform(-6, 6), &#39;y&#39;: uniform(-6, 6)}" inherited="true" />
        <variable name="PARALLEL_SAMPLES_PER_LOOP" value="2" inherited="true" model="PA:Integer"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
        <info name="PYTHON_COMMAND" value="/usr/local/bin/python3"/>
      </genericInformation>
      <depends>
        <task ref="Else"/>
      </depends>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_docker_vars/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
import json
import numpy as np

import chocolate as choco
from chocolate import uniform, quantized_uniform, log, quantized_log, choice
from chocolate import MongoDBConnection, Bayes, Grid, Random, QuasiRandom, CMAES, MOCMAES

PA_TASK_ITERATION = int(variables.get('PA_TASK_ITERATION'))
print("PA_TASK_ITERATION: ", PA_TASK_ITERATION)

# Establish a connection to a MongoDB local database
MONGODB_URL = variables.get('MONGODB_URL')
print('MONGODB_URL: ', MONGODB_URL)
conn = MongoDBConnection(MONGODB_URL)
if PA_TASK_ITERATION == 0:
	print('Cleaning database for the first iteration')
	conn.clear() # Clear all data from the database.

# Define the search space
space = "space=" + variables.get('SEARCH_SPACE')
print('SEARCH_SPACE: ', space)
exec(space)

TUNING_ALGORITHM = variables.get('TUNING_ALGORITHM')
assert TUNING_ALGORITHM is not None, "TUNING_ALGORITHM must be set!"

# Construct the optimizer
sampler = None
if TUNING_ALGORITHM == "Grid":
    sampler = Grid(conn, space)
if TUNING_ALGORITHM == "Random":
    sampler = Random(conn, space)
if TUNING_ALGORITHM == "QuasiRandom":
    sampler = QuasiRandom(conn, space)
if TUNING_ALGORITHM == "Bayes":
    sampler = Bayes(conn, space)
if TUNING_ALGORITHM == "CMAES":
    sampler = CMAES(conn, space)
if TUNING_ALGORITHM == "MOCMAES":
    sampler = MOCMAES(conn, space, 10)
assert sampler is not None, "TUNING_ALGORITHM must be selected!"
print('TUNING_ALGORITHM: ', TUNING_ALGORITHM)

# Check for previous results
workflow_results = None
if PA_TASK_ITERATION > 0:
    workflow_results = variables.get('workflow_results')

# Add previous loss values to the database
if workflow_results is not None:
    previous_results = json.loads(workflow_results)
    print("Adding previous loss values to the database")
    for i, previous_result in enumerate(previous_results):
        #print(i, previous_result)
        previous_token = previous_result['token']
        previous_loss = previous_result['loss']
        print(i, 'previous_token: ', previous_token, ', previous_loss: ', previous_loss)
        # Add the loss to the database
        #sampler.update(token, loss)
        sampler.update(previous_token, previous_loss)

# Sample the next point
samples_per_iteration = int(variables.get('PARALLEL_SAMPLES_PER_LOOP'))
result = []
for i in range(samples_per_iteration):
    token, params = sampler.next()
    token_params = {
      'token': token,
      'params': params
    }
    token_params_json = json.dumps(token_params)
    print("sample: ", i, ", token_params: ", token_params_json)
    result.append(token_params_json)

print('result: ', result)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <replicate>
          <script>
            <code language="groovy">
              <![CDATA[
runs = result.size()
println "runs: " + runs
]]>
            </code>
          </script>
        </replicate>
      </controlFlow>
      <metadata>
        <positionTop>
            858.53125
        </positionTop>
        <positionLeft>
            309.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Submit_Job_No_Wait" fork="true">
      <description>
        <![CDATA[ This task will be replicated according to the 'runs' value specified in the replication script.
The replication index is used in each task's instance to select the input. ]]>
      </description>
      <variables>
        <variable name="WORKFLOW_TO_OPTIMIZE" value="auto-ml-optimization/Himmelblau_Function" inherited="true" model="PA:CATALOG_OBJECT"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_submit_job_no_wait.png"/>
      </genericInformation>
      <depends>
        <task ref="Split"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def jsonSlurper = new JsonSlurper()

int replication = variables.get('PA_TASK_REPLICATION')
token_params_json = results[0].value()[replication]
println "token_params_json: " + token_params_json

def object = jsonSlurper.parseText(token_params_json)
token = object.token
params = object.params

println "token:  " + token
println "params: " + params

//String token_encoded = JsonOutput.toJson([token: token]).bytes.encodeBase64().toString()
//String params_encoded = JsonOutput.toJson([params: params]).bytes.encodeBase64().toString()
String token_encoded = JsonOutput.toJson(token).bytes.encodeBase64().toString()
String params_encoded = JsonOutput.toJson(params).bytes.encodeBase64().toString()

println "token_encoded: " + token_encoded
println "params_encoded: " + params_encoded

// Submit a workflow referenced in the ProActive Catalog (or accessible by url)
// Please add the bucket and workflow names that you want to execute as Task Variables 'call_workflow'
// connect to the scheduler
schedulerapi.connect()

// get the workflow information from Task Variables
def calledWorkflow = variables.get("WORKFLOW_TO_OPTIMIZE")

// variables submitted to the workflow: Empty in the example, modify this map to give parameters to the submitted workflow
//workflow_variables = Collections.EMPTY_MAP
workflow_variables = [:]
workflow_variables.put("token_encoded", token_encoded)
workflow_variables.put("params_encoded", params_encoded)

VISDOM_ENABLED = variables.get('VISDOM_ENABLED')
if (VISDOM_ENABLED.toLowerCase().contains("true")) {
    println "Adding Visdom support to the workflow variables"
    def VISDOM_INSTANCE_NAME = variables.get("VISDOM_INSTANCE_NAME")
    def VISDOM_ENDPOINT = variables.get("ENDPOINT_" + VISDOM_INSTANCE_NAME)
    workflow_variables.put("VISDOM_ENDPOINT", VISDOM_ENDPOINT)
}

println "Submitting workflow " + calledWorkflow

// submitting the job
def generic_infos_map = ["PARENT_JOB_ID" : variables.get("PA_JOB_ID")]
jobid = schedulerapi.submitFromCatalog(variables.get("PA_CATALOG_REST_URL"), calledWorkflow, workflow_variables, generic_infos_map)

// alternatively you can submit a workflow from a direct url
// // add sessionId to request header map
// requestHeader = Collections.singletonMap("sessionId", schedulerapi.getSession()
// jobUrl = "https://try.activeeon.com/catalog/buckets/basic-examples/resources/distributed_computing_Pi/raw"
// jobid = schedulerapi.submit(jobURL, variables, generic_infos_map, requestHeader)

println "Job submitted with job id " + jobid

result = jobid
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            986.53125
        </positionTop>
        <positionLeft>
            309.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Merge" fork="true">
      <description>
        <![CDATA[ As a merge operation, we simply print the results from previous tasks. ]]>
      </description>
      <variables>
        <variable name="DOCKER_ENABLED" value="True" inherited="true" model="PA:Boolean"/>
        <variable name="DOCKER_IMAGE" value="activeeon/dlm3" inherited="true" />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
        <info name="PYTHON_COMMAND" value="/usr/local/bin/python3"/>
      </genericInformation>
      <depends>
        <task ref="Submit_Job_No_Wait"/>
      </depends>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_docker_vars/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
import json, os, math, urllib3
import numpy as np

from io import BytesIO
from PIL import Image
from argparse import ArgumentParser
from time import sleep

#print('received results: ', results)

parent_job_id = variables.get("PA_JOB_ID")

### BEGIN VISDOM ###
VISDOM_ENABLED = variables.get('VISDOM_ENABLED')
vis = None
if VISDOM_ENABLED is not None and VISDOM_ENABLED == "true":
    from visdom import Visdom
    VISDOM_HOST = variables.get('VISDOM_HOST')
    VISDOM_PORT = variables.get('VISDOM_PORT')
    print("Connecting to %s:%s" % (VISDOM_HOST, VISDOM_PORT))
    vis = Visdom(server="http://"+VISDOM_HOST,port=int(VISDOM_PORT))
    assert vis.check_connection()
    print("OK")
    win_text_loss = variables.get('VISDOM_win_text_loss')
    win_plot_loss = variables.get('VISDOM_win_plot_loss')
    print("win_text_loss: ", win_text_loss)
    print("win_plot_loss: ", win_plot_loss)
### END VISDOM ###

# connect to the scheduler
schedulerapi.connect()

workflow_results = []
for i, res in enumerate(results):
    job_id = str(res.getValue())
    #print(i, job_id)

    # Wait for the job termination
    is_finished = False
    while True:
        is_finished = schedulerapi.isJobFinished(job_id)
        print(i, "job_id: ", job_id, ", is_finished: ", is_finished)
        if is_finished:
            break
        else:
            sleep(0.5) # 500ms
    # Get job result
    # RESULT_JSON: {"token": {"_token_id": 0}, "loss": 0.009321813276374468}
    result_map  = schedulerapi.getJobResult(job_id).getResultMap()
    result_json = result_map['RESULT_JSON']
    job_result  = json.loads(result_json)
    print(i, "job_id: ", job_id, ", job_result: ", job_result)
    workflow_results.append(job_result)

    #task_res = None
    #
    #task_res = schedulerapi.waitForTask(job_id, "Himmelblau_Function", 120000)
    #task_res = task_res.getValue()
    #print("task_res: ", task_res)
    #
    #if type(res.getValue()) is bytes:
    #    task_res = json.loads(res.getValue().decode('ascii'))
    #else:
    #    task_res = json.loads(str(res.getValue()))
    # 0 , task_res: {'token': {'_chocolate_id': 0}, 'loss': 450.9434895085956}
    #print(i, ", task_res: ", task_res)
    #workflow_results.append(task_res)
    ### BEGIN VISDOM ###
    token = job_result['token'] # {'_chocolate_id': 0}
    loss = job_result['loss']   # 450.9434895085956
    token_id = token['_chocolate_id'] # 0

    if VISDOM_ENABLED is not None and VISDOM_ENABLED == "true":
        #vis.text("{:.4f}\n".format(loss), win=win_text_loss, append=True, env='job_id_'+parent_job_id)
        vis.text("Job ID: {}, Loss: {:.4f}\n".format(job_id, loss), win=win_text_loss, append=True, env='job_id_'+parent_job_id)
        vis.line(Y=np.array([loss]), X=np.array([token_id]), win=win_plot_loss, update='append', env='job_id_'+parent_job_id)
    ### END VISDOM ###

workflow_results = json.dumps(workflow_results)
print('workflow_results: ', workflow_results)

variables.put('workflow_results', workflow_results)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="end"></controlFlow>
      <metadata>
        <positionTop>
            1114.53125
        </positionTop>
        <positionLeft>
            309.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Start" fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png"/>
      </genericInformation>
      <depends>
        <task ref="Join_Task"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
PA_TASK_ITERATION = variables.get('PA_TASK_ITERATION')
println '\n\nLoop block start ' + PA_TASK_ITERATION

MONGODB_HOST = variables.get("MONGODB_HOST")
MONGODB_PORT = variables.get("MONGODB_PORT")
MONGODB_USER = variables.get("MONGODB_USER")
MONGODB_PASS = variables.get("MONGODB_PASS")

MONGODB_URL  = "mongodb://"+MONGODB_USER+":"+MONGODB_PASS+"@"+MONGODB_HOST+":"+MONGODB_PORT
variables.put("MONGODB_URL", MONGODB_URL)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <metadata>
        <positionTop>
            474.53125
        </positionTop>
        <positionLeft>
            309.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Loop" fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png"/>
      </genericInformation>
      <depends>
        <task ref="Finally"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
print('Loop block end ' + variables.get('PA_TASK_ITERATION'))
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow  block="end">
        <loop target="Start">
          <script>
            <code language="javascript">
              <![CDATA[
if(variables.get('PA_TASK_ITERATION') < (variables.get('MAX_ITERATIONS')) - 1) {
    loop = true;
} else {
    loop = false;
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            858.53125
        </positionTop>
        <positionLeft>
            437.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Parse_MongoDB_Endpoint" fork="true">
      <description>
        <![CDATA[ This task aims to parse PCA endpoint in order to retrieve a HOST and a PORT number to use them as an input in the data connector tasks. ]]>
      </description>
      <depends>
        <task ref="Start_MongoDB"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def endpoint = new URL(results[0].toString())
variables.put("MONGODB_HOST", endpoint.getHost())
variables.put("MONGODB_PORT", endpoint.getPort())
// Wait for database sever to be up and fully running.
sleep(3000)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            218.53125
        </positionTop>
        <positionLeft>
            117.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Start_MongoDB" onTaskError="cancelJob" fork="true">
      <description>
        <![CDATA[ Start the MongoDB server as a service. ]]>
      </description>
      <variables>
        <variable name="SERVICE_ID" value="MongoDB" inherited="false" />
        <variable name="INSTANCE_NAME" value="mongodb-server-${PA_JOB_ID}" inherited="false" />
        <variable name="USER" value="activeeon" inherited="true" />
        <variable name="PASSWORD" value="proactive" inherited="true" />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png"/>
        <info name="task.documentation" value="PCA/PCAUserGuide.html"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/cloud-automation-scripts/resources/Service_Start/raw" language="groovy">
            <arguments>
              <argument value="USER"/>
              <argument value="PASSWORD"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
variables.put('MONGODB_USER', variables.get("USER"))
variables.put('MONGODB_PASS', variables.get("PASSWORD"))
variables.put('MONGODB_INSTANCE_NAME', variables.get("INSTANCE_NAME"))
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            90.53125
        </positionTop>
        <positionLeft>
            117.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Join_Task" fork="true">
      <description>
        <![CDATA[ The simplest task, ran by a Groovy engine. ]]>
      </description>
      <depends>
        <task ref="Parse_MongoDB_Endpoint"/>
        <task ref="Continuation"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            346.53125
        </positionTop>
        <positionLeft>
            309.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Check_Visdom_Support" fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Checking for Visdom support")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <if target="Start_Visdom_Service"
        else="Nothing"
        continuation="Continuation">
          <script>
            <code language="python">
              <![CDATA[
VISDOM_ENABLED = variables.get('VISDOM_ENABLED')

if VISDOM_ENABLED is not None and VISDOM_ENABLED == "true":
    branch = "if"
else:
    branch = "else"
]]>
            </code>
          </script>
        </if>
      </controlFlow>
      <metadata>
        <positionTop>
            90.53125
        </positionTop>
        <positionLeft>
            490.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Start_Visdom_Service" fork="true">
      <description>
        <![CDATA[ Start the Visdom server as a service. ]]>
      </description>
      <variables>
        <variable name="SERVICE_ID" value="Visdom" inherited="false" />
        <variable name="INSTANCE_NAME" value="visdom-server" inherited="false" />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="MLOS/MLOSUserGuide.html"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/cloud-automation-scripts/resources/Service_Start/raw" language="groovy">
            <arguments>
              <argument value="PROXYFIED"/>
              <argument value="VISDOM_ENABLE_LOGIN"/>
              <argument value="VISDOM_USERNAME"/>
              <argument value="VISDOM_PASSWORD"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
variables.put("VISDOM_INSTANCE_NAME", variables.get("INSTANCE_NAME"))
// Wait for Visdom sever to be up and fully running.
sleep(3000)
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            218.53125
        </positionTop>
        <positionLeft>
            390.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Nothing" fork="true">
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Visdom disabled")
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            217.53125
        </positionTop>
        <positionLeft>
            564.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Continuation" fork="true">
      <variables>
        <variable name="DOCKER_ENABLED" value="True" inherited="true" model="PA:Boolean"/>
        <variable name="DOCKER_IMAGE" value="activeeon/dlm3" inherited="true" />
      </variables>
      <genericInformation>
        <info name="PYTHON_COMMAND" value="/usr/local/bin/python3"/>
      </genericInformation>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_docker_vars/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
VISDOM_ENABLED = variables.get('VISDOM_ENABLED')

if VISDOM_ENABLED is not None and VISDOM_ENABLED == "true":
    import numpy as np
    from visdom import Visdom
    VISDOM_INSTANCE_NAME = variables.get("VISDOM_INSTANCE_NAME")
    VISDOM_ENDPOINT = variables.get("ENDPOINT_" + VISDOM_INSTANCE_NAME)
    #VISDOM_ENDPOINT = variables.get("VISDOM_ENDPOINT") if variables.get("VISDOM_ENDPOINT") else results[0].__str__()
    print("VISDOM_ENDPOINT: ", VISDOM_ENDPOINT)

    if VISDOM_ENDPOINT is not None:
        VISDOM_ENDPOINT = VISDOM_ENDPOINT.replace("http://", "")
        print(VISDOM_ENDPOINT)

    (VISDOM_HOST, VISDOM_PORT) = VISDOM_ENDPOINT.split(":")

    variables.put('VISDOM_HOST', VISDOM_HOST)
    variables.put('VISDOM_PORT', VISDOM_PORT)
    print("VISDOM_HOST: ", VISDOM_HOST)
    print("VISDOM_PORT: ", VISDOM_PORT)
    print("Connecting to %s:%s" % (VISDOM_HOST, VISDOM_PORT))
    vis = Visdom(server="http://"+VISDOM_HOST, port=int(VISDOM_PORT))
    assert vis.check_connection()
    parent_job_id = variables.get("PA_JOB_ID")
    vis.text('A new AutoML experiment was created, please see job_id_'+parent_job_id+' environment in Visdom for more info.')
    win_text_loss = vis.text("Loss (objective to optimize):\n", env='job_id_'+parent_job_id)
    win_plot_loss = vis.line(
        Y = np.array([np.nan]),
        X = np.array([np.nan]),
        opts = dict(
              xlabel = 'Iteration',
              ylabel = 'Loss',
              title = 'Model loss',
              ),
        env='job_id_'+parent_job_id
    )
    variables.put('VISDOM_win_text_loss', win_text_loss)
    variables.put('VISDOM_win_plot_loss', win_plot_loss)
    print("win_text_loss: ", win_text_loss)
    print("win_plot_loss: ", win_plot_loss)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            223.53125
        </positionTop>
        <positionLeft>
            780.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Finish_MongoDB" onTaskError="cancelJob" fork="true">
      <variables>
        <variable name="INSTANCE_ID" value="" inherited="false" />
        <variable name="INSTANCE_NAME" value="mongodb-server-${PA_JOB_ID}" inherited="false" />
        <variable name="ACTION" value="Finish_MongoDB" inherited="false" model="PA:LIST(Pause_MongoDB, Resume_MongoDB, Finish_MongoDB)"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png"/>
        <info name="task.documentation" value="PCA/PCAUserGuide.html"/>
      </genericInformation>
      <depends>
        <task ref="Loop"/>
      </depends>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/cloud-automation-scripts/resources/Service_Action/raw" language="groovy">
            <arguments>
              <argument value="MONGODB_INSTANCE_NAME"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            986.53125
        </positionTop>
        <positionLeft>
            437.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Check_Algorithm_Condition" fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <depends>
        <task ref="Start"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Checking the branch condition of the algorithm")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <if target="If_Bayes"
        else="Else"
        continuation="Finally">
          <script>
            <code language="groovy">
              <![CDATA[
TUNING_ALGORITHM = variables.get('TUNING_ALGORITHM')

if(TUNING_ALGORITHM.toLowerCase().contains("bayes")){
    branch = "if";
} else {
    branch = "else";
}
]]>
            </code>
          </script>
        </if>
      </controlFlow>
      <metadata>
        <positionTop>
            602.53125
        </positionTop>
        <positionLeft>
            309.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="If_Bayes" fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Running the If branch")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <metadata>
        <positionTop>
            730.53125
        </positionTop>
        <positionLeft>
            181.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Else" fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Running the Else branch")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <metadata>
        <positionTop>
            730.53125
        </positionTop>
        <positionLeft>
            309.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Finally" fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Running after the If or the Else task")
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            730.53125
        </positionTop>
        <positionLeft>
            437.53125
        </positionLeft>
      </metadata>
    </task>
    <task name="Split_and_Submit_Job_No_Wait" fork="true">
      <description>
        <![CDATA[ The simplest task, ran by a Python engine. ]]>
      </description>
      <variables>
        <variable name="DOCKER_ENABLED" value="True" inherited="true" model="PA:Boolean"/>
        <variable name="DOCKER_IMAGE" value="activeeon/dlm3" inherited="true" />
        <variable name="TUNING_ALGORITHM" value="Bayes" inherited="true" model="PA:LIST(Bayes,Grid,Random,QuasiRandom,CMAES,MOCMAES)"/>
        <variable name="SEARCH_SPACE" value="{&#39;x&#39;: uniform(-6, 6), &#39;y&#39;: uniform(-6, 6)}" inherited="true" />
        <variable name="PARALLEL_SAMPLES_PER_LOOP" value="2" inherited="true" model="PA:Integer"/>
        <variable name="WORKFLOW_TO_OPTIMIZE" value="auto-ml-optimization/Himmelblau_Function" inherited="true" />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
        <info name="PYTHON_COMMAND" value="/usr/local/bin/python3"/>
      </genericInformation>
      <depends>
        <task ref="If_Bayes"/>
      </depends>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_docker_vars/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
import os, math, urllib3, json, base64
import numpy as np

from io import BytesIO
from PIL import Image
from argparse import ArgumentParser
from time import sleep

import chocolate as choco
from chocolate import uniform, quantized_uniform, log, quantized_log, choice
from chocolate import MongoDBConnection, Bayes, Grid, Random, QuasiRandom, CMAES, MOCMAES

from py4j.java_collections import SetConverter, MapConverter, ListConverter
map_converter = MapConverter()

PA_TASK_ITERATION = int(variables.get('PA_TASK_ITERATION'))
print("PA_TASK_ITERATION: ", PA_TASK_ITERATION)

VISDOM_ENABLED = variables.get('VISDOM_ENABLED')

# Establish a connection to a MongoDB local database
MONGODB_URL = variables.get('MONGODB_URL')
print('MONGODB_URL: ', MONGODB_URL)
conn = MongoDBConnection(MONGODB_URL)
if PA_TASK_ITERATION == 0:
    print('Cleaning database for the first iteration')
    conn.clear() # Clear all data from the database.

# Define the search space
space = "space=" + variables.get('SEARCH_SPACE')
print('SEARCH_SPACE: ', space)
exec(space)

TUNING_ALGORITHM = variables.get('TUNING_ALGORITHM')
assert TUNING_ALGORITHM is not None, "TUNING_ALGORITHM must be set!"

# Construct the optimizer
sampler = None
if TUNING_ALGORITHM == "Grid":
    sampler = Grid(conn, space)
if TUNING_ALGORITHM == "Random":
    sampler = Random(conn, space)
if TUNING_ALGORITHM == "QuasiRandom":
    sampler = QuasiRandom(conn, space)
if TUNING_ALGORITHM == "Bayes":
    sampler = Bayes(conn, space)
if TUNING_ALGORITHM == "CMAES":
    sampler = CMAES(conn, space)
if TUNING_ALGORITHM == "MOCMAES":
    sampler = MOCMAES(conn, space, 10)
assert sampler is not None, "TUNING_ALGORITHM must be selected!"
print('TUNING_ALGORITHM: ', TUNING_ALGORITHM)

# Check for previous results
workflow_results = None
if PA_TASK_ITERATION > 0:
    workflow_results = variables.get('workflow_results')

# Add previous loss values to the database
if workflow_results is not None:
    previous_results = json.loads(workflow_results)
    print("Adding previous loss values to the database")
    for i, previous_result in enumerate(previous_results):
        #print(i, previous_result)
        previous_token = previous_result['token']
        previous_loss = previous_result['loss']
        print(i, 'previous_token: ', previous_token, ', previous_loss: ', previous_loss)
        # Add the loss to the database
        #sampler.update(token, loss)
        sampler.update(previous_token, previous_loss)

# Connect to the scheduler
schedulerapi.connect()

PA_JOB_ID = variables.get("PA_JOB_ID")
print('PA_JOB_ID: ', PA_JOB_ID)

PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
print('PA_CATALOG_REST_URL: ', PA_CATALOG_REST_URL)

# Workflow to optimize
WORKFLOW_TO_OPTIMIZE = variables.get("WORKFLOW_TO_OPTIMIZE")
bucket_name, workflow_name = WORKFLOW_TO_OPTIMIZE.split('/')
print("bucket_name: ", bucket_name, ", workflow_name: ", workflow_name)

# Sample the next point and submit job
samples_per_iteration = int(variables.get('PARALLEL_SAMPLES_PER_LOOP'))
results = []
for i in range(samples_per_iteration):
    token, params = sampler.next()
    print("sample: ", i, ", token: ", token, ", params: ", params)

    token_encoded  = base64.b64encode(json.dumps(token).encode('utf-8')).decode("utf-8")
    params_encoded = base64.b64encode(json.dumps(params).encode("utf-8")).decode("utf-8")

    print("token_encoded: ", token_encoded)
    print("params_encoded: ", params_encoded)

    # variables submitted to the workflow
    workflow_variables = {
        "token_encoded": token_encoded,
        "params_encoded": params_encoded
    }
    if VISDOM_ENABLED is not None and VISDOM_ENABLED == "true":
        print("Adding Visdom support to the workflow variables")
        VISDOM_INSTANCE_NAME = variables.get("VISDOM_INSTANCE_NAME")
        VISDOM_ENDPOINT = variables.get("ENDPOINT_" + VISDOM_INSTANCE_NAME)
        workflow_variables['VISDOM_ENDPOINT'] = VISDOM_ENDPOINT
    workflow_variables_java_map = map_converter.convert(workflow_variables, schedulerapi._gateway_client)
    #print('workflow_variables_java_map: ', workflow_variables_java_map)
    generic_infos_map = {
        "PARENT_JOB_ID" : PA_JOB_ID
    }
    generic_infos_java_map = map_converter.convert(generic_infos_map, schedulerapi._gateway_client)
    #print('generic_infos_java_map: ', generic_infos_java_map)

    print("Submitting workflow ", WORKFLOW_TO_OPTIMIZE)
    # submitting the job
    job_id = schedulerapi.submitFromCatalog(PA_CATALOG_REST_URL, bucket_name, workflow_name, workflow_variables_java_map, generic_infos_java_map).longValue()
    print("Job submitted with job id ", job_id)

    results.append(job_id)
# end iterations

parent_job_id = PA_JOB_ID

### BEGIN VISDOM ###
vis = None
if VISDOM_ENABLED is not None and VISDOM_ENABLED == "true":
    from visdom import Visdom
    VISDOM_HOST = variables.get('VISDOM_HOST')
    VISDOM_PORT = variables.get('VISDOM_PORT')
    print("Connecting to %s:%s" % (VISDOM_HOST, VISDOM_PORT))
    vis = Visdom(server="http://"+VISDOM_HOST,port=int(VISDOM_PORT))
    assert vis.check_connection()
    print("OK")
    win_text_loss = variables.get('VISDOM_win_text_loss')
    win_plot_loss = variables.get('VISDOM_win_plot_loss')
    print("win_text_loss: ", win_text_loss)
    print("win_plot_loss: ", win_plot_loss)
### END VISDOM ###

workflow_results = []
for i, res in enumerate(results):
    job_id = str(res)
    #print(i, job_id)

    # Wait for the job termination
    is_finished = False
    while True:
        is_finished = schedulerapi.isJobFinished(job_id)
        print(i, "job_id: ", job_id, ", is_finished: ", is_finished)
        if is_finished:
            break
        else:
            sleep(0.5) # 500ms
    # Get job result
    # RESULT_JSON: {"token": {"_token_id": 0}, "loss": 0.009321813276374468}
    result_map  = schedulerapi.getJobResult(job_id).getResultMap()
    result_json = result_map['RESULT_JSON']
    job_result  = json.loads(result_json)
    print(i, "job_id: ", job_id, ", job_result: ", job_result)
    workflow_results.append(job_result)
    ### BEGIN VISDOM ###
    token = job_result['token'] # {'_chocolate_id': 0}
    loss = job_result['loss']   # 450.9434895085956
    token_id = token['_chocolate_id'] # 0
    if VISDOM_ENABLED is not None and VISDOM_ENABLED == "true":
        #vis.text("{:.4f}\n".format(loss), win=win_text_loss, append=True, env='job_id_'+parent_job_id)
        vis.text("Job ID: {}, Loss: {:.4f}\n".format(job_id, loss), win=win_text_loss, append=True, env='job_id_'+parent_job_id)
        vis.line(Y=np.array([loss]), X=np.array([token_id]), win=win_plot_loss, update='append', env='job_id_'+parent_job_id)
    ### END VISDOM ###

workflow_results = json.dumps(workflow_results)
print('workflow_results: ', workflow_results)

variables.put('workflow_results', workflow_results)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="end"></controlFlow>
      <metadata>
        <positionTop>
            858.53125
        </positionTop>
        <positionLeft>
            181.53125
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html><head><link rel="stylesheet" href="/studio/styles/studio-standalone.css"><style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2144px;
            height:2712px;
            }
        </style></head><body><div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-85.53125px;left:-112.53125px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_415" style="top: 858.531px; left: 309.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task defines some input, here strings to be processed."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">Split</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_418" style="top: 986.531px; left: 309.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task will be replicated according to the 'runs' value specified in
				the replication script.
				The replication index is used in each task's instance to select the
				input."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_submit_job_no_wait.png" width="20px">&nbsp;<span class="name">Submit_Job_No_Wait</span></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_421" style="top: 1114.53px; left: 309.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="As a merge operation, we simply print the results from previous tasks."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">Merge</span></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_424" style="top: 474.531px; left: 309.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png" width="20px">&nbsp;<span class="name">Start</span></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_427" style="top: 858.531px; left: 437.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png" width="20px">&nbsp;<span class="name">Loop</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_430" style="top: 218.531px; left: 117.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task aims to parse PCA endpoint in order to retrieve a HOST and a PORT number to use them as an input in the data connector tasks."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Parse_MongoDB_Endpoint</span></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_433" style="top: 90.5312px; left: 117.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start the MongoDB server as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png" width="20px">&nbsp;<span class="name">Start_MongoDB</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_436" style="top: 346.531px; left: 309.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Groovy engine."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Join_Task</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_439" style="top: 90.5312px; left: 490.531px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Check_Visdom_Support</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_442" style="top: 218.531px; left: 390.531px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start the Visdom server as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Start_Visdom_Service</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_445" style="top: 217.531px; left: 564.531px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Nothing</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_448" style="top: 223.531px; left: 780.531px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Python.png" width="20px">&nbsp;<span class="name">Continuation</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_451" style="top: 986.531px; left: 437.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png" width="20px">&nbsp;<span class="name">Finish_MongoDB</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_454" style="top: 602.531px; left: 309.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Check_Algorithm_Condition</span></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_457" style="top: 730.531px; left: 181.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">If_Bayes</span></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_460" style="top: 730.531px; left: 309.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Else</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_463" style="top: 730.531px; left: 437.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Finally</span></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_466" style="top: 858.531px; left: 181.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Python engine."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">Split_and_Submit_Job_No_Wait</span></a></div><svg style="position:absolute;left:344.98171321138256px;top:770.5px" width="15.518286788617468" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 -10 50 0 0 " transform="translate(15.018286788617468,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path></svg><svg style="position:absolute;left:379.5px;top:888.5px" width="45.80000000000001" height="99" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 24.80000000000001 88 C 34.80000000000001 88 -10 -10 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#e5db3d" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M24.864965600000012,76.942366 L25.922275531898748,55.7791409218625 L20.905167656289922,63.51403772560228 L12.493947257501022,59.738938865572585 L24.864965600000012,76.942366" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M24.864965600000012,76.942366 L25.922275531898748,55.7791409218625 L20.905167656289922,63.51403772560228 L12.493947257501022,59.738938865572585 L24.864965600000012,76.942366" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_477" style="position: absolute; transform: translate(-50%, -50%); left: 401.9px; top: 938.75px;">replicate</div><svg style="position:absolute;left:349.5px;top:898.5px" width="36.5" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 15.5 88 C 25.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M17.008112,66.303232 L19.23307240780623,45.23074872954288 L13.796275816661353,52.67663637484854 L5.606476782654781,48.44258491288153 L17.008112,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M17.008112,66.303232 L19.23307240780623,45.23074872954288 L13.796275816661353,52.67663637484854 L5.606476782654781,48.44258491288153 L17.008112,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:349.5px;top:1026.5px" width="36.5" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 25.5 50 15.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-1.5081120000000008,66.303232 L9.893523217345216,48.44258491288153 L1.703724183338643,52.67663637484854 L-3.733072407806235,45.23074872954288 L-1.5081120000000008,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-1.5081120000000008,66.303232 L9.893523217345216,48.44258491288153 L1.703724183338643,52.67663637484854 L-3.733072407806235,45.23074872954288 L-1.5081120000000008,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:344.98171321138256px;top:386.5px" width="15.518286788617468" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 -10 50 0 0 " transform="translate(15.018286788617468,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path></svg><svg style="position:absolute;left:472.98171321138256px;top:770.5px" width="15.518286788617468" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 -10 50 0 0 " transform="translate(15.018286788617468,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path></svg><svg style="position:absolute;left:399.5px;top:514.5px" width="149" height="345" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 0 C -10 50 138 294 128 344 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M21.024437500000005,77.1945625 L35.25814407746463,92.89174686747943 L26.47457953491562,90.09014126945607 L22.362565308008566,98.34188890239504 L21.024437500000005,77.1945625" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M21.024437500000005,77.1945625 L35.25814407746463,92.89174686747943 L26.47457953491562,90.09014126945607 L22.362565308008566,98.34188890239504 L21.024437500000005,77.1945625" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_495" style="position: absolute; transform: translate(-50%, -50%); left: 473.5px; top: 686.5px;">loop</div><svg style="position:absolute;left:160px;top:130.5px" width="46.5" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 25.5 88 C 35.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M26.054347875,65.8307285 L25.580625687682105,44.64640440671719 L21.13518089595607,52.72341007736741 L12.47330726504951,49.565571385761125 L26.054347875,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M26.054347875,65.8307285 L25.580625687682105,44.64640440671719 L21.13518089595607,52.72341007736741 L12.47330726504951,49.565571385761125 L26.054347875,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:185.5px;top:258.5px" width="185" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 164 88 C 174 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M141.1875,60.1875 L124.93197906063223,46.59492706512943 L128.08367369567864,55.25903815210308 L120.0035172127353,59.69875336945079 L141.1875,60.1875" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M141.1875,60.1875 L124.93197906063223,46.59492706512943 L128.08367369567864,55.25903815210308 L120.0035172127353,59.69875336945079 L141.1875,60.1875" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:349.5px;top:263.03125px" width="491.53125" height="84.46875" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 83.46875 C -10 33.46875 480.53125 50 470.53125 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M87.34962600000003,54.19591200000001 L108.01974238063154,58.859203628361726 L101.25749942128348,52.592460442404004 L106.41629082303554,44.95133020707827 L87.34962600000003,54.19591200000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M87.34962600000003,54.19591200000001 L108.01974238063154,58.859203628361726 L101.25749942128348,52.592460442404004 L106.41629082303554,44.95133020707827 L87.34962600000003,54.19591200000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:380.03125px;top:130.03125px" width="121" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 88 C -10 38 110 50 100 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M10.56758,61.830692 L31.19014831075779,56.96143371273196 L22.365200968507605,54.29304385993471 L23.652500170692505,45.16381274422436 L10.56758,61.830692" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M10.56758,61.830692 L31.19014831075779,56.96143371273196 L22.365200968507605,54.29304385993471 L23.652500170692505,45.16381274422436 L10.56758,61.830692" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_508" style="position: absolute; transform: translate(-50%, -50%); left: 440.031px; top: 174.031px;">if</div><svg style="position:absolute;left:480.03125px;top:130.03125px" width="95" height="88" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 74 87 C 84 37 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M68.094982,62.23428975 L57.66979879123704,43.78664613181052 L57.567319699251236,53.00562102252944 L48.44113006376648,54.314308432559294 L68.094982,62.23428975" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M68.094982,62.23428975 L57.66979879123704,43.78664613181052 L57.567319699251236,53.00562102252944 L48.44113006376648,54.314308432559294 L68.094982,62.23428975" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_512" style="position: absolute; transform: translate(-50%, -50%); left: 527.031px; top: 173.531px;">else</div><svg style="position:absolute;left:480.03125px;top:130.03125px" width="311" height="94" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 290 93 C 300 43 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M240.71311999999998,62.722038 L222.71052415057926,51.54587843231219 L227.0472169365897,59.681792374812126 L219.67027852539138,65.21178149572246 L240.71311999999998,62.722038" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M240.71311999999998,62.722038 L222.71052415057926,51.54587843231219 L227.0472169365897,59.681792374812126 L219.67027852539138,65.21178149572246 L240.71311999999998,62.722038" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_516" style="position: absolute; transform: translate(-50%, -50%); left: 635.031px; top: 176.531px;">continuation</div><svg style="position:absolute;left:477.5px;top:898.5px" width="26.5" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 5.5 88 C 15.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M7.868953124999999,66.78168750000002 L12.848095417762192,46.18537370290451 L6.478576933147113,52.85089950918167 L-1.0826925730561543,47.575749894757394 L7.868953124999999,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M7.868953124999999,66.78168750000002 L12.848095417762192,46.18537370290451 L6.478576933147113,52.85089950918167 L-1.0826925730561543,47.575749894757394 L7.868953124999999,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:349.5px;top:514.5px" width="50" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 29 88 C 39 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M29.23930675,65.8307285 L27.91229114126974,44.68270188818144 L23.79594154197619,52.93228769453535 L15.01385033580508,50.12606709620525 L29.23930675,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M29.23930675,65.8307285 L27.91229114126974,44.68270188818144 L23.79594154197619,52.93228769453535 L15.01385033580508,50.12606709620525 L29.23930675,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:171.5px;top:642.5px" width="149" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 138 50 128 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M15.734015999999999,60.999424000000005 L36.77298385959016,58.47715688426225 L28.30356794508451,54.834493838204 L30.608053697794155,45.90760493917774 L15.734015999999999,60.999424000000005" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M15.734015999999999,60.999424000000005 L36.77298385959016,58.47715688426225 L28.30356794508451,54.834493838204 L30.608053697794155,45.90760493917774 L15.734015999999999,60.999424000000005" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_528" style="position: absolute; transform: translate(-50%, -50%); left: 245.5px; top: 686.5px;">if</div><svg style="position:absolute;left:294.98171321138256px;top:642.5px" width="15.518286788617468" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 -10 50 0 0 " transform="translate(15.018286788617468,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#00f" fill="#00f" transform="translate(15.018286788617468,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#00f" fill="#00f" transform="translate(15.018286788617468,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_532" style="position: absolute; transform: translate(-50%, -50%); left: 302px; top: 686.5px;">else</div><svg style="position:absolute;left:299.5px;top:642.5px" width="149" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 128 88 C 138 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M112.265984,60.999424000000005 L97.39194630220584,45.90760493917774 L99.69643205491549,54.834493838204 L91.22701614040983,58.47715688426225 L112.265984,60.999424000000005" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M112.265984,60.999424000000005 L97.39194630220584,45.90760493917774 L99.69643205491549,54.834493838204 L91.22701614040983,58.47715688426225 L112.265984,60.999424000000005" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_536" style="position: absolute; transform: translate(-50%, -50%); left: 373.5px; top: 686.5px;">continuation</div><svg style="position:absolute;left:221.5px;top:770.5px" width="60" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 39 88 C 49 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M38.173842,65.364084 L34.414900976112335,44.510538441056454 L31.278182865334045,53.1800828058726 L22.230899781984935,51.4061975757224 L38.173842,65.364084" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M38.173842,65.364084 L34.414900976112335,44.510538441056454 L31.278182865334045,53.1800828058726 L22.230899781984935,51.4061975757224 L38.173842,65.364084" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 350px; top: 889px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 350px; top: 849px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint replicate-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 380px; top: 889px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 365.5px; top: 1017px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint replicate-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 404.8px; top: 977px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 365.5px; top: 977px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 350px; top: 1145px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 350px; top: 1105px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 350px; top: 505px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 350px; top: 465px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 400px; top: 505px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 478px; top: 889px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 478px; top: 849px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 528px; top: 849px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 186px; top: 249px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 186px; top: 209px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 160.5px; top: 121px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 350px; top: 377px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 350px; top: 337px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 551.531px; top: 120.531px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint if-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 480.531px; top: 120.531px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 447.031px; top: 248.531px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 380.531px; top: 208.531px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 604.531px; top: 247.531px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 554.531px; top: 207.531px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 820.531px; top: 253.531px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 770.531px; top: 213.531px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 483.5px; top: 1017px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 483.5px; top: 977px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 379px; top: 633px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 379px; top: 593px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint if-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 300px; top: 633px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 222px; top: 761px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 172px; top: 721px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 350px; top: 761px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 300px; top: 721px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 478px; top: 761px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 428px; top: 721px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 261px; top: 889px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 261px; top: 849px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div></body></html>
 ]]>
    </visualization>
  </metadata>
</job>