<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.12" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="2" name="Multi_Tuners_Auto_ML" onTaskError="continueJobExecution" priority="normal" projectName="1. Tuning Algorithms" xsi:schemaLocation="urn:proactive:jobdescriptor:3.12 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.12/schedulerjob.xsd">
  <variables>
    <variable name="NATIVE_SCHEDULER" value=""/>
    <variable name="NATIVE_SCHEDULER_PARAMS" value=""/>
    <variable name="NODE_ACCESS_TOKEN" value=""/>
    <variable name="NODE_SOURCE_NAME" value=""/>
    <variable model="PA:LIST(no-container,docker,podman,singularity)" name="CONTAINER_PLATFORM" value="docker"/>
    <variable model="PA:Boolean" name="PROPAGATE_CONTAINER_PLATFORM" value="True"/>
    <variable model="PA:Boolean" name="CONTAINER_GPU_ENABLED" value="False"/>
    <variable model="PA:LIST(,docker://activeeon/dlm3,docker://activeeon/cuda,docker://activeeon/cuda2,docker://activeeon/rapidsai,docker://activeeon/tensorflow:latest,docker://activeeon/tensorflow:latest-gpu)" name="CONTAINER_IMAGE" value=""/>
    <variable model="PA:LIST(Bayes,Grid,Random,QuasiRandom,CMAES,MOCMAES)" name="TUNING_ALGORITHM" value="Bayes"/>
    <variable model="PA:CATALOG_OBJECT" name="WORKFLOW_TO_OPTIMIZE" value="auto-ml-optimization/Himmelblau_Function"/>
    <variable model="PA:Integer" name="MAX_ITERATIONS" value="2"/>
    <variable model="PA:Integer" name="PARALLEL_SAMPLES_PER_LOOP" value="2"/>
    <variable model="PA:Boolean" name="VISDOM_ENABLED" value="False"/>
    <variable model="PA:Boolean" name="VISDOM_PROXYFIED" value="False"/>
    <variable model="PA:Boolean" name="VISDOM_ENABLE_LOGIN" value="False"/>
    <variable name="VISDOM_USERNAME" value=""/>
    <variable model="PA:HIDDEN" name="VISDOM_PASSWORD" value=""/>
    <variable model="PA:NOT_EMPTY_STRING" name="VISDOM_INSTANCE_NAME" value="visdom-server-${PA_JOB_ID}"/>
    <variable model="PA:Boolean" name="TENSORBOARD_ENABLED" value="False"/>
    <variable model="PA:NOT_EMPTY_STRING" name="TENSORBOARD_INSTANCE_NAME" value="tensorboard-server-${PA_JOB_ID}"/>
    <variable model="PA:NOT_EMPTY_STRING" name="TENSORBOARD_HOST_LOG_PATH" value="/shared/$TENSORBOARD_INSTANCE_NAME"/>
    <variable model="PA:NOT_EMPTY_STRING" name="TENSORBOARD_CONTAINER_LOG_PATH" value="/tmp/$TENSORBOARD_INSTANCE_NAME"/>
    <variable model="PA:Boolean" name="TENSORBOARD_PROXYFIED" value="False"/>
  </variables>
  <description>
    <![CDATA[ This workflow proposes six algorithms for hyperparameter optimization. The choice of the sampling/search strategy depends strongly on the problem tackled. ]]>
  </description>
  <genericInformation>
<info name="bucketName" value="auto-ml-optimization"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/tunning_algorithm.png"/>
<info name="NS" value="$NATIVE_SCHEDULER"/>
<info name="NODE_ACCESS_TOKEN" value="$NODE_ACCESS_TOKEN"/>
<info name="Documentation" value="MLOS/MLOSUserGuide.html#_AutoML"/>
<info name="NS_BATCH" value="$NATIVE_SCHEDULER_PARAMS"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task fork="true" name="Split">
      <description>
        <![CDATA[ This task defines some input, here strings to be processed. ]]>
      </description>
      <variables>
        <variable inherited="true" model="PA:LIST(Bayes,Grid,Random,QuasiRandom,CMAES,MOCMAES)" name="TUNING_ALGORITHM" value="Grid"/>
        <variable inherited="true" name="SEARCH_SPACE" value="{'x': uniform(-6, 6), 'y': uniform(-6, 6)}"/>
        <variable inherited="true" model="PA:Integer" name="PARALLEL_SAMPLES_PER_LOOP" value="2"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
      </genericInformation>
      <depends>
        <task ref="Else"/>
      </depends>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_cuda_universal/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
import json
import numpy as np
import urllib.request
from lxml import etree

import chocolate as choco
from chocolate import uniform, quantized_uniform, log, quantized_log, choice
from chocolate import MongoDBConnection, Bayes, Grid, Random, QuasiRandom, CMAES, MOCMAES


def raiser(msg): raise Exception(msg)


PA_JOB_ID = variables.get("PA_JOB_ID")
print('PA_JOB_ID: ', PA_JOB_ID)

PA_TASK_ITERATION = int(variables.get('PA_TASK_ITERATION'))
print("PA_TASK_ITERATION: ", PA_TASK_ITERATION)

PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
print('PA_CATALOG_REST_URL: ', PA_CATALOG_REST_URL)

# Workflow to optimize
WORKFLOW_TO_OPTIMIZE = variables.get("WORKFLOW_TO_OPTIMIZE")
bucket_name, workflow_name = WORKFLOW_TO_OPTIMIZE.split('/')
print("bucket_name: ", bucket_name, ", workflow_name: ", workflow_name)

# workflow_url = PA_CATALOG_REST_URL + '/buckets/auto-ml-optimization/resources/Himmelblau_Function/raw'
workflow_url = PA_CATALOG_REST_URL + '/buckets/'+bucket_name+'/resources/'+workflow_name+'/raw'
print("workflow_url: ", workflow_url)

workflow_xml = urllib.request.urlopen(workflow_url).read()
# print("workflow_xml: " + str(workflow_xml))

# Define the search space
# space = "space=" + variables.get('SEARCH_SPACE')
# print('SEARCH_SPACE: ', space)
# exec(space)
workflow_root = etree.fromstring(workflow_xml)

search_space_xpath = "string(//*[@name='SEARCH_SPACE']/@value)"
search_space = str(workflow_root.xpath(search_space_xpath))

if len(str(search_space)) <= 0:
    raiser("The objective workflow do not contains a SEARCH_SPACE variable!")

search_space_model_xpath = "string(//*[@name='SEARCH_SPACE']/@model)"
search_space_model = str(workflow_root.xpath(search_space_model_xpath))

if len(str(search_space_model)) <= 0:
    raiser("The SEARCH_SPACE variable of the objective workflow do not contains a model type!")

# convert json to chocolate format
def hpo_covert(search_space):
    for data in search_space:
        key, value = list(search_space[data].items())[0]
        aux = key.strip() + "(" + str(value) + ")"
        if key.strip() == 'uniform' or key.strip() == "quantized_uniform" or key.strip() == "log" or key.strip() == "quantized_log":
            aux = aux.replace('[', '') 
            aux = aux.replace(']', '') 
        search_space[data] = eval(aux)
    return search_space  

def key_search(i):
    keys = list(i.keys())
    return keys

def nas_covert(search_space):
    cont_model = 0
    for data in search_space:
        key_list = key_search(data) 
        for i in key_list:
            try:
                key, value = list(data[i].items())[0]
                aux = key.strip()  + "(" + str(value) + ")"
                if key.strip() == 'uniform' or key.strip() == "quantized_uniform" or key.strip() == "log" or key.strip() == "quantized_log":
                    aux = aux.replace('[', '') 
                    aux = aux.replace(']', '') 
                search_space[cont_model][i] = eval(aux)
            except:
                pass
        cont_model += 1
    return search_space


if search_space_model.upper() == 'PA:JSON':
    # Define the search space from a JSON string
    space = "space=" + str(search_space)
    exec(space)
    space = hpo_covert(space)
    print("\nspace: ", space)

if search_space_model.upper() == 'PA:CATALOG_OBJECT':
    # Define the search space from a JSON file stored in the catalog
    search_space_bucket_name, search_space_script_name = search_space.split('/')
    print("search_space_bucket_name: ", search_space_bucket_name, ", search_space_script_name: ", search_space_script_name)
    search_space_script_url = PA_CATALOG_REST_URL + '/buckets/'+search_space_bucket_name+'/resources/'+search_space_script_name+'/raw'
    print("search_space_script_url: ", search_space_script_url)
    search_space_script_json = json.loads(urllib.request.urlopen(search_space_script_url).read())
    print("\nsearch_space_script_json: ", search_space_script_json)
    space = nas_covert(search_space_script_json)
    print("\nspace: ", space)


# Establish a connection to a MongoDB local database
MONGODB_URL = variables.get('MONGODB_URL')
print('MONGODB_URL: ', MONGODB_URL)
conn = MongoDBConnection(MONGODB_URL)
if PA_TASK_ITERATION == 0:
    print('Cleaning database for the first iteration')
    conn.clear()  # Clear all data from the database.

TUNING_ALGORITHM = variables.get('TUNING_ALGORITHM')
assert TUNING_ALGORITHM is not None, "TUNING_ALGORITHM must be set!"
print('TUNING_ALGORITHM: ', TUNING_ALGORITHM)

# Construct the optimizer
sampler = None
if TUNING_ALGORITHM == "Grid":
    sampler = Grid(conn, space)
if TUNING_ALGORITHM == "Random":
    sampler = Random(conn, space)
if TUNING_ALGORITHM == "QuasiRandom":
    sampler = QuasiRandom(conn, space)
if TUNING_ALGORITHM == "Bayes":
    sampler = Bayes(conn, space)
if TUNING_ALGORITHM == "CMAES":
    sampler = CMAES(conn, space)
if TUNING_ALGORITHM == "MOCMAES":
    sampler = MOCMAES(conn, space, 10)
assert sampler is not None, "TUNING_ALGORITHM must be selected!"

# Check for previous results
workflow_results = None
if PA_TASK_ITERATION > 0:
    workflow_results = variables.get('workflow_results')

# Add previous loss values to the database
if workflow_results is not None:
    previous_results = json.loads(workflow_results)
    print("Adding previous loss values to the database")
    for i, previous_result in enumerate(previous_results):
        # print(i, previous_result)
        previous_token = previous_result['token']
        previous_loss = previous_result['loss']
        print(i, 'previous_token: ', previous_token, ', previous_loss: ', previous_loss)
        # Add the loss to the database
        # sampler.update(token, loss)
        sampler.update(previous_token, previous_loss)

# Sample the next point
samples_per_iteration = int(variables.get('PARALLEL_SAMPLES_PER_LOOP'))
result = []
for i in range(samples_per_iteration):
    token, params = sampler.next()
    token_params = {
      'token': token,
      'params': params
    }
    token_params_json = json.dumps(token_params)
    print("sample: ", i, ", token_params: ", token_params_json)
    result.append(token_params_json)

print('result: ', result)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow>
        <replicate>
          <script>
            <code language="groovy">
              <![CDATA[
runs = result.size()
println "runs: " + runs
]]>
            </code>
          </script>
        </replicate>
      </controlFlow>
      <metadata>
        <positionTop>
            816.25
        </positionTop>
        <positionLeft>
            590
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Submit_Job_No_Wait">
      <description>
        <![CDATA[ This task will be replicated according to the 'runs' value specified in the replication script.
The replication index is used in each task's instance to select the input. ]]>
      </description>
      <variables>
        <variable inherited="true" model="PA:CATALOG_OBJECT" name="WORKFLOW_TO_OPTIMIZE" value="auto-ml-optimization/Himmelblau_Function"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_submit_job_no_wait.png"/>
      </genericInformation>
      <depends>
        <task ref="Split"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def jsonSlurper = new JsonSlurper()

int replication = variables.get('PA_TASK_REPLICATION')
token_params_json = results[0].value()[replication]
println "token_params_json: " + token_params_json

def object = jsonSlurper.parseText(token_params_json)
token = object.token
params = object.params
println "token:  " + token
println "params: " + params

//String token_encoded = JsonOutput.toJson([token: token]).bytes.encodeBase64().toString()
//String params_encoded = JsonOutput.toJson([params: params]).bytes.encodeBase64().toString()
String token_encoded = JsonOutput.toJson(token).bytes.encodeBase64().toString()
String params_encoded = JsonOutput.toJson(params).bytes.encodeBase64().toString()
println "token_encoded: " + token_encoded
println "params_encoded: " + params_encoded

// Check Visdom support
def VISDOM_ENABLED = false
if ("true".equalsIgnoreCase(variables.get("VISDOM_ENABLED"))) {
    VISDOM_ENABLED = true
}

// Check Tensorboard support
def TENSORBOARD_ENABLED = false
if ("true".equalsIgnoreCase(variables.get("TENSORBOARD_ENABLED"))) {
    TENSORBOARD_ENABLED = true
}

// Check if container platform should be propagated
def PROPAGATE_CONTAINER_PLATFORM = false
if ("true".equalsIgnoreCase(variables.get("PROPAGATE_CONTAINER_PLATFORM"))) {
    PROPAGATE_CONTAINER_PLATFORM = true
}

// Submit a workflow referenced in the ProActive Catalog (or accessible by url)
// Please add the bucket and workflow names that you want to execute as Task Variables 'call_workflow'
// connect to the scheduler
schedulerapi.connect()

// get the workflow information from Task Variables
def calledWorkflow = variables.get("WORKFLOW_TO_OPTIMIZE")

// variables submitted to the workflow: Empty in the example, modify this map to give parameters to the submitted workflow
//workflow_variables = Collections.EMPTY_MAP
workflow_variables = [:]
workflow_variables.put("token_encoded", token_encoded)
workflow_variables.put("params_encoded", params_encoded)
workflow_variables.put("NS", variables.get("NS"))
workflow_variables.put("NS_BATCH", variables.get("NS_BATCH"))
workflow_variables.put("NODE_ACCESS_TOKEN", variables.get("NODE_ACCESS_TOKEN"))
workflow_variables.put("NODE_SOURCE_NAME", variables.get("NODE_SOURCE_NAME"))
workflow_variables.put("NATIVE_SCHEDULER", variables.get("NATIVE_SCHEDULER"))
workflow_variables.put("NATIVE_SCHEDULER_PARAMS", variables.get("NATIVE_SCHEDULER_PARAMS"))

// Add generated params from search space as a workflow variable
params.each {
    workflow_variables.put(it.key, it.value)
}

workflow_variables.put("TENSORBOARD_ENABLED", variables.get("TENSORBOARD_ENABLED"))
if (TENSORBOARD_ENABLED) {
    println "Adding Tensorboard support to the workflow variables"
    workflow_variables.put("HOST_LOG_PATH", variables.get("HOST_LOG_PATH"))
    workflow_variables.put("CONTAINER_LOG_PATH", variables.get("CONTAINER_LOG_PATH"))
    workflow_variables.put("INSTANCE_NAME", variables.get("INSTANCE_NAME"))
    workflow_variables.put("CONTAINER_ROOTLESS_ENABLED", variables.get("CONTAINER_ROOTLESS_ENABLED"))
}

workflow_variables.put("VISDOM_ENABLED", VISDOM_ENABLED)
if (VISDOM_ENABLED) {
    println "Adding Visdom support to the workflow variables"
    def VISDOM_INSTANCE_NAME = variables.get("VISDOM_INSTANCE_NAME")
    def VISDOM_ENDPOINT = variables.get("ENDPOINT_" + VISDOM_INSTANCE_NAME)
    workflow_variables.put("VISDOM_ENDPOINT", VISDOM_ENDPOINT)
}

if (PROPAGATE_CONTAINER_PLATFORM) {
    println "Propagating container platform to the workflow variables"
    def CONTAINER_PLATFORM = variables.get("CONTAINER_PLATFORM")
    workflow_variables.put("CONTAINER_PLATFORM", CONTAINER_PLATFORM)
}

println "Submitting workflow " + calledWorkflow

// submitting the job
def generic_infos_map = ["PARENT_JOB_ID" : variables.get("PA_JOB_ID")]
jobid = schedulerapi.submitFromCatalog(variables.get("PA_CATALOG_REST_URL"), calledWorkflow, workflow_variables, generic_infos_map)

// alternatively you can submit a workflow from a direct url
// // add sessionId to request header map
// requestHeader = Collections.singletonMap("sessionId", schedulerapi.getSession()
// jobUrl = "https://try.activeeon.com/catalog/buckets/basic-examples/resources/distributed_computing_Pi/raw"
// jobid = schedulerapi.submit(jobURL, variables, generic_infos_map, requestHeader)

println "Job submitted with job id " + jobid
result = jobid
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            943.75
        </positionTop>
        <positionLeft>
            590
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Merge">
      <description>
        <![CDATA[ As a merge operation, we simply print the results from previous tasks. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
      </genericInformation>
      <depends>
        <task ref="Submit_Job_No_Wait"/>
      </depends>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_cuda_universal/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
import json, os, math, shutil
import numpy as np

from io import BytesIO
from PIL import Image
from argparse import ArgumentParser
from time import sleep

# connect to the scheduler
schedulerapi.connect()

PA_JOB_ID = variables.get("PA_JOB_ID")
print('PA_JOB_ID: ', PA_JOB_ID)

# Check Visdom support
VISDOM_ENABLED = variables.get("VISDOM_ENABLED")
if VISDOM_ENABLED is not None and VISDOM_ENABLED.lower() == "true":
    VISDOM_ENABLED = True
    from visdom import Visdom
else:
    VISDOM_ENABLED = False

# Check Tensorboard support
TENSORBOARD_ENABLED = variables.get("TENSORBOARD_ENABLED")
if TENSORBOARD_ENABLED is not None and TENSORBOARD_ENABLED.lower() == "true":
    TENSORBOARD_ENABLED = True
    from tensorboardX import SummaryWriter
else:
    TENSORBOARD_ENABLED = False

if TENSORBOARD_ENABLED:
    CONTAINER_LOG_PATH = variables.get("CONTAINER_LOG_PATH")
    assert CONTAINER_LOG_PATH is not None
    TENSORBOARD_JOB_ID = "job_ID_" + PA_JOB_ID
    TENSORBOARD_PATH = os.path.join(CONTAINER_LOG_PATH, TENSORBOARD_JOB_ID)
    print('TENSORBOARD_PATH: ', TENSORBOARD_PATH)
    if os.path.isdir(TENSORBOARD_PATH):
        try:
            print('Removing existing path')
            shutil.rmtree(TENSORBOARD_PATH)
        except:
            print('Error while deleting directory')
    os.mkdir(TENSORBOARD_PATH)
    writer = SummaryWriter(TENSORBOARD_PATH)

# print('received results: ', results)

parent_job_id = PA_JOB_ID

### BEGIN VISDOM ###
vis = None
if VISDOM_ENABLED:
    VISDOM_HOST = variables.get('VISDOM_HOST')
    VISDOM_PORT = variables.get('VISDOM_PORT')
    print("Connecting to %s:%s" % (VISDOM_HOST, VISDOM_PORT))
    vis = Visdom(server="http://"+VISDOM_HOST, port=int(VISDOM_PORT))
    assert vis.check_connection()
    print("OK")
    win_text_loss = variables.get('VISDOM_win_text_loss')
    win_plot_loss = variables.get('VISDOM_win_plot_loss')
    print("win_text_loss: ", win_text_loss)
    print("win_plot_loss: ", win_plot_loss)
### END VISDOM ###

results_list = []
for r in results:
    v = int(str(r.value()))
    results_list.append(v)
results_list.sort()

workflow_results = []
# for i, res in enumerate(results):
for i, job_id in enumerate(results_list):
    # job_id = str(res.getValue())
    # print(i, job_id)

    # Wait for the job termination
    is_finished = False
    while True:
        is_finished = schedulerapi.isJobFinished(str(job_id))
        print(i, "job_id: ", job_id, ", is_finished: ", is_finished)
        if is_finished:
            break
        else:
            sleep(0.5)  # 500ms

    # Get job result
    # RESULT_JSON: {"token": {"_token_id": 0}, "loss": 0.009321813276374468}
    result_map = schedulerapi.getJobResult(str(job_id)).getResultMap()
    result_json = result_map['RESULT_JSON']
    job_result = json.loads(result_json)
    print(i, "job_id: ", job_id, ", job_result: ", job_result)
    workflow_results.append(job_result)

    token = job_result['token']        # {'_chocolate_id': 0}
    loss = job_result['loss']          # 450.9434895085956
    token_id = token['_chocolate_id']  # 0

    if VISDOM_ENABLED:
        VISDOM_JOB_ID = 'job_id_' + parent_job_id
        # vis.text("{:.4f}\n".format(loss), win=win_text_loss, append=True, env=VISDOM_JOB_ID)
        vis.text("Job ID: {}, Loss: {:.4f}\n".format(job_id, loss), win=win_text_loss, append=True, env=VISDOM_JOB_ID)
        # vis.line(Y=np.array([loss]), X=np.array([token_id]), win=win_plot_loss, update='append', env=VISDOM_JOB_ID)
        vis.line(Y=np.array([loss]), X=np.array([job_id]), win=win_plot_loss, update='append', env=VISDOM_JOB_ID)

    if TENSORBOARD_ENABLED:
        writer.add_text('Text/parent_job', 'text logged at job: ' + str(job_id), loss)
        writer.add_scalar('Loss', np.array([loss]), job_id)
        # writer.add_scalar('Loss', np.array([loss]), token_id)

if TENSORBOARD_ENABLED:
    writer.close()

workflow_results = json.dumps(workflow_results)
print('workflow_results: ', workflow_results)

variables.put('workflow_results', workflow_results)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="end"/>
      <metadata>
        <positionTop>
            1069.39453125
        </positionTop>
        <positionLeft>
            590
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Start">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png"/>
      </genericInformation>
      <depends>
        <task ref="Join_Task"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
PA_TASK_ITERATION = variables.get('PA_TASK_ITERATION')
println '\n\nLoop block start ' + PA_TASK_ITERATION

MONGODB_HOST = variables.get("MONGODB_HOST")
MONGODB_PORT = variables.get("MONGODB_PORT")
MONGODB_USER = variables.get("MONGODB_USER")
MONGODB_PASS = variables.get("MONGODB_PASS")

MONGODB_URL  = "mongodb://"+MONGODB_USER+":"+MONGODB_PASS+"@"+MONGODB_HOST+":"+MONGODB_PORT
variables.put("MONGODB_URL", MONGODB_URL)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"/>
      <metadata>
        <positionTop>
            435.625
        </positionTop>
        <positionLeft>
            621.875
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Loop">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png"/>
      </genericInformation>
      <depends>
        <task ref="Finally"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
print('Loop block end ' + variables.get('PA_TASK_ITERATION'))
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="end">
        <loop target="Start">
          <script>
            <code language="javascript">
              <![CDATA[
if(variables.get('PA_TASK_ITERATION') < (variables.get('MAX_ITERATIONS')) - 1) {
    loop = true;
} else {
    loop = false;
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            816.25
        </positionTop>
        <positionLeft>
            790.13671875
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Parse_MongoDB_Endpoint">
      <description>
        <![CDATA[ This task aims to parse PCA endpoint in order to retrieve a HOST and a PORT number to use them as an input in the data connector tasks. ]]>
      </description>
      <depends>
        <task ref="Start_MongoDB"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def endpoint = new URL(results[0].toString())
variables.put("MONGODB_HOST", endpoint.getHost())
variables.put("MONGODB_PORT", endpoint.getPort())
// Wait for database sever to be up and fully running.
sleep(5000)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            182.5
        </positionTop>
        <positionLeft>
            147.3828125
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Start_MongoDB" onTaskError="cancelJob">
      <description>
        <![CDATA[ Start the MongoDB server as a service. ]]>
      </description>
      <variables>
        <variable inherited="false" name="SERVICE_ID" value="MongoDB"/>
        <variable inherited="false" name="INSTANCE_NAME" value="mongodb-server-${PA_JOB_ID}"/>
        <variable inherited="false" name="ENGINE" value="$CONTAINER_PLATFORM"/>
        <variable inherited="false" name="USER" value="activeeon"/>
        <variable inherited="false" model="PA:HIDDEN" name="PASSWORD" value="ENC(T11vzCF5nEz9mzCTXMOeqjTzBLOp2Axu)"/>
        <variable inherited="true" name="NATIVE_SCHEDULER" value=""/>
        <variable inherited="true" name="NATIVE_SCHEDULER_PARAMS" value=""/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png"/>
        <info name="task.documentation" value="PCA/PCAUserGuide.html"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/cloud-automation-scripts/resources/Service_Start/raw">
            <arguments>
              <argument value="NATIVE_SCHEDULER"/>
              <argument value="NATIVE_SCHEDULER_PARAMS"/>
              <argument value="ENGINE"/>
              <argument value="USER"/>
              <argument value="PASSWORD"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
variables.put('MONGODB_USER', variables.get("USER"))
variables.put('MONGODB_PASS', variables.get("PASSWORD"))
variables.put('MONGODB_INSTANCE_NAME', variables.get("INSTANCE_NAME"))
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            54.98046875
        </positionTop>
        <positionLeft>
            147.3828125
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Join_Task">
      <description>
        <![CDATA[ The simplest task, ran by a Groovy engine. ]]>
      </description>
      <depends>
        <task ref="Parse_MongoDB_Endpoint"/>
        <task ref="Continuation1"/>
        <task ref="Continuation2"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            310
        </positionTop>
        <positionLeft>
            621.875
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Finish_MongoDB" onTaskError="cancelJob">
      <variables>
        <variable inherited="false" name="INSTANCE_ID" value=""/>
        <variable inherited="false" name="INSTANCE_NAME" value="mongodb-server-${PA_JOB_ID}"/>
        <variable inherited="false" model="PA:LIST(Finish_MongoDB)" name="ACTION" value="Finish_MongoDB"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png"/>
        <info name="task.documentation" value="PCA/PCAUserGuide.html"/>
      </genericInformation>
      <depends>
        <task ref="Loop"/>
      </depends>
      <scriptExecutable>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/cloud-automation-scripts/resources/Service_Action/raw">
            <arguments>
              <argument value="MONGODB_INSTANCE_NAME"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            943.75
        </positionTop>
        <positionLeft>
            790.13671875
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Check_Algorithm_Condition">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <depends>
        <task ref="Start"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Checking the branch condition of the algorithm")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow>
        <if continuation="Finally" else="Else" target="If_Bayes">
          <script>
            <code language="groovy">
              <![CDATA[
TUNING_ALGORITHM = variables.get('TUNING_ALGORITHM')

if(TUNING_ALGORITHM.toLowerCase().contains("bayes")){
    branch = "if";
} else {
    branch = "else";
}
]]>
            </code>
          </script>
        </if>
      </controlFlow>
      <metadata>
        <positionTop>
            561.25
        </positionTop>
        <positionLeft>
            570.25390625
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="If_Bayes">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Running the If_Bayes branch")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"/>
      <metadata>
        <positionTop>
            688.73046875
        </positionTop>
        <positionLeft>
            413.0078125
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Else">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Running the Else branch")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"/>
      <metadata>
        <positionTop>
            688.73046875
        </positionTop>
        <positionLeft>
            590
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Finally">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Running the continuation brash [Finally task]")
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            688.73046875
        </positionTop>
        <positionLeft>
            738.515625
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Split_and_Submit_Job_No_Wait">
      <description>
        <![CDATA[ The simplest task, ran by a Python engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
      </genericInformation>
      <depends>
        <task ref="If_Bayes"/>
      </depends>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_cuda_universal/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
import os, math, json, base64, shutil
import numpy as np
import urllib.request

from lxml import etree
from io import BytesIO
from PIL import Image
from argparse import ArgumentParser
from time import sleep

import chocolate as choco
from chocolate import uniform, quantized_uniform, log, quantized_log, choice
from chocolate import MongoDBConnection, Bayes, Grid, Random, QuasiRandom, CMAES, MOCMAES

from py4j.java_collections import SetConverter, MapConverter, ListConverter


def raiser(msg): raise Exception(msg)


# Check Visdom support
VISDOM_ENABLED = variables.get("VISDOM_ENABLED")
if VISDOM_ENABLED is not None and VISDOM_ENABLED.lower() == "true":
    VISDOM_ENABLED = True
    from visdom import Visdom
else:
    VISDOM_ENABLED = False

# Check Tensorboard support
TENSORBOARD_ENABLED = variables.get("TENSORBOARD_ENABLED")
if TENSORBOARD_ENABLED is not None and TENSORBOARD_ENABLED.lower() == "true":
    TENSORBOARD_ENABLED = True
    from tensorboardX import SummaryWriter
else:
    TENSORBOARD_ENABLED = False

# Check if container platform should be propagated
PROPAGATE_CONTAINER_PLATFORM = variables.get("PROPAGATE_CONTAINER_PLATFORM")
if PROPAGATE_CONTAINER_PLATFORM is not None and PROPAGATE_CONTAINER_PLATFORM.lower() == "true":
    PROPAGATE_CONTAINER_PLATFORM = True
else:
    PROPAGATE_CONTAINER_PLATFORM = False

if TENSORBOARD_ENABLED:
    CONTAINER_LOG_PATH = variables.get("CONTAINER_LOG_PATH")
    assert CONTAINER_LOG_PATH is not None
    TENSORBOARD_JOB_ID = "job_ID_" + variables.get("PA_JOB_ID")
    TENSORBOARD_PATH = os.path.join(CONTAINER_LOG_PATH, TENSORBOARD_JOB_ID)
    print('TENSORBOARD_PATH: ', TENSORBOARD_PATH)
    if os.path.isdir(TENSORBOARD_PATH):
        try:
            print('Removing existing path')
            shutil.rmtree(TENSORBOARD_PATH)
        except:
            print('Error while deleting directory')
    os.mkdir(TENSORBOARD_PATH)
    writer = SummaryWriter(TENSORBOARD_PATH)

# Connect to the scheduler
schedulerapi.connect()

PA_JOB_ID = variables.get("PA_JOB_ID")
print('PA_JOB_ID: ', PA_JOB_ID)

PA_TASK_ITERATION = int(variables.get('PA_TASK_ITERATION'))
print("PA_TASK_ITERATION: ", PA_TASK_ITERATION)

PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
print('PA_CATALOG_REST_URL: ', PA_CATALOG_REST_URL)

# Workflow to optimize
WORKFLOW_TO_OPTIMIZE = variables.get("WORKFLOW_TO_OPTIMIZE")
bucket_name, workflow_name = WORKFLOW_TO_OPTIMIZE.split('/')
print("bucket_name: ", bucket_name, ", workflow_name: ", workflow_name)

# workflow_url = PA_CATALOG_REST_URL + '/buckets/auto-ml-optimization/resources/Himmelblau_Function/raw'
workflow_url = PA_CATALOG_REST_URL + '/buckets/'+bucket_name+'/resources/'+workflow_name+'/raw'
print("workflow_url: ", workflow_url)

workflow_xml = urllib.request.urlopen(workflow_url).read()
# print("workflow_xml: " + str(workflow_xml))

# Define the search space
# space = "space=" + variables.get('SEARCH_SPACE')
# print('SEARCH_SPACE: ', space)
# exec(space)
workflow_root = etree.fromstring(workflow_xml)

search_space_xpath = "string(//*[@name='SEARCH_SPACE']/@value)"
search_space = str(workflow_root.xpath(search_space_xpath))

if len(str(search_space)) <= 0:
    raiser("The objective workflow do not contains a SEARCH_SPACE variable!")

search_space_model_xpath = "string(//*[@name='SEARCH_SPACE']/@model)"
search_space_model = str(workflow_root.xpath(search_space_model_xpath))

if len(str(search_space_model)) <= 0:
    raiser("The SEARCH_SPACE variable of the objective workflow do not contains a model type!")

# convert json to chocolate format
def hpo_covert(search_space):
    for data in search_space:
        key, value = list(search_space[data].items())[0]
        aux = key.strip() + "(" + str(value) + ")"
        if key.strip() == 'uniform' or key.strip() == "quantized_uniform" or key.strip() == "log" or key.strip() == "quantized_log":
            aux = aux.replace('[', '') 
            aux = aux.replace(']', '') 
        search_space[data] = eval(aux)
    return search_space  

def key_search(i):
    keys = list(i.keys())
    return keys

def nas_covert(search_space):
    cont_model = 0
    for data in search_space:
        key_list = key_search(data) 
        for i in key_list:
            try:
                key, value = list(data[i].items())[0]
                aux = key.strip()  + "(" + str(value) + ")"
                if key.strip() == 'uniform' or key.strip() == "quantized_uniform" or key.strip() == "log" or key.strip() == "quantized_log":
                    aux = aux.replace('[', '') 
                    aux = aux.replace(']', '') 
                search_space[cont_model][i] = eval(aux)
            except:
                pass
        cont_model += 1
    return search_space


if search_space_model.upper() == 'PA:JSON':
    # Define the search space from a JSON string
    space = "space=" + str(search_space)
    exec(space)
    space = hpo_covert(space)
    print("\nspace: ", space)

if search_space_model.upper() == 'PA:CATALOG_OBJECT':
    # Define the search space from a JSON file stored in the catalog
    search_space_bucket_name, search_space_script_name = search_space.split('/')
    print("search_space_bucket_name: ", search_space_bucket_name, ", search_space_script_name: ", search_space_script_name)
    search_space_script_url = PA_CATALOG_REST_URL + '/buckets/'+search_space_bucket_name+'/resources/'+search_space_script_name+'/raw'
    print("search_space_script_url: ", search_space_script_url)
    search_space_script_json = json.loads(urllib.request.urlopen(search_space_script_url).read())
    print("\nsearch_space_script_json: ", search_space_script_json)
    space = nas_covert(search_space_script_json)
    print("\nspace: ", space)


# Establish a connection to a MongoDB local database
MONGODB_URL = variables.get('MONGODB_URL')
print('MONGODB_URL: ', MONGODB_URL)
conn = MongoDBConnection(MONGODB_URL)
if PA_TASK_ITERATION == 0:
    print('Cleaning database for the first iteration')
    conn.clear()  # Clear all data from the database.

TUNING_ALGORITHM = variables.get('TUNING_ALGORITHM')
assert TUNING_ALGORITHM is not None, "TUNING_ALGORITHM must be set!"
print('TUNING_ALGORITHM: ', TUNING_ALGORITHM)

# Construct the optimizer
sampler = None
if TUNING_ALGORITHM == "Grid":
    sampler = Grid(conn, space)
if TUNING_ALGORITHM == "Random":
    sampler = Random(conn, space)
if TUNING_ALGORITHM == "QuasiRandom":
    sampler = QuasiRandom(conn, space)
if TUNING_ALGORITHM == "Bayes":
    sampler = Bayes(conn, space)
if TUNING_ALGORITHM == "CMAES":
    sampler = CMAES(conn, space)
if TUNING_ALGORITHM == "MOCMAES":
    sampler = MOCMAES(conn, space, 10)
assert sampler is not None, "TUNING_ALGORITHM must be selected!"

# Check for previous results
workflow_results = None
if PA_TASK_ITERATION > 0:
    workflow_results = variables.get('workflow_results')

# Add previous loss values to the database
if workflow_results is not None:
    previous_results = json.loads(workflow_results)
    print("Adding previous loss values to the database")
    for i, previous_result in enumerate(previous_results):
        # print(i, previous_result)
        previous_token = previous_result['token']
        previous_loss = previous_result['loss']
        print(i, 'previous_token: ', previous_token, ', previous_loss: ', previous_loss)
        # Add the loss to the database
        # sampler.update(token, loss)
        sampler.update(previous_token, previous_loss)

# Sample the next point and submit job
samples_per_iteration = int(variables.get('PARALLEL_SAMPLES_PER_LOOP'))
results = []
map_converter = MapConverter()
for i in range(samples_per_iteration):
    token, params = sampler.next()
    print("sample: ", i, ", token: ", token, ", params: ", params)

    token_encoded = base64.b64encode(json.dumps(token).encode('utf-8')).decode("utf-8")
    params_encoded = base64.b64encode(json.dumps(params).encode("utf-8")).decode("utf-8")
    print("token_encoded:  ", token_encoded)
    print("params_encoded: ", params_encoded)

    # variables submitted to the workflow
    workflow_variables = {
        "token_encoded": token_encoded,
        "params_encoded": params_encoded,
        "NS": variables.get("NS"),
        "NS_BATCH": variables.get("NS_BATCH"),
        "NODE_ACCESS_TOKEN": variables.get("NODE_ACCESS_TOKEN"),
        "NODE_SOURCE_NAME": variables.get("NODE_SOURCE_NAME"),
        "NATIVE_SCHEDULER": variables.get("NATIVE_SCHEDULER"),
        "NATIVE_SCHEDULER_PARAMS": variables.get("NATIVE_SCHEDULER_PARAMS")
    }
    # Add generated params from the search space as a workflow variable
    workflow_variables.update(params)

    workflow_variables['TENSORBOARD_ENABLED'] = variables.get("TENSORBOARD_ENABLED")
    if TENSORBOARD_ENABLED:
        print("Adding Tensorboard support to the workflow variables")
        workflow_variables['HOST_LOG_PATH'] = variables.get("HOST_LOG_PATH")
        workflow_variables['CONTAINER_LOG_PATH'] = variables.get("CONTAINER_LOG_PATH")
        workflow_variables['INSTANCE_NAME'] = variables.get("TENSORBOARD_INSTANCE_NAME")
        workflow_variables['CONTAINER_ROOTLESS_ENABLED'] = variables.get("CONTAINER_ROOTLESS_ENABLED")

    workflow_variables['VISDOM_ENABLED'] = VISDOM_ENABLED
    if VISDOM_ENABLED:
        print("Adding Visdom support to the workflow variables")
        VISDOM_INSTANCE_NAME = variables.get("VISDOM_INSTANCE_NAME")
        VISDOM_ENDPOINT = variables.get("ENDPOINT_" + VISDOM_INSTANCE_NAME)
        workflow_variables['VISDOM_ENDPOINT'] = VISDOM_ENDPOINT

    if PROPAGATE_CONTAINER_PLATFORM:
        print("Propagating container platform to the workflow variables")
        CONTAINER_PLATFORM = variables.get("CONTAINER_PLATFORM")
        workflow_variables['CONTAINER_PLATFORM'] = CONTAINER_PLATFORM

    workflow_variables_java_map = map_converter.convert(workflow_variables, schedulerapi._gateway_client)
    #print('workflow_variables_java_map: ', workflow_variables_java_map)
    generic_infos_map = {
        "PARENT_JOB_ID": PA_JOB_ID
    }
    generic_infos_java_map = map_converter.convert(generic_infos_map, schedulerapi._gateway_client)
    #print('generic_infos_java_map: ', generic_infos_java_map)

    print("Submitting workflow ", WORKFLOW_TO_OPTIMIZE)
    # submitting the job
    job_id = schedulerapi.submitFromCatalog(PA_CATALOG_REST_URL, bucket_name, workflow_name, workflow_variables_java_map, generic_infos_java_map).longValue()
    print("Job submitted with job id ", job_id)

    results.append(job_id)
# end iterations

parent_job_id = PA_JOB_ID

### BEGIN VISDOM ###
vis = None
if VISDOM_ENABLED:
    VISDOM_HOST = variables.get('VISDOM_HOST')
    VISDOM_PORT = variables.get('VISDOM_PORT')
    print("Connecting to %s:%s" % (VISDOM_HOST, VISDOM_PORT))
    vis = Visdom(server="http://"+VISDOM_HOST, port=int(VISDOM_PORT))
    assert vis.check_connection()
    print("OK")
    win_text_loss = variables.get('VISDOM_win_text_loss')
    win_plot_loss = variables.get('VISDOM_win_plot_loss')
    print("win_text_loss: ", win_text_loss)
    print("win_plot_loss: ", win_plot_loss)
### END VISDOM ###

workflow_results = []
results.sort()
for i, res in enumerate(results):
    job_id = str(res)
    # print(i, job_id)

    # Wait for the job termination
    is_finished = False
    while True:
        is_finished = schedulerapi.isJobFinished(job_id)
        print(i, "job_id: ", job_id, ", is_finished: ", is_finished)
        if is_finished:
            break
        else:
            sleep(0.5)  # 500ms

    # Get job result
    # RESULT_JSON: {"token": {"_token_id": 0}, "loss": 0.009321813276374468}
    result_map = schedulerapi.getJobResult(job_id).getResultMap()
    result_json = result_map['RESULT_JSON']
    job_result = json.loads(result_json)
    print(i, "job_id: ", job_id, ", job_result: ", job_result)
    workflow_results.append(job_result)

    token = job_result['token']        # {'_chocolate_id': 0}
    loss = job_result['loss']          # 450.9434895085956
    token_id = token['_chocolate_id']  # 0

    if VISDOM_ENABLED:
        # vis.text("{:.4f}\n".format(loss), win=win_text_loss, append=True, env='job_id_'+parent_job_id)
        vis.text("Job ID: {}, Loss: {:.4f}\n".format(job_id, loss), win=win_text_loss, append=True, env='job_id_'+parent_job_id)
        # vis.line(Y=np.array([loss]), X=np.array([token_id]), win=win_plot_loss, update='append', env='job_id_'+parent_job_id)
        vis.line(Y=np.array([loss]), X=np.array([int(job_id)]), win=win_plot_loss, update='append', env='job_id_'+parent_job_id)

    if TENSORBOARD_ENABLED:
        writer.add_text('Text/parent_job', 'text logged at job: ' + str(job_id), loss)
        writer.add_scalar('Loss', np.array([loss]), int(job_id))
        # writer.add_scalar('Loss', np.array([loss]), token_id)

if TENSORBOARD_ENABLED:
    writer.close()

workflow_results = json.dumps(workflow_results)
print('workflow_results: ', workflow_results)

variables.put('workflow_results', workflow_results)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="end"/>
      <metadata>
        <positionTop>
            816.25
        </positionTop>
        <positionLeft>
            413.0078125
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Check_Visdom_Support">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Checking for Visdom support")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow>
        <if continuation="Continuation1" else="Nothing1" target="Start_Visdom_Service">
          <script>
            <code language="groovy">
              <![CDATA[
if ("true".equalsIgnoreCase(variables.get("VISDOM_ENABLED"))) {
    branch = "if"
} else {
    branch = "else"
}
]]>
            </code>
          </script>
        </if>
      </controlFlow>
      <metadata>
        <positionTop>
            54.98046875
        </positionTop>
        <positionLeft>
            553.125
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Start_Visdom_Service">
      <description>
        <![CDATA[ Start the Visdom server as a service. ]]>
      </description>
      <variables>
        <variable inherited="false" name="SERVICE_ID" value="Visdom"/>
        <variable inherited="false" name="INSTANCE_NAME" value="$VISDOM_INSTANCE_NAME"/>
        <variable inherited="false" name="ENGINE" value="$CONTAINER_PLATFORM"/>
        <variable inherited="false" name="PROXYFIED" value="$VISDOM_PROXYFIED"/>
        <variable inherited="true" name="NATIVE_SCHEDULER" value=""/>
        <variable inherited="true" name="NATIVE_SCHEDULER_PARAMS" value=""/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="MLOS/MLOSUserGuide.html"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/cloud-automation-scripts/resources/Service_Start/raw">
            <arguments>
              <argument value="NATIVE_SCHEDULER"/>
              <argument value="NATIVE_SCHEDULER_PARAMS"/>
              <argument value="ENGINE"/>
              <argument value="PROXYFIED"/>
              <argument value="VISDOM_ENABLE_LOGIN"/>
              <argument value="VISDOM_USERNAME"/>
              <argument value="VISDOM_PASSWORD"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            182.5
        </positionTop>
        <positionLeft>
            329.86328125
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Nothing1">
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Visdom disabled")
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            182.5
        </positionTop>
        <positionLeft>
            484.375
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Continuation1">
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_cuda_universal/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
# Wait for Visdom sever to be up and fully running.
import time
time.sleep(5)

VISDOM_ENABLED = variables.get('VISDOM_ENABLED')

if VISDOM_ENABLED is not None and VISDOM_ENABLED == "true":
    import numpy as np
    from visdom import Visdom
    VISDOM_INSTANCE_NAME = variables.get("VISDOM_INSTANCE_NAME")
    VISDOM_ENDPOINT = variables.get("ENDPOINT_" + VISDOM_INSTANCE_NAME)
    #VISDOM_ENDPOINT = variables.get("VISDOM_ENDPOINT") if variables.get("VISDOM_ENDPOINT") else results[0].__str__()
    print("VISDOM_ENDPOINT: ", VISDOM_ENDPOINT)

    if VISDOM_ENDPOINT is not None:
        VISDOM_ENDPOINT = VISDOM_ENDPOINT.replace("http://", "")
        print(VISDOM_ENDPOINT)

    (VISDOM_HOST, VISDOM_PORT) = VISDOM_ENDPOINT.split(":")

    variables.put('VISDOM_HOST', VISDOM_HOST)
    variables.put('VISDOM_PORT', VISDOM_PORT)
    print("VISDOM_HOST: ", VISDOM_HOST)
    print("VISDOM_PORT: ", VISDOM_PORT)
    print("Connecting to %s:%s" % (VISDOM_HOST, VISDOM_PORT))
    vis = Visdom(server="http://"+VISDOM_HOST, port=int(VISDOM_PORT))
    assert vis.check_connection()
    parent_job_id = variables.get("PA_JOB_ID")
    vis.text('A new experiment was created, please see job_id_'+parent_job_id+' environment in Visdom for more info.')
    win_text_loss = vis.text("Loss (objective to optimize):\n", env='job_id_'+parent_job_id)
    win_plot_loss = vis.line(
        Y = np.array([np.nan]),
        X = np.array([np.nan]),
        opts = dict(
              xlabel = 'Job ID',
              ylabel = 'Loss',
              title = 'Model loss',
              ),
        env='job_id_'+parent_job_id
    )
    variables.put('VISDOM_win_text_loss', win_text_loss)
    variables.put('VISDOM_win_plot_loss', win_plot_loss)
    print("win_text_loss: ", win_text_loss)
    print("win_plot_loss: ", win_plot_loss)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            182.5
        </positionTop>
        <positionLeft>
            621.875
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Check_Tensorboard_Support">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Checking for Tensorboard support")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow>
        <if continuation="Continuation2" else="Nothing2" target="Start_Tensorboard">
          <script>
            <code language="groovy">
              <![CDATA[
if ("true".equalsIgnoreCase(variables.get("TENSORBOARD_ENABLED"))) {
    branch = "if"
} else {
    branch = "else"
}
]]>
            </code>
          </script>
        </if>
      </controlFlow>
      <metadata>
        <positionTop>
            54.98046875
        </positionTop>
        <positionLeft>
            983.6328125
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Nothing2">
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println("Tensorboard disabled")
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            182.5
        </positionTop>
        <positionLeft>
            914.8828125
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Continuation2">
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
// Wait for Tensorboard sever to be up and fully running.
sleep(5000)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            182.5
        </positionTop>
        <positionLeft>
            1052.36328125
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Start_Tensorboard" onTaskError="cancelJob">
      <description>
        <![CDATA[ Start the Tensorboard server as a service. ]]>
      </description>
      <variables>
        <variable inherited="false" name="SERVICE_ID" value="Tensorboard"/>
        <variable inherited="false" name="INSTANCE_NAME" value="$TENSORBOARD_INSTANCE_NAME"/>
        <variable inherited="false" name="PROXYFIED" value="$TENSORBOARD_PROXYFIED"/>
        <variable inherited="false" name="MOUNT_LOG_PATH" value="$TENSORBOARD_HOST_LOG_PATH"/>
        <variable inherited="false" name="ENGINE" value="$CONTAINER_PLATFORM"/>
        <variable inherited="true" name="NATIVE_SCHEDULER" value=""/>
        <variable inherited="true" name="NATIVE_SCHEDULER_PARAMS" value=""/>
        <variable inherited="false" model="PA:Boolean" name="CONTAINER_ROOTLESS_ENABLED" value="False"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/tensorboard.png"/>
        <info name="task.documentation" value="PCA/PCAUserGuide.html"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/cloud-automation-scripts/resources/Service_Start/raw">
            <arguments>
              <argument value="NATIVE_SCHEDULER"/>
              <argument value="NATIVE_SCHEDULER_PARAMS"/>
              <argument value="ENGINE"/>
              <argument value="PROXYFIED"/>
              <argument value="MOUNT_LOG_PATH"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
variables.put("HOST_LOG_PATH", variables.get("TENSORBOARD_HOST_LOG_PATH"))
variables.put("CONTAINER_LOG_PATH", variables.get("TENSORBOARD_CONTAINER_LOG_PATH"))
variables.put("CONTAINER_ROOTLESS_ENABLED", variables.get("CONTAINER_ROOTLESS_ENABLED"))
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            182.5
        </positionTop>
        <positionLeft>
            768.37890625
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2645px;
            height:3500px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-49.98046875px;left:-142.3828125px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_153" style="top: 816.25px; left: 590px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task defines some input, here strings to be processed."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">Split</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_156" style="top: 943.75px; left: 590px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task will be replicated according to the 'runs' value specified in the replication script.
The replication index is used in each task's instance to select the input."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_submit_job_no_wait.png" width="20px">&nbsp;<span class="name">Submit_Job_No_Wait</span></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_159" style="top: 1069.39px; left: 590px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="As a merge operation, we simply print the results from previous tasks."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">Merge</span></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_162" style="top: 435.625px; left: 621.875px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png" width="20px">&nbsp;<span class="name">Start</span></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_165" style="top: 816.25px; left: 790.137px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png" width="20px">&nbsp;<span class="name">Loop</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_168" style="top: 182.5px; left: 147.383px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task aims to parse PCA endpoint in order to retrieve a HOST and a PORT number to use them as an input in the data connector tasks."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Parse_MongoDB_Endpoint</span></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_171" style="top: 54.9805px; left: 147.383px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start the MongoDB server as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png" width="20px">&nbsp;<span class="name">Start_MongoDB</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_174" style="top: 310px; left: 621.875px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Groovy engine."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Join_Task</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_177" style="top: 943.75px; left: 790.137px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png" width="20px">&nbsp;<span class="name">Finish_MongoDB</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_180" style="top: 561.25px; left: 570.254px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Check_Algorithm_Condition</span></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_183" style="top: 688.73px; left: 413.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">If_Bayes</span></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_186" style="top: 688.73px; left: 590px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Else</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_189" style="top: 688.73px; left: 738.516px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Finally</span></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_192" style="top: 816.25px; left: 413.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Python engine."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">Split_and_Submit_Job_No_Wait</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_195" style="top: 54.9805px; left: 553.125px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Check_Visdom_Support</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_198" style="top: 182.5px; left: 329.863px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start the Visdom server as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Start_Visdom_Service</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_201" style="top: 182.5px; left: 484.375px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Nothing1</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_204" style="top: 182.5px; left: 621.875px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Python.png" width="20px">&nbsp;<span class="name">Continuation1</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_207" style="top: 54.9805px; left: 983.633px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Check_Tensorboard_Support</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_210" style="top: 182.5px; left: 914.883px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Nothing2</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_213" style="top: 182.5px; left: 1052.36px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Continuation2</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_216" style="top: 182.5px; left: 768.379px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start the Tensorboard server as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/tensorboard.png" width="20px">&nbsp;<span class="name">Start_Tensorboard</span></a></div><svg style="position:absolute;left:625.0235032915331px;top:728.5px" width="15.47649670846693" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 87 C -10 37 -10 50 0 0 " transform="translate(14.97649670846693,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path></svg><svg style="position:absolute;left:659.5px;top:845.5px" width="45.799999999999955" height="99" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 24.799999999999955 88 C 34.799999999999955 88 -10 -10 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#e5db3d" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#e7dd4a;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M24.864965599999962,76.942366 L25.922275531898705,55.7791409218625 L20.90516765628988,63.51403772560228 L12.493947257500977,59.738938865572585 L24.864965599999962,76.942366" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:rgba(231, 221, 74, 0.5); --darkreader-inline-stroke:rgba(231, 221, 74, 0.5);"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M24.864965599999962,76.942366 L25.922275531898705,55.7791409218625 L20.90516765628988,63.51403772560228 L12.493947257500977,59.738938865572585 L24.864965599999962,76.942366" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:rgba(231, 221, 74, 0.5); --darkreader-inline-stroke:rgba(231, 221, 74, 0.5);"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_227" style="position: absolute; transform: translate(-50%, -50%); left: 681.9px; top: 895.75px;">replicate</div><svg style="position:absolute;left:629.5px;top:855.5px" width="36.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 15.5 88 C 25.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M17.008112,66.303232 L19.23307240780623,45.23074872954288 L13.796275816661353,52.67663637484854 L5.606476782654781,48.44258491288153 L17.008112,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M17.008112,66.303232 L19.23307240780623,45.23074872954288 L13.796275816661353,52.67663637484854 L5.606476782654781,48.44258491288153 L17.008112,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path></svg><svg style="position:absolute;left:629.5px;top:983.5px" width="36.5" height="87" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 86 C -10 36 25.5 50 15.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.5573906250000007,64.94400000000002 L9.844363768836462,47.0834289916971 L1.6545364829298952,51.31742580641251 L-3.7822104247510477,43.8715018837672 L-1.5573906250000007,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.5573906250000007,64.94400000000002 L9.844363768836462,47.0834289916971 L1.6545364829298952,51.31742580641251 L-3.7822104247510477,43.8715018837672 L-1.5573906250000007,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path></svg><svg style="position:absolute;left:657.9783554952701px;top:349.5px" width="15.521644504729927" height="87" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 86 C -10 36 -10 50 0 0 " transform="translate(15.021644504729927,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,64.94400000000002 L-1.2792764656232984,43.975321988607305 L-7.004697339623629,51.20163196089339 L-15.021644504729927,46.64876932823094 L-4.331249999999999,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(15.021644504729927,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,64.94400000000002 L-1.2792764656232984,43.975321988607305 L-7.004697339623629,51.20163196089339 L-15.021644504729927,46.64876932823094 L-4.331249999999999,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(15.021644504729927,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path></svg><svg style="position:absolute;left:778.5px;top:728.5px" width="72" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 51 87 C 61 37 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M48.576,63.55200000000001 L41.99202041066219,43.411215189889376 L40.074193326491255,52.429082968650626 L30.869103379312815,51.913021863398114 L48.576,63.55200000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M48.576,63.55200000000001 L41.99202041066219,43.411215189889376 L40.074193326491255,52.429082968650626 L30.869103379312815,51.913021863398114 L48.576,63.55200000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path></svg><svg style="position:absolute;left:712.5px;top:475.5px" width="188" height="341" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 0 C -10 50 177 290 167 340 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#91cd91;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M28.250406250000005,76.4534375 L44.05505610295329,90.56772256958621 L35.02568914979393,88.70478606363821 L31.80370753931508,97.34300546938013 L28.250406250000005,76.4534375" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#91cd91; --darkreader-inline-stroke:#91cd91;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M28.250406250000005,76.4534375 L44.05505610295329,90.56772256958621 L35.02568914979393,88.70478606363821 L31.80370753931508,97.34300546938013 L28.250406250000005,76.4534375" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#91cd91; --darkreader-inline-stroke:#91cd91;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_245" style="position: absolute; transform: translate(-50%, -50%); left: 806px; top: 645.5px;">loop</div><svg style="position:absolute;left:190.5px;top:94.5px" width="46" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 25 88 C 35 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M25.59935375,65.8307285 L25.249839212925558,44.64399114880849 L20.757116933078812,52.69479524008836 L12.113905953013912,49.486227965729675 L25.59935375,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M25.59935375,65.8307285 L25.249839212925558,44.64399114880849 L20.757116933078812,52.69479524008836 L12.113905953013912,49.486227965729675 L25.59935375,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path></svg><svg style="position:absolute;left:215.5px;top:222.5px" width="468" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 447 87 C 457 37 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M364.15180799999996,57.051648 L345.2125314127444,47.54881671919568 L350.2670086459902,55.259345877340394 L343.42022929008476,61.433616073205435 L364.15180799999996,57.051648" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M364.15180799999996,57.051648 L345.2125314127444,47.54881671919568 L350.2670086459902,55.259345877340394 L343.42022929008476,61.433616073205435 L364.15180799999996,57.051648" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path></svg><svg style="position:absolute;left:658.0235032915331px;top:222.5px" width="15.47649670846693" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 87 C -10 37 -10 50 0 0 " transform="translate(14.97649670846693,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path></svg><svg style="position:absolute;left:662.5px;top:222.5px" width="451" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 87 C -10 37 440 50 430 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M79.59616000000003,57.051648 L100.34917817341744,61.330927927021186 L93.47191617239413,55.19062928857689 L98.48815946199434,47.45517175462708 L79.59616000000003,57.051648" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M79.59616000000003,57.051648 L100.34917817341744,61.330927927021186 L93.47191617239413,55.19062928857689 L98.48815946199434,47.45517175462708 L79.59616000000003,57.051648" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path></svg><svg style="position:absolute;left:829.5px;top:855.5px" width="27.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 6.5 88 C 16.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M8.787796875,66.78168750000002 L13.502214816791486,46.123171980483264 L7.218760132881903,52.86988949607962 L-0.4095831871289066,47.692208722601364 L8.787796875,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M8.787796875,66.78168750000002 L13.502214816791486,46.123171980483264 L7.218760132881903,52.86988949607962 L-0.4095831871289066,47.692208722601364 L8.787796875,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path></svg><svg style="position:absolute;left:639.5px;top:475.5px" width="44" height="86" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 85 C -10 35 33 50 23 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-0.8665920000000011,63.55984 L12.320494443362684,46.97367856537987 L3.7368386983269004,50.338326251351496 L-0.901019305285824,42.37024786705297 L-0.8665920000000011,63.55984" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-0.8665920000000011,63.55984 L12.320494443362684,46.97367856537987 L3.7368386983269004,50.338326251351496 L-0.901019305285824,42.37024786705297 L-0.8665920000000011,63.55984" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path></svg><svg style="position:absolute;left:402.5px;top:600.5px" width="178" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 167 50 157 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M21.71875,60.1875 L42.89368083289109,59.398637386943726 L34.751427276458784,55.07385912410003 L37.78003995699113,46.36596011048494 L21.71875,60.1875" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M21.71875,60.1875 L42.89368083289109,59.398637386943726 L34.751427276458784,55.07385912410003 L37.78003995699113,46.36596011048494 L21.71875,60.1875" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_265" style="position: absolute; transform: translate(-50%, -50%); left: 491px; top: 644.5px;">if</div><svg style="position:absolute;left:559.5px;top:600.5px" width="41" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 20 88 C 30 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M21.1232,66.303232 L22.17945472576251,45.13995423037498 L17.162732520690984,52.87510117902064 L8.751323904783156,49.100421709684 L21.1232,66.303232" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M21.1232,66.303232 L22.17945472576251,45.13995423037498 L17.162732520690984,52.87510117902064 L8.751323904783156,49.100421709684 L21.1232,66.303232" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_269" style="position: absolute; transform: translate(-50%, -50%); left: 579.5px; top: 644.5px;">else</div><svg style="position:absolute;left:559.5px;top:600.5px" width="190" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 169 88 C 179 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M144.42946225,59.788559500000005 L127.99244334436611,46.4160350750519 L131.26048076398126,55.03693592264288 L123.24081976700899,59.585016561070624 L144.42946225,59.788559500000005" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M144.42946225,59.788559500000005 L127.99244334436611,46.4160350750519 L131.26048076398126,55.03693592264288 L123.24081976700899,59.585016561070624 L144.42946225,59.788559500000005" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_273" style="position: absolute; transform: translate(-50%, -50%); left: 654px; top: 644.5px;">continuation</div><svg style="position:absolute;left:452.5px;top:728.5px" width="61" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 40 87 C 50 37 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M39.079260000000005,64.458666 L34.98464116369664,43.668425583271045 L31.98808664809716,52.38740838145573 L22.913383545152374,50.7595989351739 L39.079260000000005,64.458666" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M39.079260000000005,64.458666 L34.98464116369664,43.668425583271045 L31.98808664809716,52.38740838145573 L22.913383545152374,50.7595989351739 L39.079260000000005,64.458666" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:#a8a095;"></path></svg><svg style="position:absolute;left:319.5px;top:94.5px" width="245" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 234 50 224 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M36.107760500000005,59.00425649999999 L57.237718924793626,60.59323635087702 L49.63138719115404,55.38327305371 L53.61673547850363,47.069609659722985 L36.107760500000005,59.00425649999999" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M36.107760500000005,59.00425649999999 L57.237718924793626,60.59323635087702 L49.63138719115404,55.38327305371 L53.61673547850363,47.069609659722985 L36.107760500000005,59.00425649999999" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_282" style="position: absolute; transform: translate(-50%, -50%); left: 441.5px; top: 138.5px;">if</div><svg style="position:absolute;left:474.5px;top:94.5px" width="90" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 79 50 69 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M4.964021999999998,63.554236 L24.215374502276852,54.7006815254921 L15.036918129478272,53.83123422252708 L14.492372724803928,44.627785396013834 L4.964021999999998,63.554236" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M4.964021999999998,63.554236 L24.215374502276852,54.7006815254921 L15.036918129478272,53.83123422252708 L14.492372724803928,44.627785396013834 L4.964021999999998,63.554236" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_286" style="position: absolute; transform: translate(-50%, -50%); left: 519px; top: 138.5px;">else</div><svg style="position:absolute;left:543.5px;top:94.5px" width="90" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 69 88 C 79 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M64.035978,63.554236 L54.507627275196064,44.627785396013834 L53.96308187052173,53.83123422252709 L44.78462549772315,54.700681525492115 L64.035978,63.554236" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M64.035978,63.554236 L54.507627275196064,44.627785396013834 L53.96308187052173,53.83123422252709 L44.78462549772315,54.700681525492115 L64.035978,63.554236" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_290" style="position: absolute; transform: translate(-50%, -50%); left: 588px; top: 138.5px;">continuation</div><svg style="position:absolute;left:758.5px;top:94.5px" width="236" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 225 50 215 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M33.27376,59.394175999999995 L54.42290526584743,60.70324227948445 L46.74825703747608,55.59444843252249 L50.62317769836993,47.22874524200838 L33.27376,59.394175999999995" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M33.27376,59.394175999999995 L54.42290526584743,60.70324227948445 L46.74825703747608,55.59444843252249 L50.62317769836993,47.22874524200838 L33.27376,59.394175999999995" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_296" style="position: absolute; transform: translate(-50%, -50%); left: 876px; top: 138.5px;">if</div><svg style="position:absolute;left:904.5px;top:94.5px" width="90" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 79 50 69 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M4.964021999999998,63.554236 L24.215374502276852,54.7006815254921 L15.036918129478272,53.83123422252708 L14.492372724803928,44.627785396013834 L4.964021999999998,63.554236" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M4.964021999999998,63.554236 L24.215374502276852,54.7006815254921 L15.036918129478272,53.83123422252708 L14.492372724803928,44.627785396013834 L4.964021999999998,63.554236" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_300" style="position: absolute; transform: translate(-50%, -50%); left: 949px; top: 138.5px;">else</div><svg style="position:absolute;left:973.5px;top:94.5px" width="90" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 69 88 C 79 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-fill:none; --darkreader-inline-stroke:#337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M64.035978,63.554236 L54.507627275196064,44.627785396013834 L53.96308187052173,53.83123422252709 L44.78462549772315,54.700681525492115 L64.035978,63.554236" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M64.035978,63.554236 L54.507627275196064,44.627785396013834 L53.96308187052173,53.83123422252709 L44.78462549772315,54.700681525492115 L64.035978,63.554236" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:#337dff;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_304" style="position: absolute; transform: translate(-50%, -50%); left: 1018px; top: 138.5px;">continuation</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 630px; top: 846px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 630px; top: 806px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint replicate-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 660px; top: 846px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style="--darkreader-inline-fill:#e7dd4a; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 645.5px; top: 974px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint replicate-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 684.8px; top: 934px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style="--darkreader-inline-fill:#e7dd4a; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 645.5px; top: 934px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 630px; top: 1100px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 630px; top: 1060px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 663px; top: 466px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 663px; top: 426px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 713px; top: 466px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style="--darkreader-inline-fill:#91cd91; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 830px; top: 846px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 830px; top: 806px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 880px; top: 806px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style="--darkreader-inline-fill:#91cd91; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 216px; top: 213px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 216px; top: 173px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 191px; top: 85px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 663px; top: 340px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 663px; top: 300px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 836.5px; top: 974px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 836.5px; top: 934px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 640px; top: 591px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 640px; top: 551px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint if-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 560px; top: 591px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 453px; top: 719px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 403px; top: 679px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 630px; top: 719px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 580px; top: 679px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 779px; top: 719px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 729px; top: 679px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 493px; top: 846px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 493px; top: 806px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 615.5px; top: 85px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint if-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 544px; top: 85px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 387px; top: 213px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 320px; top: 173px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 525px; top: 213px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 475px; top: 173px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 663px; top: 213px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 613px; top: 173px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 1056.5px; top: 85px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint if-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 974px; top: 85px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 955px; top: 213px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 905px; top: 173px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 1093px; top: 213px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 1043px; top: 173px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 818px; top: 213px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill:#a8a095; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 759px; top: 173px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill:#337dff; --darkreader-inline-stroke:none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
