<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Database_Sequential_Queries" tags="Cloud Storage,Data Connectors,NoSQL,Data Warehouse,SQL" projectName="2. SQL" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="RDBMS_NAME" value="greenplum" model="PA:LIST(postgresql, mysql, greenplum, sqlserver, oracle, hsqldb)" group="Database Connection" description="The relational database management system name e.g. postgresql, mysql, greenplum, hsqldb, oracle..."/>
    <variable name="DATABASE" value="my_database" model="PA:NOT_EMPTY_STRING" group="Database Connection" description="The database name"/>
    <variable name="HOST" value="localhost" model="PA:NOT_EMPTY_STRING" group="Database Connection" description="Hostname or IP address of the database host machine. Default value is localhost"/>
    <variable name="PORT" value="" model="PA:INTEGER?" group="Database Connection" description="The listening port of the database"/>
    <variable name="USERNAME" value="my_user" model="PA:NOT_EMPTY_STRING" group="Database Connection" description="Database user name"/>
    <variable name="CREDENTIALS_KEY" value="${RDBMS_NAME}://${USERNAME}@${HOST}" model="PA:Credential" group="Database Connection" description="Third-party credential storing the password associated with the given user name"/>
    <variable name="POOL_autoCommit" value="true" model="PA:Boolean" group="Database Parameters" description="HikariCP offers many data source properties that can be used to configure the DB pooled connection such as autoCommit, maximumPoolSize, maxLifetime, idleTimeout .... You can add as many properties as you want. For each one, add a new task variable where the variable name is the property name having POOL_  as a prefix (e.g. POOL_autoCommit, POOL_maximumPoolSize) and the variable value is the property value. For more info, please refer to &lt;a href=&#39;https://github.com/brettwooldridge/HikariCP&#39; target=&#39;_blank&#39;&gt;HikariCP documentation&lt;/a&gt;."/>
    <variable name="OUTPUT_TYPE" value="HTML" model="PA:List(CSV,HTML)" group="Database Parameters" description="Format of the output (CSV or HTML)"/>
  </variables>
  <description>
    <![CDATA[ This workflow is a template that demonstrates how to create a table, populate this table then select some data in a sequential manner. The select query result (converted into a List of Maps)  can be stored in a dedicated variable called STORE_RESULT_VARIABLE. This variable can be used in other tasks. The java doc can be found &lt;a href=&#39;https://docs.oracle.com/javase/7/docs/api/java/sql/ResultSet.html&#39; target=&#39;_blank&#39;&gt;here&lt;/a&gt; ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="data-connectors"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/rdbms.png"/>
    <info name="Documentation" value="user/ProActiveUserGuide.html#_database_connections_pooling"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Select_Data" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ This task allows to open a pooled connection to any SQL database and then execute any SQL query statements on it.
If it requires a password, you have to add it using the following third-party credential: {key: rdbms_name://<username>@<host>, value: RDBMS_PASSWORD}.
Please refer to the User documentation to learn how to add third-party credentials.
This task has the same list of workflow variables. ]]>
      </description>
      <variables>
        <variable inherited="true" name="RDBMS_NAME" value="greenplum" model="PA:LIST(postgresql, mysql, greenplum, sqlserver, oracle, hsqldb)" group="Database Connection" description="The relational database management system name e.g. postgresql, mysql, greenplum, hsqldb, oracle..."/>
        <variable inherited="true" name="DATABASE" value="my_database" model="PA:NOT_EMPTY_STRING" group="Database Connection" description="The database name"/>
        <variable inherited="true" name="HOST" value="localhost" model="PA:NOT_EMPTY_STRING" group="Database Connection" description="Hostname or IP address of the database host machine. Default value is localhost"/>
        <variable inherited="true" name="PORT" value="" model="PA:INTEGER?" group="Database Connection" description="The listening port of the database"/>
        <variable inherited="true" name="USERNAME" value="my_user" model="PA:NOT_EMPTY_STRING" group="Database Connection" description="Database user name"/>
        <variable inherited="true" name="CREDENTIALS_KEY" value="${RDBMS_NAME}://${USERNAME}@${HOST}" model="PA:Credential" group="Database Connection" description="Third-party credential storing the password associated with the given user name"/>
        <variable inherited="true" name="POOL_autoCommit" value="true" model="PA:Boolean" group="Database Parameters" description="HikariCP offers many data source properties that can be used to configure the DB pooled connection such as autoCommit, maximumPoolSize, maxLifetime, idleTimeout .... You can add as many properties as you want. For each one, add a new task variable where the variable name is the property name having POOL_  as a prefix (e.g. POOL_autoCommit, POOL_maximumPoolSize) and the variable value is the property value. For more info, please refer to &lt;a href=&#39;https://github.com/brettwooldridge/HikariCP&#39; target=&#39;_blank&#39;&gt;HikariCP documentation&lt;/a&gt;."/>
        <variable inherited="false" name="SQL_STATEMENTS" value="select * from employees" group="Database Parameters" description="A string composed of a set of query statements (SELECT statement)" />
        <variable inherited="false" name="OUTPUT_TYPE" value="HTML" model="PA:List(CSV,HTML)" group="Database Parameters" description="Format of the output (CSV or HTML)"/>
        <variable inherited="false" name="STORE_RESULT_VARIABLE" value="queryResult" group="Database Parameters" description="The name of a workflow variable that will contain the result set (SQL query result converted into a List of HashMaps). This variable can be used in children tasks. The java documentation of the ResultSet class can be found &lt;a href=&#39;https://docs.oracle.com/javase/7/docs/api/java/sql/ResultSet.html&#39; target=&#39;_blank&#39;&gt;here&lt;/a&gt;"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/rdbms.png"/>
        <info name="task.documentation" value="user/ProActiveUserGuide.html#_database_connections_pooling"/>
      </genericInformation>
      <depends>
        <task ref="Insert_Data"/>
      </depends>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/data-connectors/resources/SQL_Pooled_Connection_Query_Script/raw" language="groovy"></file>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            409.5
        </positionTop>
        <positionLeft>
            475.75
        </positionLeft>
      </metadata>
    </task>
    <task name="Create_Table" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ This task allows to open a pooled connection to any SQL database and then execute any SQL update statements on it.
If it requires a password, you have to add it using the following third-party credential: {key: rdbms_name://<username>@<host>, value: RDBMS_PASSWORD}.
Please refer to the User documentation to learn how to add third-party credentials.
This task has the same list of workflow variables. ]]>
      </description>
      <variables>
        <variable inherited="true" name="RDBMS_NAME" value="greenplum" model="PA:LIST(postgresql, mysql, greenplum, sqlserver, oracle, hsqldb)" group="Database Connection" description="The relational database management system name e.g. postgresql, mysql, greenplum, hsqldb, oracle..."/>
        <variable inherited="true" name="DATABASE" value="my_database" model="PA:NOT_EMPTY_STRING" group="Database Connection" description="The database name"/>
        <variable inherited="true" name="HOST" value="localhost" model="PA:NOT_EMPTY_STRING" group="Database Connection" description="Hostname or IP address of the database host machine. Default value is localhost"/>
        <variable inherited="true" name="PORT" value="" model="PA:INTEGER?" group="Database Connection" description="The listening port of the database"/>
        <variable inherited="true" name="USERNAME" value="my_user" model="PA:NOT_EMPTY_STRING" group="Database Connection" description="Database user name"/>
        <variable inherited="true" name="CREDENTIALS_KEY" value="${RDBMS_NAME}://${USERNAME}@${HOST}" model="PA:Credential" group="Database Connection" description="Third-party credential storing the password associated with the given user name"/>
        <variable inherited="true" name="POOL_autoCommit" value="true" model="PA:Boolean" group="Database Parameters" description="HikariCP offers many data source properties that can be used to configure the DB pooled connection such as autoCommit, maximumPoolSize, maxLifetime, idleTimeout .... You can add as many properties as you want. For each one, add a new task variable where the variable name is the property name having POOL_  as a prefix (e.g. POOL_autoCommit, POOL_maximumPoolSize) and the variable value is the property value. For more info, please refer to &lt;a href=&#39;https://github.com/brettwooldridge/HikariCP&#39; target=&#39;_blank&#39;&gt;HikariCP documentation&lt;/a&gt;"/>
        <variable name="SQL_STATEMENTS" value="CREATE TABLE employees (employee_id   NUMERIC       NOT NULL, first_name    VARCHAR(1000) NOT NULL, last_name     VARCHAR(1000) NOT NULL, date_of_birth DATE, phone_number  VARCHAR(1000) NOT NULL, CONSTRAINT employees_pk PRIMARY KEY (employee_id))" inherited="false" group="Database Parameters" description="A string composed of a set of update statements (CREATE, INSERT , UPDATE , or DELETE statement)"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/rdbms.png"/>
        <info name="task.documentation" value="user/ProActiveUserGuide.html#_database_connections_pooling"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/data-connectors/resources/SQL_Pooled_Connection_Update_Script/raw" language="groovy"></file>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            153.5
        </positionTop>
        <positionLeft>
            475.75
        </positionLeft>
      </metadata>
    </task>
    <task name="Insert_Data" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ This task allows to open a pooled connection to any SQL database and then execute any SQL update statements on it.
If it requires a password, you have to add it using the following third-party credential: {key: rdbms_name://<username>@<host>, value: RDBMS_PASSWORD}.
Please refer to the User documentation to learn how to add third-party credentials.
This task has the same list of workflow variables. ]]>
      </description>
      <variables>
        <variable inherited="true" name="RDBMS_NAME" value="greenplum" model="PA:LIST(postgresql, mysql, greenplum, sqlserver, oracle, hsqldb)" group="Database Connection" description="The relational database management system name e.g. postgresql, mysql, greenplum, hsqldb, oracle..."/>
        <variable inherited="true" name="DATABASE" value="my_database" model="PA:NOT_EMPTY_STRING" group="Database Connection" description="The database name"/>
        <variable inherited="true" name="HOST" value="localhost" model="PA:NOT_EMPTY_STRING" group="Database Connection" description="Hostname or IP address of the database host machine. Default value is localhost"/>
        <variable inherited="true" name="PORT" value="" model="PA:INTEGER?" group="Database Connection" description="The listening port of the database"/>
        <variable inherited="true" name="USERNAME" value="my_user" model="PA:NOT_EMPTY_STRING" group="Database Connection" description="Database user name"/>
        <variable inherited="true" name="CREDENTIALS_KEY" value="${RDBMS_NAME}://${USERNAME}@${HOST}" model="PA:Credential" group="Database Connection" description="Third-party credential storing the password associated with the given user name"/>
        <variable inherited="true" name="POOL_autoCommit" value="true" model="PA:Boolean" group="Database Parameters" description="HikariCP offers many data source properties that can be used to configure the DB pooled connection such as autoCommit, maximumPoolSize, maxLifetime, idleTimeout .... You can add as many properties as you want. For each one, add a new task variable where the variable name is the property name having POOL_  as a prefix (e.g. POOL_autoCommit, POOL_maximumPoolSize) and the variable value is the property value. For more info, please refer to &lt;a href=&#39;https://github.com/brettwooldridge/HikariCP&#39; target=&#39;_blank&#39;&gt;HikariCP documentation&lt;/a&gt;."/>
        <variable name="SQL_STATEMENTS" value="INSERT INTO employees (employee_id,  first_name, last_name, date_of_birth, phone_number) VALUES  (1, &#39;Smith&#39;, &#39;Holmes&#39;, &#39;01-01-2000&#39;, &#39;11111111&#39;), (2, &#39;Albert&#39;, &#39;Bolt&#39;, &#39;02-02-2000&#39;, &#39;22222222&#39;), (3, &#39;Caroline&#39;, &#39;Avinash&#39;, &#39;03-03-2000&#39;, &#39;33333333&#39;), (4, &#39;Lilia&#39;, &#39;Cook&#39;, &#39;04-04-2000&#39;, &#39;44444444&#39;)" inherited="false" group="Database Parameters" description="A string composed of a set of update statements (CREATE, INSERT , UPDATE , or DELETE statement)"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/rdbms.png"/>
        <info name="task.documentation" value="user/ProActiveUserGuide.html#_database_connections_pooling"/>
      </genericInformation>
      <depends>
        <task ref="Create_Table"/>
      </depends>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/data-connectors/resources/SQL_Pooled_Connection_Update_Script/raw" language="groovy"></file>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            281.484375
        </positionTop>
        <positionLeft>
            475.75
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2144px;
            height:2552px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-148.5px;left:-470.75px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_532" style="top: 409.5px; left: 475.75px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task allows to open a pooled connection to any SQL database and then execute any SQL query statements on it.
If it requires a password, you have to add it using the following third-party credential: {key: rdbms_name://<username>@<host>, value: RDBMS_PASSWORD}.
Please refer to the User documentation to learn how to add third-party credentials.
This task has the same list of workflow variables."><img src="/automation-dashboard/styles/patterns/img/wf-icons/rdbms.png" width="20px">&nbsp;<span class="name">Select_Data</span></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_535" style="top: 153.5px; left: 475.75px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task allows to open a pooled connection to any SQL database and then execute any SQL update statements on it.
If it requires a password, you have to add it using the following third-party credential: {key: rdbms_name://<username>@<host>, value: RDBMS_PASSWORD}.
Please refer to the User documentation to learn how to add third-party credentials.
This task has the same list of workflow variables."><img src="/automation-dashboard/styles/patterns/img/wf-icons/rdbms.png" width="20px">&nbsp;<span class="name">Create_Table</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_538" style="top: 281.484px; left: 475.75px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task allows to open a pooled connection to any SQL database and then execute any SQL update statements on it.
If it requires a password, you have to add it using the following third-party credential: {key: rdbms_name://<username>@<host>, value: RDBMS_PASSWORD}.
Please refer to the User documentation to learn how to add third-party credentials.
This task has the same list of workflow variables."><img src="/automation-dashboard/styles/patterns/img/wf-icons/rdbms.png" width="20px">&nbsp;<span class="name">Insert_Data</span></a></div><svg style="position:absolute;left:511.02524878489737px;top:320.5px" width="15.474751215102632" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 89 C -10 39 -10 50 0 0 " transform="translate(14.974751215102632,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,67.21769599999999 L-1.2118624308468808,46.27356892016489 L-6.993714776082329,53.45480721574424 L-14.974751215102632,48.83928369624722 L-4.427999999999998,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(14.974751215102632,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,67.21769599999999 L-1.2118624308468808,46.27356892016489 L-6.993714776082329,53.45480721574424 L-14.974751215102632,48.83928369624722 L-4.427999999999998,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(14.974751215102632,0.5)"></path></svg><svg style="position:absolute;left:511.0235032915331px;top:193.5px" width="15.47649670846693" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 87 C -10 37 -10 50 0 0 " transform="translate(14.97649670846693,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 516px; top: 440px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 516px; top: 400px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 516px; top: 184px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 516px; top: 311px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 516px; top: 271px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>