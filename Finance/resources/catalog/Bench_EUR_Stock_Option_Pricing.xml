<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Bench_EUR_Stock_Option_Pricing" tags="Finance,Pricing,Bale,Risk,Solvency,OpenCL,Black-Scholes" projectName="Pricing Workflows" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2" >
  <variables>
    <variable name="nbMCPerOption" group="Simulation" value="262144" description="The number of Monte Carlo simulations per option price estimation."/>
    <variable name="validationThreshold" group="Simulation" value="0.1" description="The validation threshold."/>
    <variable name="floatOrDouble" group="Simulation" value="float" description="The data type."/>
    <variable name="nbOptionsPerKernel" group="Parallelization" value="65536" description="The number of european stock options to simulate per OpenCL kernel."/>
    <variable name="nbKernelInvocations" group="Parallelization" value="10" description="The number of OpenCL kernels to run."/>
    <variable name="nbTasks" group="Parallelization" value="4" description="The number of ProActive replicated tasks."/>
    <variable name="GPU_NODES_ONLY" group="Hardware Resources" value="False" model="PA:Boolean" description="Consider only GPU nodes or not."/>
  </variables>
  <description>
    <![CDATA[ Price European stock options using Monte Carlo simulations from ProActive replicated tasks. Each task executes an OpenCL kernel to simulate paths of each option. Validation is performed by comparing the results with the analytical solution of the Black & Scholes equation. This workflow requires OpenCL to be installed before execution. For the OpenCL sources see "intel_ocl_montecarlo.zip" in https://software.intel.com/en-us/intel-opencl-support/code-samples ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="hpc-finance"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/opencl.png"/>
    <info name="Documentation" value="https://www.khronos.org/opencl/"/>
  </genericInformation>
  <taskFlow>
    <task name="split_kernel_invocations" >
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println "Split_kernel_invocations ..."


// Retrieve variables
def nbKernelInvocations = variables.get("nbKernelInvocations").toInteger()
def nbTasks = variables.get("nbTasks").toInteger()

// Estimate nbKernelInvocations per task
def nbKernelInvocations_per_task = (int)(nbKernelInvocations / nbTasks)
if (nbKernelInvocations % nbTasks != 0)
	nbKernelInvocations_per_task++

def nbKernelInvocations_left = nbKernelInvocations
def nbKernelInvocations_task = 0
(0..nbTasks-1).each {
     // How many invocations must we give?
     if(it == nbTasks-1)
     	nbKernelInvocations_task = nbKernelInvocations_left
     else
  	nbKernelInvocations_task = nbKernelInvocations_per_task

     // Update nbKernelInvocations_left
     nbKernelInvocations_left = nbKernelInvocations_left - nbKernelInvocations_task

     // Store nbKernelInvocations_task
     variables["nbKernelInvocations_task_${it}"] = nbKernelInvocations_task
     println "nbKernelInvocations_task " + nbKernelInvocations_task
}


println "... Split_kernel_invocations"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <replicate>
          <script>
            <code language="groovy">
              <![CDATA[
runs=variables.get("nbTasks")
]]>
            </code>
          </script>
        </replicate>
      </controlFlow>
    </task>
    <task name="openCL_call_put_pricing" >
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/opencl.png"/>
      </genericInformation>
      <depends>
        <task ref="split_kernel_invocations"/>
      </depends>
      <inputFiles>
        <files  includes="MonteCarlo" accessMode="transferFromGlobalSpace"/>
        <files  includes="montecarlo.cl" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <code language="groovy">
            <![CDATA[
def env_variables = System.getenv().toString()
def can_use_GPU =  env_variables.contains("opencl") && (env_variables.contains("nvidia") || env_variables.contains("amd"))
def can_use_CPU = env_variables.contains("opencl") && env_variables.contains("intel")

selected = (variables.get("GPU_NODES_ONLY").equalsIgnoreCase("true") && can_use_GPU) || (variables.get("GPU_NODES_ONLY").equalsIgnoreCase("false") && can_use_CPU)
]]>
          </code>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
// Retrieve variables
def task_id = variables.get('PA_TASK_REPLICATION')
def nbKernelInvocations_task = variables.get("nbKernelInvocations_task_" + task_id)
println "nbKernelInvocations_task " + nbKernelInvocations_task
def nbOptionsPerKernel = variables.get("nbOptionsPerKernel")
def nbMCPerOption = variables.get("nbMCPerOption")
def validationThreshold = variables.get("validationThreshold")
def floatOrDouble = variables.get("floatOrDouble").toLowerCase()

// Set executable permission
def MonteCarlo_file_path = new File(localspace, "MonteCarlo").absolutePath
["chmod", "+x", MonteCarlo_file_path].execute().waitForProcessOutput(System.out, System.err)

// Build the command
def cmd = [MonteCarlo_file_path, "-o", nbOptionsPerKernel, "-s", nbMCPerOption, "-i", nbKernelInvocations_task, "-e", validationThreshold, "-a", floatOrDouble]
println cmd
cmd.execute().waitForProcessOutput(System.out, System.err)
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
    <task name="merge" >
      <depends>
        <task ref="openCL_call_put_pricing"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println ""
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html><head><link rel="stylesheet" href="/studio/styles/studio-standalone.css"><style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:1139px;
            height:566px;
            }
        </style></head><body><div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-205.9875030517578px;left:-509px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_3851" style="top: 211px; left: 514px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">split_kernel_invocations</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_3854" style="top: 339px; left: 514px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/opencl.png" width="20px">&nbsp;<span class="name">openCL_call_put_pricing</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_3857" style="top: 467px; left: 514px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">merge</span></a></div><svg style="position:absolute;left:616.3px;top:240.5px" width="24.200000000000045" height="99" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 3.2000000000000455 88 C 13.200000000000045 88 -10 -10 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#e5db3d" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M5.73635430000004,77.41936575 L11.351585992803727,56.987303371568075 L4.778498533627444,63.45217160332806 L-2.615608153868207,57.94515913794068 L5.73635430000004,77.41936575" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M5.73635430000004,77.41936575 L11.351585992803727,56.987303371568075 L4.778498533627444,63.45217160332806 L-2.615608153868207,57.94515913794068 L5.73635430000004,77.41936575" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_3865" style="position: absolute; transform: translate(-50%, -50%); left: 627.9px; top: 290.75px;">replicate</div><svg style="position:absolute;left:574px;top:250.5px" width="23" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 2 88 C 12 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M4.652999999999999,66.78168750000002 L10.556660138865833,46.431090531734775 L3.8927913941925145,52.80234263424697 L-3.422684726887219,47.19129913754225 L4.652999999999999,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M4.652999999999999,66.78168750000002 L10.556660138865833,46.431090531734775 L3.8927913941925145,52.80234263424697 L-3.422684726887219,47.19129913754225 L4.652999999999999,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:553.5px;top:378.5px" width="43.5" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 32.5 50 22.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-0.9093600000000013,66.303232 L11.972916442627813,49.479232664059786 L3.4520775701862974,52.999929315276646 L-1.3303862420955355,45.11779509387349 L-0.9093600000000013,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-0.9093600000000013,66.303232 L11.972916442627813,49.479232664059786 L3.4520775701862974,52.999929315276646 L-1.3303862420955355,45.11779509387349 L-0.9093600000000013,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 574.5px; top: 241px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint replicate-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 616.8px; top: 241px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 576.5px; top: 369px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint replicate-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 620px; top: 329px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 576.5px; top: 329px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 554px; top: 497px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 554px; top: 457px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div></body></html>
 ]]>
    </visualization>
  </metadata>
</job>