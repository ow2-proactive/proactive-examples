<?xml version="1.0" encoding="UTF-8"?>
<job
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Stress_Testing_Monte_Carlo_Value_Portfolio_MC_Interactive_Control" projectName="Risk Valuation Workflows" tags="QuantLib,Cpp,Finance,Pricing,Bale,Risk,Solvency,Black-Scholes" priority="normal" onTaskError="cancelJob"  maxNumberOfExecution="1"  >
  <variables>
    <variable name="nb_MC_per_stressed_scenario" value="1000" model="PA:INTEGER" description="The number of Monte Carlo simulations per portfolio estimation."  advanced="false" hidden="false"/>
    <variable name="stressed_risk_free_rate_range_nb_steps" value="16" model="PA:INTEGER[2,1000]" description="The step number of the stressed risk free rate range."  advanced="false" hidden="false"/>
    <variable name="stressed_volatility_range_nb_steps" value="16" model="PA:INTEGER[2,1000]" description="The step number of the stressed volatility rate range."  advanced="false" hidden="false"/>
    <variable name="nb_replicated_tasks" value="8" model="PA:INTEGER" description="The number of ProActive replicated tasks which must divide stressed_risk_free_rate_range_nb_steps x stressed_volatility_range_nb_steps."  advanced="false" hidden="false"/>
    <variable name="TARGET_INFRASTRUCTURE" value="" model="PA:MODEL_FROM_URL(${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/nodesources?infrastructure=%5E(%3F!(Default)).*$)" description="The node source where the job will be executed." group="Job Execution Parameters"  />
    <variable name="TOKEN" value="" model="PA:MODEL_FROM_URL(${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/tokens?nodeSource=${TARGET_INFRASTRUCTURE})" description="(Optional) Please select a value in case the node source access is restricted with tokens." group="Job Execution Parameters"  />
    <variable name="CONTAINER_PLATFORM" value="docker" model="PA:LIST(no-container,docker,podman,singularity)" description="Container platform used for executing the workflow tasks." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="CONTAINER_GPU_ENABLED" value="False" model="PA:Boolean" description="If True, it will activate the use of GPU for the workflow tasks on the selected container platform." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="CONTAINER_IMAGE" value="" model="PA:LIST(,docker://activeeon/dlm3,docker://activeeon/cuda,docker://activeeon/cuda2)" description="Name of the container image being used to run the workflow tasks." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="nb_time_steps" value="255" model="PA:INTEGER" description="The number of time steps to the horizon." group="Simulation" advanced="true" hidden="false"/>
    <variable name="stress_horizon" value="1" model="PA:FLOAT" description="The stress horizon in year fraction." group="Simulation" advanced="true" hidden="false"/>
    <variable name="assets_params_file_path_from_dataspace" value="assets.txt" model="PA:GLOBAL_FILE" description="The relative path from the dataspace of the asset params file following the csv format." group="Simulation" advanced="true" hidden="false"/>
    <variable name="assets_correlations_file_path_from_dataspace" value="assets_correlations.txt" model="PA:GLOBAL_FILE" description="The relative path from the dataspace of the asset correlations file." group="Simulation" advanced="true" hidden="false"/>
    <variable name="stressed_risk_free_rate_in_percent_range_min" value="-10" model="PA:INTEGER" description="The min of the stressed risk free rate range." group="Simulation" advanced="true" hidden="false"/>
    <variable name="stressed_risk_free_rate_in_percent_range_max" value="+10" model="PA:INTEGER" description="The max of the stressed risk free rate range." group="Simulation" advanced="true" hidden="false"/>
    <variable name="stressed_volatility_in_percent_range_min" value="-5" model="PA:INTEGER" description="The min of the stressed volatility rate range." group="Simulation" advanced="true" hidden="false"/>
    <variable name="stressed_volatility_in_percent_range_max" value="+5" model="PA:INTEGER" description="The max of the stressed volatility rate range." group="Simulation" advanced="true" hidden="false"/>
    <variable name="PARAMS_CHECK" value="" model="PA:SPEL((T(Integer).parseInt(variables[&#x27;stressed_risk_free_rate_range_nb_steps&#x27;]) * T(Integer).parseInt(variables[&#x27;stressed_volatility_range_nb_steps&#x27;])) % T(Integer).parseInt(variables[&#x27;nb_replicated_tasks&#x27;]) == 0 )" description="Check (stressed_risk_free_rate_range_nb_steps x stressed_volatility_range_nb_steps) % nb_replicated_tasks == 0"  advanced="false" hidden="true"/>
    <variable name="DOCKER_ENABLED" value="True" model="PA:Boolean" description="If true, the workflow tasks will be executed inside a docker container" group="Docker" advanced="true" hidden="false"/>
    <variable name="VISDOM_INSTANCE_NAME" value="visdom-server-${PA_JOB_ID}"  description="Name of the Visdom service instance to use." group="Visdom" advanced="true" hidden="false"/>
    <variable name="VISDOM_PROXYFIED" value="True" model="PA:Boolean" description="If True, requests to Visdom are sent via a proxy server." group="Visdom" advanced="true" hidden="false"/>
    <variable name="VISDOM_ENABLE_LOGIN" value="False" model="PA:Boolean" description="If True, a login in required for accessing the Visdom service." group="Visdom" advanced="true" hidden="false"/>
    <variable name="VISDOM_USERNAME" value=""  description="Username to access the Visdom service." group="Visdom" advanced="true" hidden="false"/>
    <variable name="VISDOM_PASSWORD" value="" model="PA:HIDDEN" description="Password to access the Visdom service." group="Visdom" advanced="true" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ Portfolio Stress-Testing  according to user ranges of values. After the stress testing, user can rerun/trigger more simualations to improve the stressed portfolio estimations. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="hpc-finance"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/quantlib.png"/>
    <info name="Documentation" value="https://ow2-proactive.github.io/proactive-examples/Finance/resources/doc/risk-valuation-proactive.pdf"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Start_Visdom_Service"

          onTaskError="cancelJob"


          fork="true">
      <description>
        <![CDATA[ Start the Visdom server as a service. ]]>
      </description>
      <variables>
        <variable name="SERVICE_ACTIVATION_WORKFLOW" value="service-automation/Visdom" inherited="false" model="PA:CATALOG_OBJECT(Workflow/psa,,,Visdom%)" description="The service activation workflow. Please keep the default value for this variable."  advanced="false" hidden="false"/>
        <variable name="INSTANCE_NAME" value="$VISDOM_INSTANCE_NAME" inherited="false"  description="Instance name of the server to be used to broadcast the visualization."  advanced="false" hidden="false"/>
        <variable name="ENGINE" value="$CONTAINER_PLATFORM" inherited="false"  description="Container platform used for executing the workflow tasks."  advanced="false" hidden="false"/>
        <variable name="PROXYFIED" value="$VISDOM_PROXYFIED" inherited="false"  description="If True, requests to Visdom are sent via a proxy server."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_visdom_service_start"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Start/raw" language="groovy">
            <arguments>
              <argument value="true"/>
              <argument value="ENGINE"/>
              <argument value="PROXYFIED"/>
              <argument value="VISDOM_ENABLE_LOGIN"/>
              <argument value="VISDOM_USERNAME"/>
              <argument value="VISDOM_PASSWORD"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
variables.put("ENDPOINT_VISDOM",variables.get("ENDPOINT_" + variables.get("INSTANCE_NAME")))
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
          -19.912506103515625
        </positionTop>
        <positionLeft>
          505.2749938964844
        </positionLeft>
      </metadata>
    </task>
    <task name="Init"




          fork="true">
      <genericInformation>
        <info name="NODE_SOURCE" value="${TARGET_INFRASTRUCTURE}"/>
        <info name="NODE_ACCESS_TOKEN" value="${TOKEN}"/>
      </genericInformation>
      <depends>
        <task ref="Start_Visdom_Service"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
variables.put("NODE_SOURCE_INTERNAL", variables.get("TARGET_INFRASTRUCTURE"))
variables.put("TOKEN_INTERNAL", variables.get("TOKEN"))
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
          108.44999694824219
        </positionTop>
        <positionLeft>
          505.2749938964844
        </positionLeft>
      </metadata>
    </task>
    <task name="Start"




          fork="true">
      <depends>
        <task ref="Init"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println "### NEW SIMULATIONS ###"
println "Starting the simulations!"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <metadata>
        <positionTop>
          234.85000610351562
        </positionTop>
        <positionLeft>
          505.2749938964844
        </positionLeft>
      </metadata>
    </task>
    <task name="split_simulations"




          fork="true">
      <depends>
        <task ref="Start"/>
      </depends>
      <inputFiles>
        <files  includes="$assets_params_file_path_from_dataspace" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println "split_simulations"

// Retrieve variables
def stressed_risk_free_rate_in_percent_range_min = variables.get("stressed_risk_free_rate_in_percent_range_min") as Integer
def stressed_risk_free_rate_in_percent_range_max = variables.get("stressed_risk_free_rate_in_percent_range_max") as Integer
def stressed_risk_free_rate_range_nb_steps = variables.get("stressed_risk_free_rate_range_nb_steps") as Integer
def stressed_volatility_in_percent_range_min = variables.get("stressed_volatility_in_percent_range_min") as Integer
def stressed_volatility_in_percent_range_max = variables.get("stressed_volatility_in_percent_range_max") as Integer
def stressed_volatility_range_nb_steps = variables.get("stressed_volatility_range_nb_steps") as Integer
def nb_replicated_tasks = variables.get("nb_replicated_tasks") as Integer
def assets_params_file_path_from_dataspace = variables.get("assets_params_file_path_from_dataspace")

def nb_assets = new File(localspace, assets_params_file_path_from_dataspace).text.split(System.getProperty("line.separator")).length
variables["nb_assets"] = nb_assets

// Check split params validity
def total_nb_steps = stressed_risk_free_rate_range_nb_steps * stressed_volatility_range_nb_steps
def nb_steps_per_task = total_nb_steps / nb_replicated_tasks
if (total_nb_steps % nb_replicated_tasks != 0)
	throw new Exception("total_nb_steps % nb_replicated_tasks != 0")

// Compute ranges
def stressed_risk_free_rate_step_size_in_percent = (stressed_risk_free_rate_in_percent_range_max - stressed_risk_free_rate_in_percent_range_min) / (stressed_risk_free_rate_range_nb_steps - 1)
def stressed_volatility_step_size_in_percent = (stressed_volatility_in_percent_range_max - stressed_volatility_in_percent_range_min) / (stressed_volatility_range_nb_steps - 1)
def i = 0, j = 0, step_id = 0, task_id = 0
def steps_to_consider_per_task = []
while (i < stressed_risk_free_rate_range_nb_steps)
{
    // Compute current_stressed_risk_free_rate_in_percent
    def current_stressed_risk_free_rate_in_percent = stressed_risk_free_rate_in_percent_range_min + i * stressed_risk_free_rate_step_size_in_percent
    if (i == stressed_risk_free_rate_range_nb_steps - 1)
    	current_stressed_risk_free_rate_in_percent = stressed_risk_free_rate_in_percent_range_max

    while (j < stressed_volatility_range_nb_steps)
    {
        // Compute current_stressed_risk_free_rate_in_percent
    	def current_stressed_volatility_in_percent = stressed_volatility_in_percent_range_min + j * stressed_volatility_step_size_in_percent
    	if (j == stressed_volatility_range_nb_steps - 1)
    		current_stressed_volatility_in_percent = stressed_volatility_in_percent_range_max

        // Add another step pair
        steps_to_consider_per_task += [[current_stressed_risk_free_rate_in_percent, current_stressed_volatility_in_percent]]

        // If we reach nb_steps_per_task
        if (step_id == nb_steps_per_task - 1)
        {
            variables["steps_for_task_" + task_id] = steps_to_consider_per_task
            //println step_id + " == " + (nb_steps_per_task - 1) + " => " + variables["steps_for_task_" + task_id]
            steps_to_consider_per_task = []
            task_id++
            step_id = -1
        }

        // inc
        j++
        step_id++
    }

    // inc
    i++
    j = 0
}

println "split_simulations"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <replicate>
          <script>
            <code language="groovy">
              <![CDATA[
runs=variables.get("nb_replicated_tasks")
]]>
            </code>
          </script>
        </replicate>
      </controlFlow>
      <metadata>
        <positionTop>
          361.25000762939453
        </positionTop>
        <positionLeft>
          445.4250183105469
        </positionLeft>
      </metadata>
    </task>
    <task name="simulate_ptf_PnLs"




          fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/quantlib.png"/>
        <info name="NODE_SOURCE" value="${NODE_SOURCE_INTERNAL}"/>
        <info name="NODE_ACCESS_TOKEN" value="${TOKEN_INTERNAL}"/>
      </genericInformation>
      <depends>
        <task ref="split_simulations"/>
      </depends>
      <inputFiles>
        <files  includes="ptfPnLSimulations" accessMode="transferFromGlobalSpace"/>
        <files  includes="$assets_params_file_path_from_dataspace" accessMode="transferFromGlobalSpace"/>
        <files  includes="$assets_correlations_file_path_from_dataspace" accessMode="transferFromGlobalSpace"/>
        <!--<files  includes="stressed_PnLs_job_${PA_JOB_ID}_task_${PA_TASK_REPLICATION}.txt" accessMode="transferFromGlobalSpace"/>-->
      </inputFiles>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
// FUNCTIONS //////////////////////////////


void fromListToFile(stressed_assets_params_file_name, stressed_assets_params_list,stressed_risk_free_rate_in_percent, stressed_volatility_in_percent)
{
    // Build the file content
    def file_content = ""
    stressed_assets_params_list.each {
        file_content += it.join(",") + System.getProperty("line.separator")
    }
    file_content = file_content.substring(0, file_content.length() - 1)

    // Write the content
    new File(localspace, stressed_assets_params_file_name).text = file_content
}

void generate_stressed_assets_params_file(stressed_assets_params_file_name, assets_params_list, stressed_risk_free_rate_in_percent, stressed_volatility_in_percent)
{
    def stressed_assets_params_list = []

    assets_params_list.each {
        // Stress current values
        def current_risk_free_rate = it[1] as Double
        def stressed_risk_free_rate = current_risk_free_rate * ( 1 + stressed_risk_free_rate_in_percent / 100)

        def current_volatility = it[2] as Double
        def stressed_volatility = current_volatility * ( 1 + stressed_volatility_in_percent / 100)

        // Store stressed values
        stressed_assets_params_list += [[it[0], stressed_risk_free_rate, stressed_volatility, it[3]]]
    }

    // Generate a file from the list
    fromListToFile(stressed_assets_params_file_name, stressed_assets_params_list, stressed_risk_free_rate_in_percent, stressed_volatility_in_percent)
}


// MAIN //////////////////////////////


println "simulate_ptf_PnLs ..."

// Retrieve variables
def job_id = variables.get("PA_JOB_ID")
def task_id = variables.get("PA_TASK_REPLICATION")
def steps_to_consider = variables.get("steps_for_task_" + task_id)
def nb_MC_per_stressed_scenario = variables.get("nb_MC_per_stressed_scenario")
def nb_time_steps = variables.get("nb_time_steps")
def stress_horizon = variables.get("stress_horizon")
def nb_assets = variables.get("nb_assets")
def assets_params_file_path_from_dataspace = variables.get("assets_params_file_path_from_dataspace")
def assets_correlations_file_path_from_dataspace = variables.get("assets_correlations_file_path_from_dataspace")

// Set executable permission
def executable_file_path = new File(localspace, "ptfPnLSimulations").absolutePath
["chmod","+x", executable_file_path].execute().waitForProcessOutput(System.out, System.err)

// Stressed values from the assets params file and Execute the command
def assets_params_file_content = new File(localspace, assets_params_file_path_from_dataspace).text
def assets_params_file_lines = assets_params_file_content.split(System.getProperty("line.separator"))
def assets_params_list = []
assets_params_file_lines.each {
    assets_params_list += it.split(",")
}

// Previous run results: File -> Map.
// Each line of the file : <stressed_risk_free_rate_in_percent> <stressed_volatility_in_percent> <expected_PnL> <nb_MC>
def stressed_PnLs_file_name = "stressed_PnLs_job_" + job_id + "_task_" + task_id + ".txt"
def stressed_PnLs_file = new File(localspace, stressed_PnLs_file_name)
//def previous_stressed_PnLs_map = [:]
//if (stressed_PnLs_file.exists()){
  //stressed_PnLs_file.text.split(System.getProperty("line.separator")).each { stressed_result ->
    //def stressed_result_arr = stressed_result.split(" ")
    //previous_stressed_PnLs_map[stressed_result_arr[0] + "_" + stressed_result_arr[1]] = [stressed_result_arr[2], stressed_result_arr[3]]
  //}
//}

// For each stressed pair
def stressed_PnLs = ""
def assets_params_file_name = new File(localspace, assets_params_file_path_from_dataspace).name

(steps_to_consider as List).each {
    // Retrieve the stressed rates
    def stressed_risk_free_rate_in_percent = it.get(0)
    def stressed_volatility_in_percent = it.get(1)

    // Generate a stressed assets params file
    def stressed_assets_params_file_name = "stressed_" + stressed_risk_free_rate_in_percent + "_" + stressed_volatility_in_percent + "_" + assets_params_file_name
    generate_stressed_assets_params_file(stressed_assets_params_file_name, assets_params_list, stressed_risk_free_rate_in_percent, stressed_volatility_in_percent)

    // Build the command and execute it
    def cmd = ['/bin/sh', '-c', "docker run --rm -v " + localspace + ":" + localspace + " -w " + localspace + " activeeon/quantlib:1.19 /bin/bash -c './ptfPnLSimulations " + nb_MC_per_stressed_scenario + " " + nb_time_steps + " " + stress_horizon + " " + nb_assets + " " + stressed_assets_params_file_name + " " +  assets_correlations_file_path_from_dataspace + " " + task_id + "'"]
    println cmd
    def sout = new StringBuilder()
    cmd.execute().waitForProcessOutput(sout, System.err)

    // Sum PnLs
    def PnLs_arr = sout.toString().split(" ")
    def sum_PnLs = 0
    PnLs_arr.each {
        sum_PnLs += it as Double
    }

    // Compute the sum of PnLs and their number
    def new_sum_PnLs = -1
    def new_nb_MC = -1
    //def previous_expected_PnL_and_nb_MC_arr = previous_stressed_PnLs_map[stressed_risk_free_rate_in_percent + "_" + stressed_volatility_in_percent]

    // 1. In case of existing previous results
    //if (previous_expected_PnL_and_nb_MC_arr != null){

      //def previous_expected_PnL = previous_expected_PnL_and_nb_MC_arr[0] as Double
      //def previous_nb_MC = previous_expected_PnL_and_nb_MC_arr[1] as Integer
      //def previous_sum_PnLs = previous_expected_PnL * previous_nb_MC

      //println "new_sum_PnLs = " + previous_sum_PnLs + "(previous runs) + " + sum_PnLs
      //println "new_nb_MC = " + previous_nb_MC + "(previous runs) + " + PnLs_arr.size()

      //new_sum_PnLs = previous_sum_PnLs + sum_PnLs
      //new_nb_MC = previous_nb_MC + PnLs_arr.size()

    // 2. In case of NO previous results
    //} else {

       new_sum_PnLs = sum_PnLs
       new_nb_MC = PnLs_arr.size()

       println "new_sum_PnLs = " + new_sum_PnLs
       println "new_nb_MC = " + new_nb_MC
    //}

    // Estimate the new expected PnL (i.e. mean PnL)
    def new_expected_PnL = new_sum_PnLs / new_nb_MC

    // Save results into a string
    stressed_PnLs += stressed_risk_free_rate_in_percent + " " + stressed_volatility_in_percent + " " + new_expected_PnL + " " + new_nb_MC + System.getProperty("line.separator")
}

// Write the string result into a file
stressed_PnLs = stressed_PnLs.substring(0, stressed_PnLs.length() - 1)
stressed_PnLs_file.text = stressed_PnLs

println "... simulate_ptf_PnLs"
]]>
          </code>
        </script>
      </scriptExecutable>
      <outputFiles>
        <files  includes="stressed_PnLs_job_${PA_JOB_ID}_task_${PA_TASK_REPLICATION}.txt" accessMode="transferToGlobalSpace"/>
      </outputFiles>
      <metadata>
        <positionTop>
          489.65000915527344
        </positionTop>
        <positionLeft>
          445.4250183105469
        </positionLeft>
      </metadata>
    </task>
    <task name="merge_to_csv"




          fork="true">
      <depends>
        <task ref="simulate_ptf_PnLs"/>
      </depends>
      <inputFiles>
        <files  includes="stressed_PnLs_job_${PA_JOB_ID}_task_*.txt" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def job_id = variables.get("PA_JOB_ID")
def nb_replicated_tasks = variables.get("nb_replicated_tasks") as Integer
def csv_content = "stressed_risk_free_rate_in_percent stressed_volatility_in_percent expected_PnL nb_MC" + System.getProperty("line.separator")

// Gather all stressed PnLs
for (i=0; i<nb_replicated_tasks-1; i++)
{
    csv_content += new File(localspace, "stressed_PnLs_job_" + job_id + "_task_" + i + ".txt").text + System.getProperty("line.separator")
}
csv_content += new File(localspace, "stressed_PnLs_job_" + job_id + "_task_" + i + ".txt").text

// Write them into the csv file
new File(localspace, "stressed_PnLs_job_" + job_id + ".csv").text = csv_content
]]>
          </code>
        </script>
      </scriptExecutable>
      <outputFiles>
        <files  includes="stressed_PnLs_job_${PA_JOB_ID}.csv" accessMode="transferToGlobalSpace"/>
      </outputFiles>
      <metadata>
        <positionTop>
          618.0500183105469
        </positionTop>
        <positionLeft>
          445.4250183105469
        </positionLeft>
      </metadata>
    </task>
    <task name="plot_png"



          preciousResult="true"
          fork="true">
      <variables>
        <variable name="DOCKER_ENABLED" value="True" inherited="true" model="PA:Boolean" description="If true, the workflow tasks will be executed inside a docker container"   />
        <variable name="DOCKER_IMAGE" value="activeeon/dlm3" inherited="true"  description="Name of the docker image"   />
      </variables>
      <depends>
        <task ref="merge_to_csv"/>
      </depends>
      <inputFiles>
        <files  includes="stressed_PnLs_job_${PA_JOB_ID}.csv" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_docker_vars/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
# https://jakevdp.github.io/PythonDataScienceHandbook/04.12-three-dimensional-plotting.html

import matplotlib as mpl
mpl.use('Agg')
from matplotlib import pyplot
from mpl_toolkits.mplot3d import Axes3D
import pandas as pd

# Labels
X_label = 'stressed_risk_free_rate_in_percent'
Y_label = 'stressed_volatility_in_percent'
Z_label = 'expected_PnL'

# Read data
job_id = variables.get("PA_JOB_ID")
df = pd.read_csv('stressed_PnLs_job_' + job_id + '.csv', sep=' ')
X = df[X_label]
Y = df[Y_label]
Z = df[Z_label]

 # Plot
fig = pyplot.figure()
ax = Axes3D(fig)
ax.plot_trisurf(X, Y, Z, cmap='viridis', edgecolor='none');
ax.set_xlabel(X_label)
ax.set_ylabel(Y_label)
ax.set_zlabel(Z_label)

# Change POV
ax.view_init(elev=10., azim=100)

# Save the chart
chart_file_name = 'stressed_PnLs.png'
fig.savefig(chart_file_name)

# Expose the chart
with open(chart_file_name, "rb") as binary_file:
    FILE_BIN = binary_file.read()
result = FILE_BIN
resultMetadata.put("file.name", chart_file_name)
resultMetadata.put("content.type", "image/png")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
          720.2125244140625
        </positionTop>
        <positionLeft>
          318.1750183105469
        </positionLeft>
      </metadata>
    </task>
    <task name="plot_visdom"




          fork="true">
      <variables>
        <variable name="DOCKER_ENABLED" value="True" inherited="true" model="PA:Boolean" description="If true, the workflow tasks will be executed inside a docker container"   />
        <variable name="DOCKER_IMAGE" value="activeeon/dlm3" inherited="true"  description="Name of the docker image"   />
      </variables>
      <depends>
        <task ref="merge_to_csv"/>
      </depends>
      <inputFiles>
        <files  includes="stressed_PnLs_job_${PA_JOB_ID}.csv" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
import numpy as np
import pandas as pd
from visdom import Visdom


#####  CONNECT TO VISDOM #####

visdom_endpoint = variables.get("ENDPOINT_VISDOM") if variables.get("ENDPOINT_VISDOM") else results[0].__str__()
print("VISDOM_ENDPOINT: ", visdom_endpoint)

assert visdom_endpoint is not None

visdom_endpoint = visdom_endpoint.replace("http://", "")

(VISDOM_HOST, VISDOM_PORT) = visdom_endpoint.split(":")

print("Connecting to %s:%s" % (VISDOM_HOST, VISDOM_PORT))
vis = Visdom(server="http://"+VISDOM_HOST, port=int(VISDOM_PORT))
assert vis.check_connection()


##### PLOT #####


# Labels
stressed_risk_free_rate_in_percent_label = 'stressed risk free rate (%)'
stressed_volatility_in_percent_label = 'stressed volatility (%)'
expected_PnL_label = 'Ptf PnL'
nb_MC_label = 'nb_MC'

# Read data
job_id = variables.get("PA_JOB_ID")
df = pd.read_csv('stressed_PnLs_job_' + job_id + '.csv', sep=' ')

# Plot text
textwindow = vis.text('Stressed Portfolio P&Ls (Profit and Loss)')
vis.text('1 point = 1 P&L', win=textwindow, append=True)
vis.text('Nb MC simus per P&L: ' + str(df[nb_MC_label][0]), win=textwindow, append=True)
vis.text('X: ' + stressed_risk_free_rate_in_percent_label, win=textwindow, append=True)
vis.text('Y: ' + stressed_volatility_in_percent_label, win=textwindow, append=True)
vis.text('Z: ' + expected_PnL_label, win=textwindow, append=True)

# Plot data
df = df[df.columns[:-1]]
df_arr = df.to_numpy()
print(df_arr)
vis.scatter(df_arr,
    opts=dict(
        markersize=5
    ))

]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
          720.4500122070312
        </positionTop>
        <positionLeft>
          496.4250183105469
        </positionLeft>
      </metadata>
    </task>
    <task name="put_signal"




          fork="true">
      <depends>
        <task ref="plot_png"/>
        <task ref="plot_visdom"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
// Put signal for interactive control

variables.put("waitForSignals", true)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
          813.1625061035156
        </positionTop>
        <positionLeft>
          392.1750183105469
        </positionLeft>
      </metadata>
    </task>
    <task name="Wait_For_Signals_With_Variables"




          fork="true">
      <description>
        <![CDATA[ A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job. ]]>
      </description>
      <variables>
        <variable name="SIGNALS" value="stop, kill" inherited="false"  description="List of comma-separated signals expected by this task."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png"/>
        <info name="TASK.DOCUMENTATION" value="user/ProActiveUserGuide.html#_task_signal_api"/>
      </genericInformation>
      <depends>
        <task ref="put_signal"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.ow2.proactive.scheduler.common.job.JobVariable
import java.util.*;

if (variables.get("waitForSignals")){

  List <JobVariable> signalVariables = new java.util.ArrayList<JobVariable>()
  signalVariables.add(new JobVariable("nb_MC_per_stressed_scenario", "" + variables.get("nb_MC_per_stressed_scenario"), "PA:INTEGER", "The number of Monte Carlo simulations.", "", false, false))
  signalVariables.add(new JobVariable("stressed_risk_free_rate_range_nb_steps", "" + variables.get("stressed_risk_free_rate_range_nb_steps"), "PA:INTEGER[2,1000]", "The step number of the stressed risk free rate range.", "", false, false))
  signalVariables.add(new JobVariable("stressed_volatility_range_nb_steps", "" + variables.get("stressed_volatility_range_nb_steps"), "PA:INTEGER[2,1000]", "The step number of the stressed volatility rate range.", "", false, false))
  signalVariables.add(new JobVariable("nb_replicated_tasks", "" + variables.get("nb_replicated_tasks"), "PA:INTEGER", "The number of ProActive replicated tasks which must divide stressed_risk_free_rate_range_nb_steps x stressed_volatility_range_nb_steps.", "", false, false))
  signalVariables.add(new JobVariable("TARGET_INFRASTRUCTURE", "" + variables.get("TARGET_INFRASTRUCTURE"), "PA:MODEL_FROM_URL(\${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/nodesources?infrastructure=%5E(%3F!(Default)).*\$)", "The node source where the job will be executed.", "Job Execution Parameters", false, false))
  signalVariables.add(new JobVariable("TOKEN", "" + variables.get("TOKEN"), "PA:MODEL_FROM_URL(\${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/tokens?nodeSource=\${TARGET_INFRASTRUCTURE})", "(Optional) Please select a value in case the node source access is restricted with tokens.", "Job Execution Parameters", false, false))
  signalVariables.add(new JobVariable("stressed_risk_free_rate_in_percent_range_min", "" + variables.get("stressed_risk_free_rate_in_percent_range_min"), "PA:INTEGER", "The min of the stressed risk free rate range.", "", true, false))
  signalVariables.add(new JobVariable("stressed_risk_free_rate_in_percent_range_max", "" + variables.get("stressed_risk_free_rate_in_percent_range_max"), "PA:INTEGER", "The max of the stressed risk free rate range.", "", true, false))
  signalVariables.add(new JobVariable("stressed_volatility_in_percent_range_min", "" + variables.get("stressed_volatility_in_percent_range_min"), "PA:INTEGER", "The min of the stressed volatility rate range.", "", true, false))
  signalVariables.add(new JobVariable("stressed_volatility_in_percent_range_max", "" + variables.get("stressed_volatility_in_percent_range_max"), "PA:INTEGER", "The max of the stressed volatility rate range.", "", true, false))

  signalapi.readyForSignal("Terminate_Job")
  signalapi.readyForSignal("Relaunch_a_new_Simulation", signalVariables)

  variables.put("Terminate_Job", false)
}
variables.put("waitForSignals", false)

signals = new HashSet()
signals.add("Terminate_Job")
signals.add("Relaunch_a_new_Simulation")
now = new Date()
receivedSignal = signalapi.waitForAny(signals)
receivedSignalName = receivedSignal.getName()
println "Received signal = " + receivedSignalName + " At: " + now.format("yyyy/MM/dd hh:mm:ss")

if (receivedSignalName == "Terminate_Job") {
    variables.put("Terminate_Job", true)
    result = receivedSignalName
} else {
    if (receivedSignalName == "Relaunch_a_new_Simulation") {
        println "### Input parameters of the new simulations ####"
        updatedVariables = receivedSignal.getUpdatedVariables()

        variables.put("nb_MC_per_stressed_scenario", updatedVariables.get("nb_MC_per_stressed_scenario"))
        println "nb_MC_per_stressed_scenario : " + updatedVariables.get("nb_MC_per_stressed_scenario")

        variables.put("stressed_risk_free_rate_range_nb_steps", updatedVariables.get("stressed_risk_free_rate_range_nb_steps"))
        println "stressed_risk_free_rate_range_nb_steps : " + updatedVariables.get("stressed_risk_free_rate_range_nb_steps")

        variables.put("stressed_volatility_range_nb_steps", updatedVariables.get("stressed_volatility_range_nb_steps"))
        println "stressed_volatility_range_nb_steps : " + updatedVariables.get("stressed_volatility_range_nb_steps")

        variables.put("nb_replicated_tasks", updatedVariables.get("nb_replicated_tasks"))
        println "nb_replicated_tasks : " + updatedVariables.get("nb_replicated_tasks")

        variables.put("NODE_SOURCE_INTERNAL", updatedVariables.get("TARGET_INFRASTRUCTURE"))
        variables.put("TOKEN_INTERNAL", updatedVariables.get("TOKEN"))

        variables.put("TARGET_INFRASTRUCTURE", updatedVariables.get("TARGET_INFRASTRUCTURE"))
        println "TARGET_INFRASTRUCTURE : " + updatedVariables.get("TARGET_INFRASTRUCTURE")

        variables.put("TOKEN", updatedVariables.get("TOKEN"))
        println "TOKEN : " + updatedVariables.get("TOKEN")

        variables.put("stressed_risk_free_rate_in_percent_range_min", updatedVariables.get("stressed_risk_free_rate_in_percent_range_min"))
        println "stressed_risk_free_rate_in_percent_range_min : " + updatedVariables.get("stressed_risk_free_rate_in_percent_range_min")

        variables.put("stressed_risk_free_rate_in_percent_range_max", updatedVariables.get("stressed_risk_free_rate_in_percent_range_max"))
        println "stressed_risk_free_rate_in_percent_range_max : " + updatedVariables.get("stressed_risk_free_rate_in_percent_range_max")

        variables.put("stressed_volatility_in_percent_range_min", updatedVariables.get("stressed_volatility_in_percent_range_min"))
        println "stressed_volatility_in_percent_range_min : " + updatedVariables.get("stressed_volatility_in_percent_range_min")

        variables.put("stressed_volatility_in_percent_range_max", updatedVariables.get("stressed_volatility_in_percent_range_max"))
        println "stressed_volatility_in_percent_range_max : " + updatedVariables.get("stressed_volatility_in_percent_range_max")

        println "##########"

        signalapi.removeSignal("ready_Terminate_Job")
        variables.put("PA_TASK_ITERATION", 0)
        schedulerapi.connect()

        result = receivedSignalName
    }
    else{
        result = null
    }
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <loop target="Wait_For_Signals_With_Variables">
          <script>
            <code language="groovy">
              <![CDATA[
if (result!=null){
    loop = false
} else {
    loop = "* * * * *"
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
          906.8500061035156
        </positionTop>
        <positionLeft>
          354.4250183105469
        </positionLeft>
      </metadata>
    </task>
    <task name="Rerun_Simulation"




          fork="true">
      <description>
        <![CDATA[ A template task that waits for a Signal with variables, allowing to rerun the loop with new variable values. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-send.png"/>
      </genericInformation>
      <depends>
        <task ref="Wait_For_Signals_With_Variables"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow  block="end">
        <loop target="Start">
          <script>
            <code language="groovy">
              <![CDATA[
loop = ! variables.get("Terminate_Job")
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
          1001.2500305175781
        </positionTop>
        <positionLeft>
          505.2749938964844
        </positionLeft>
      </metadata>
    </task>
    <task name="Visdom_Service_Actions"

          onTaskError="cancelJob"


          fork="true">
      <description>
        <![CDATA[ This task manages the life-cycle of Visdom PSA service. It allows to trigger the following actions: Finish_Visdom.
It requires the following variables:
INSTANCE_ID: if used alone or;
INSTANCE_NAME: if used within the same workflow as a Visdom_Service_Start task. In this case there is no need for an INSTANCE_ID.
ACTION: the action to execute on the Visdom service among the aforementioned actions. ]]>
      </description>
      <variables>
        <variable name="INSTANCE_NAME" value="$VISDOM_INSTANCE_NAME" inherited="false"  description="Instance name of the server to be used to broadcast the visualization."  advanced="false" hidden="false"/>
        <variable name="SERVICE_ACTION_WORKFLOW" value="service-automation/Finish_Visdom" inherited="false" model="PA:CATALOG_OBJECT(Workflow/psa,,,%Visdom)" description="The action that will be processed regarding the service status."  advanced="false" hidden="false"/>
        <variable name="INSTANCE_ID" value="" inherited="false"  description="Visdom instance ID to be used."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_visdom_service_actions"/>
      </genericInformation>
      <depends>
        <task ref="Rerun_Simulation"/>
      </depends>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Action/raw" language="groovy">
            <arguments>
              <argument value="INSTANCE_NAME"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
          1127.6499938964844
        </positionTop>
        <positionLeft>
          505.2749938964844
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2248px;
            height:2574px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:24.912506103515625px;left:-313.1750183105469px"><div class="task ui-draggable" id="jsPlumb_1_235" style="top: -19.925px; left: 505.275px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start the Visdom server as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Start_Visdom_Service</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon" class="glyphicon glyphicon-arrow-right"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_238" style="top: 108.45px; left: 505.275px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Init</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_241" style="top: 234.85px; left: 505.275px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Start</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_244" style="top: 361.25px; left: 445.425px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">split_simulations</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_247" style="top: 489.65px; left: 445.425px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/quantlib.png" width="20px">&nbsp;<span class="name">simulate_ptf_PnLs</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable" id="jsPlumb_1_250" style="top: 618.05px; left: 445.425px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">merge_to_csv</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_253" style="top: 720.45px; left: 496.425px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title=""><img src="/studio/images/Python.png" width="20px">&nbsp;<span class="name">plot_visdom</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_256" style="top: 906.85px; left: 354.425px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png" width="20px">&nbsp;<span class="name">Wait_For_Signals_With_Variables</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_259" style="top: 1001.25px; left: 505.275px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A template task that waits for a Signal with variables, allowing to rerun the loop with new variable values."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-send.png" width="20px">&nbsp;<span class="name">Rerun_Simulation</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_262" style="top: 1127.65px; left: 505.275px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task manages the life-cycle of Visdom PSA service. It allows to trigger the following actions: Finish_Visdom.
It requires the following variables:
INSTANCE_ID: if used alone or;
INSTANCE_NAME: if used within the same workflow as a Visdom_Service_Start task. In this case there is no need for an INSTANCE_ID.
ACTION: the action to execute on the Visdom service among the aforementioned actions."><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Visdom_Service_Actions</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon" class="glyphicon glyphicon-arrow-right"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable" id="jsPlumb_1_265" style="top: 720.213px; left: 318.175px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title=""><img src="/studio/images/Python.png" width="20px">&nbsp;<span class="name">plot_png</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable" id="jsPlumb_1_317" style="top: 813.163px; left: 392.175px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">put_signal</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><svg style="position:absolute;left:544.5px;top:19.5px" width="40.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 29.5 50 19.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.1659680000000008,66.303232 L11.101334505106049,49.025694870877146 L2.712976460524842,52.8513254484303 L-2.3505720464636433,45.1467504103523 L-1.1659680000000008,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.1659680000000008,66.303232 L11.101334505106049,49.025694870877146 L2.712976460524842,52.8513254484303 L-2.3505720464636433,45.1467504103523 L-1.1659680000000008,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:540.0235032915331px;top:147.5px" width="15.47649670846693" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 87 C -10 37 -10 50 0 0 " transform="translate(14.97649670846693,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)"></path></svg><svg style="position:absolute;left:491px;top:274.5px" width="74.5" height="87" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 86 C -10 36 63.5 50 53.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M2.6839999999999984,62.656000000000006 L20.718811720445466,51.53190155526827 L11.50267624530294,51.78259440283176 L9.845406123277222,42.71322530996533 L2.6839999999999984,62.656000000000006" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M2.6839999999999984,62.656000000000006 L20.718811720445466,51.53190155526827 L11.50267624530294,51.78259440283176 L9.845406123277222,42.71322530996533 L2.6839999999999984,62.656000000000006" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:524.9px;top:390.5px" width="28.200000000000045" height="100" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 7.2000000000000455 89 C 17.200000000000045 89 -10 -10 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#e5db3d" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.267458400000042,77.82858800000001 L14.020268349829806,57.17887135349855 L7.724283688630757,63.91389749642824 L0.10557784625803723,58.72204606486784 L9.267458400000042,77.82858800000001" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.267458400000042,77.82858800000001 L14.020268349829806,57.17887135349855 L7.724283688630757,63.91389749642824 L0.10557784625803723,58.72204606486784 L9.267458400000042,77.82858800000001" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_282" style="position: absolute; transform: translate(-50%, -50%); left: 538.5px; top: 441.25px;">replicate</div><svg style="position:absolute;left:491px;top:400.5px" width="25.5" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 4.5 89 C 14.5 39 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M6.949008,67.21769599999999 L12.133645885818328,46.67214830730177 L5.697860860010481,53.27371411410756 L-1.8103360000740958,47.92329544729128 L6.949008,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M6.949008,67.21769599999999 L12.133645885818328,46.67214830730177 L5.697860860010481,53.27371411410756 L-1.8103360000740958,47.92329544729128 L6.949008,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:486px;top:529.5px" width="30.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 19.5 50 9.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.0213280000000005,66.303232 L7.990935403065082,47.628259937165645 L0.14634792583620504,52.472064981973276 L-5.840231614961638,45.46058401132944 L-2.0213280000000005,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.0213280000000005,66.303232 L7.990935403065082,47.628259937165645 L0.14634792583620504,52.472064981973276 L-5.840231614961638,45.46058401132944 L-2.0213280000000005,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:534.5px;top:896.5px" width="61" height="61" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 40 C 50 -10 -10 50 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_301" style="position: absolute; transform: translate(-50%, -50%); left: 559.5px; top: 926.5px;">loop</div><svg style="position:absolute;left:439px;top:946.5px" width="136" height="55" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 115 54 C 125 4 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M102.41693000000001,32.399136 L84.97221872495368,20.370750882692196 L88.91291909018011,28.705670236321502 L81.27875296127519,33.874761792512096 L102.41693000000001,32.399136" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M102.41693000000001,32.399136 L84.97221872495368,20.370750882692196 L88.91291909018011,28.705670236321502 L81.27875296127519,33.874761792512096 L102.41693000000001,32.399136" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:604.5px;top:224.5px" width="51" height="827" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 0 C 50 -50 9 776 19 726 " transform="translate(0.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M23.86275075,130.15203300000002 L31.430277549826407,149.94426728857667 L24.262012539912877,144.1463386284732 L17.43597192135325,150.34352907848955 L23.86275075,130.15203300000002" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M23.86275075,130.15203300000002 L31.430277549826407,149.94426728857667 L24.262012539912877,144.1463386284732 L17.43597192135325,150.34352907848955 L23.86275075,130.15203300000002" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_310" style="position: absolute; transform: translate(-50%, -50%); left: 629px; top: 637.5px;">loop</div><svg style="position:absolute;left:554px;top:1040.5px" width="36.5" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 15.5 87 C 25.5 37 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M17.008112,65.388768 L19.170341776631943,44.30975563240919 L13.755731433035736,51.77179254112393 L5.553366317755873,47.562136199373455 L17.008112,65.388768" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M17.008112,65.388768 L19.170341776631943,44.30975563240919 L13.755731433035736,51.77179254112393 L5.553366317755873,47.562136199373455 L17.008112,65.388768" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:357.6750183105469px;top:657.5px" width="149.32498168945312" height="63.2125244140625" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 62.2125244140625 C -10 12.2125244140625 138.32498168945312 50 128.32498168945312 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M15.071047697914123,39.228124662323 L36.24032045147422,40.156505556879814 L28.475006937698968,35.18660555458808 L32.198801343739305,26.75254631709497 L15.071047697914123,39.228124662323" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M15.071047697914123,39.228124662323 L36.24032045147422,40.156505556879814 L28.475006937698968,35.18660555458808 L32.198801343739305,26.75254631709497 L15.071047697914123,39.228124662323" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 564.5px; top: 10px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 545px; top: 138px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 545px; top: 98px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 545px; top: 265px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 545px; top: 225px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 595px; top: 265px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 491.5px; top: 391px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 491.5px; top: 351px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint replicate-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 525.4px; top: 391px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 496px; top: 520px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint replicate-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 532.6px; top: 480px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 496px; top: 480px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected endpointDrag" style="position: absolute; height: 20px; width: 20px; left: 486.5px; top: 648px; visibility: visible;" dragid="jsPlumb_1_358" elid="jsPlumb_1_250"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 486.5px; top: 608px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable endpointDrag _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 536.425px; top: 750.45px; visibility: visible;" dragid="jsPlumb_1_331" elid="jsPlumb_1_253"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 439.5px; top: 937px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 535px; top: 897px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 535px; top: 937px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 554.5px; top: 1031px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 554.5px; top: 991px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 614px; top: 991px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 570px; top: 1158px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 570px; top: 1118px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable endpointDrag _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 358.175px; top: 750.213px; visibility: visible;" dragid="jsPlumb_1_321" elid="jsPlumb_1_265"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 358.175px; top: 710.213px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable endpointDrag _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 432px; top: 843px; visibility: visible;" dragid="jsPlumb_1_339" elid="jsPlumb_1_317"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><svg style="position:absolute;left:357.6750183105469px;top:759.7125244140625px" width="94.82498168945312" height="53.7874755859375" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 73.82498168945312 52.7874755859375 C 83.82498168945312 2.7874755859375 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M69.37084542543793,33.185356874542244 L54.49611789251845,18.09421772531275 L56.801011693050526,27.02100127641719 L48.33176229439339,30.664051457700157 L69.37084542543793,33.185356874542244" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected connected" style="position: absolute; height: 20px; width: 20px; left: 432px; top: 803px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><svg style="position:absolute;left:431.5px;top:759.9500122070312px" width="125.42501831054688" height="53.54998779296875" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 52.54998779296875 C -10 2.54998779296875 114.42501831054688 50 104.42501831054688 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M10.055797468749995,31.624434105468747 L31.22641968026019,32.52151558310121 L23.453766742760763,27.563101893907707 L27.165087468699145,19.123546309090443 L10.055797468749995,31.624434105468747" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:431.5px;top:852.5px" width="28.5" height="55" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 7.5 54 C 17.5 4 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.6096,39.815424000000014 L14.176693578258355,19.12383981107356 L7.9414729429789475,25.915159537708867 L0.27642911596720676,20.79196686809461 L9.6096,39.815424000000014" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected connected" style="position: absolute; height: 20px; width: 20px; left: 439.5px; top: 897px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><svg style="position:absolute;left:486px;top:657.5px" width="70.92501831054688" height="63.45001220703125" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 49.925018310546875 62.45001220703125 C 59.925018310546875 12.45001220703125 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M48.688603543281566,43.305240903854376 L39.38302112809319,24.268273290441336 L38.73050576518085,33.4646977968005 L29.542478021039315,34.22637106854206 L48.688603543281566,43.305240903854376" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected connected" style="position: absolute; height: 20px; width: 20px; left: 536.425px; top: 710.45px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>