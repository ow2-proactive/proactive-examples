<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.13" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="1" name="PyTorch_FL_Server_Task" onTaskError="cancelJob" priority="normal" projectName="1. PyTorch Federated Learning Tasks" xsi:schemaLocation="urn:proactive:jobdescriptor:3.13 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.13/schedulerjob.xsd">
  <variables>
    <variable name="NATIVE_SCHEDULER" value="" advanced="true" description="Name of the Native Scheduler node source to use when the workflow tasks must be deployed inside a cluster such as SLURM, LSF, etc." group="Resource Management" hidden="false"/>
    <variable name="NATIVE_SCHEDULER_PARAMS" value="" advanced="true" description="Parameters given to the native scheduler (SLURM, LSF, etc) while requesting a ProActive node used to deploy the workflow tasks." group="Resource Management" hidden="false"/>
    <variable name="NODE_SOURCE_NAME" value="" advanced="true" description="If not empty, the workflow tasks will be run only on nodes belonging to the specified node source." group="Resource Management" hidden="false"/>
    <variable name="NODE_ACCESS_TOKEN" value="" advanced="true" description="If not empty, the workflow tasks will be run only on nodes that contains the specified token." group="Resource Management" hidden="false"/>
    <variable name="CONTAINER_PLATFORM" value="docker" advanced="true" description="Container platform used for executing the workflow tasks." group="Container Parameters" hidden="false" model="PA:LIST(no-container,docker,podman,singularity)"/>
    <variable name="CONTAINER_GPU_ENABLED" value="False" description="If True, containers will run based on images containing libraries that are compatible with GPU." hidden="false" group="Container Parameters" model="PA:Boolean" advanced="true"/>
    <variable name="CONTAINER_IMAGE" value="docker://activeeon/flower:cpu" description="Name of the container image being used." group="Container Parameters" hidden="false" model="PA:LIST(docker://activeeon/flower:cpu)" advanced="true"/>
  </variables>
  <description>
    <![CDATA[ Simple Federated Learning Server task template using PyTorch. ]]>
  </description>
  <genericInformation>
<info name="bucketName" value="federated-learning"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/pytoch.jpg"/>
<info name="NS" value="$NATIVE_SCHEDULER"/>
<info name="PYTHON_COMMAND" value="python3"/>
<info name="NODE_ACCESS_TOKEN" value="$NODE_ACCESS_TOKEN"/>
<info name="Documentation" value="PML/PMLUserGuide.html#_FL"/>
<info name="NS_BATCH" value="$NATIVE_SCHEDULER_PARAMS"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task fork="true" name="PyTorch_FL_Server_Task">
      <description>
        <![CDATA[ Simple Federated Learning Server task template using PyTorch. ]]>
      </description>
      <variables>
        <variable advanced="false" hidden="false" inherited="false" name="TASK_NODE_SOURCE_NAME" value="$NODE_SOURCE_NAME" description="If not empty, the task will be run only on nodes belonging to the specified node source."/>
        <variable advanced="false" hidden="false" inherited="false" name="TASK_NODE_ACCESS_TOKEN" value="$NODE_ACCESS_TOKEN" description="If not empty, the task will be run only on nodes that contains the specified token."/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/pytoch.jpg"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_FL"/>
        <info name="NODE_ACCESS_TOKEN" value="$TASK_NODE_ACCESS_TOKEN"/>
      </genericInformation>
      <selection>
        <script type="dynamic">
          <code language="groovy">
            <![CDATA[
selected = false
TASK_NAME = variables.get("PA_TASK_NAME")
TASK_NODE_SOURCE_NAME = variables.get("TASK_NODE_SOURCE_NAME")
println "TASK_NAME: " + TASK_NAME
println "TASK_NODE_SOURCE_NAME: " + TASK_NODE_SOURCE_NAME
println "proactive.node.nodesource: " + System.getProperty("proactive.node.nodesource")
if (TASK_NODE_SOURCE_NAME?.trim()) {
    selected = TASK_NODE_SOURCE_NAME.equals(System.getProperty("proactive.node.nodesource"))
} else {
    selected = true
}
println "selected: " + selected
]]>
          </code>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
__file__ = variables.get("PA_TASK_NAME")
print("BEGIN " + __file__)

import flwr as fl

# Define strategy
strategy = fl.server.strategy.FedAvg(
    fraction_fit=0.5,
    fraction_eval=0.5,
)

# Start server
fl.server.start_server(
    server_address="[::]:8080",
    config={"num_rounds": 3},
    strategy=strategy,
)

print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            127.984375
        </positionTop>
        <positionLeft>
            166.546875
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2290px;
            height:3640px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-122.984375px;left:-161.546875px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_275" style="top: 127.985px; left: 166.547px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Simple Federated Learning Server task template using PyTorch."><img src="/automation-dashboard/styles/patterns/img/wf-icons/pytoch.jpg" width="20px">&nbsp;<span class="name">PyTorch_FL_Server_Task</span></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 231.5px; top: 158px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
