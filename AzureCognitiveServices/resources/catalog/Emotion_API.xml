<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.9"
     xsi:schemaLocation="urn:proactive:jobdescriptor:3.9 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.9/schedulerjob.xsd"
    name="Emotion_API" projectName="Vision"
    priority="normal"
    onTaskError="continueJobExecution"
     maxNumberOfExecution="2">
  <description>
    <![CDATA[ Welcome to the Microsoft Emotion API, which allows you to build more personalized apps with Microsoft’s cutting edge cloud-based emotion recognition algorithm. https://azure.microsoft.com/en-us/services/cognitive-services/emotion/ ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="azure-cognitive-services"/>
    <info name="pca.action.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/azure/api_emotion.svg"/>
    <info name="Documentation" value="https://azure.microsoft.com/en-us/services/cognitive-services/emotion/"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Emotion_API">
      <description>
        <![CDATA[ Welcome to the Microsoft Emotion API, which allows you to build more personalized apps with Microsoft’s cutting edge cloud-based emotion recognition algorithm. https://azure.microsoft.com/en-us/services/cognitive-services/emotion/ ]]>
      </description>
      <variables>
        <variable name="SUBSCRIPTION_KEY" value="" inherited="false" />
        <variable name="URL_BASE" value="https://eastus2.api.cognitive.microsoft.com" inherited="false" />
        <variable name="URL_IMAGE" value="https://upload.wikimedia.org/wikipedia/commons/c/c3/RH_Louise_Lillian_Gish.jpg" inherited="false" />
      </variables>
      <genericInformation>
        <info name="TASK.ICON" value="/automation-dashboard/styles/patterns/img/wf-icons/azure/api_emotion.svg"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
print("BEGIN Emotion_API")


import http.client, urllib.request, urllib.parse, urllib.error, base64, requests, json
import pandas as pd
from pandas.io.json import json_normalize

###############################################
#### Update or verify the following values. ###
###############################################


URL_IMAGE = variables.get("URL_IMAGE")


# Replace the subscription_key string value with your valid subscription key.
#subscription_key = '13hc77781f7e4b19b5fcdd72a8df7156'
subscription_key = variables.get("SUBSCRIPTION_KEY")

# Replace or verify the region.
#
# You must use the same region in your REST API call as you used to obtain your subscription keys.
# For example, if you obtained your subscription keys from the westus region, replace 
# "westcentralus" in the URI below with "westus".
#
# NOTE: Free trial subscription keys are generated in the westcentralus region, so if you are using
# a free trial subscription key, you should not need to change this region.
#uri_base = 'https://westcentralus.api.cognitive.microsoft.com'
uri_base = variables.get("URL_BASE")


# Request headers.
headers = {
    'Content-Type': 'application/json',
    'Ocp-Apim-Subscription-Key': subscription_key,
}

# Request parameters.
params = {
    'returnFaceId': 'true',
    'returnFaceLandmarks': 'false',
    'returnFaceAttributes': 'age,gender,headPose,smile,facialHair,glasses,emotion,hair,makeup,occlusion,accessories,blur,exposure,noise',
}

# Body. The URL of a JPEG image to analyze.
#body = {'url': 'https://upload.wikimedia.org/wikipedia/commons/c/c3/RH_Louise_Lillian_Gish.jpg'}
body = {'url': URL_IMAGE}

try:
    # Execute the REST API call and get the response.
    response = requests.request('POST', uri_base + '/face/v1.0/detect', json=body, data=None, headers=headers, params=params)

    print ('Response:')
    parsed = json.loads(response.text)
    rect = parsed[0]["faceAttributes"]["emotion"]
    #print (json.dumps(max(rect, key=rect.get), sort_keys=True, indent=2))

except Exception as e:
    print('Error:')
    print(e)

    
df = json_normalize(rect)

table = []
table.append("""<tr><td><a href="{0}"><img src="{0}" height="150" width="150"/></a></td><td>{1}</td>""".format(URL_IMAGE, df.to_html()))
        
css_style="""
table {
  border: 1px solid #999999;
  text-align: center;
  border-collapse: collapse;
  width: 100%;
}
td {
  border: 1px solid #999999;
  padding: 3px 2px;
  font-size: 13px;
  border-bottom: 1px solid #999999;
}
th {
  font-size: 17px;
  font-weight: bold;
  color: #FFFFFF;
  text-align: center;
  background: #0B6FA4;
  border-left: 2px solid #999999
}
"""

html = """<table><th>Image</th><th>Reponse</th></tr>{0}</table>""".format("\n".join(table))

html_container = """

            
            
            
            
            
            
            
            
            
            <!DOCTYPE html>
            <html>
              <head>
                <meta charset="UTF-8">
                  <meta name="description" content="Face API">
                    <style>{0}</style>
                  </head>
                  <body>{1}</body></html>
""".format(css_style, html)

result = html_container.encode('utf-8')
resultMetadata.put("file.extension", ".html")
resultMetadata.put("file.name", "result.html")
resultMetadata.put("content.type", "text/html")

print("END Emotion_API")
]]>
                </code>
              </script>
            </scriptExecutable>
            <controlFlow block="none"></controlFlow>
          </task>
        </taskFlow>
      </job>