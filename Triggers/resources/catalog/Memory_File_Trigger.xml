<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.12" xsi:schemaLocation="urn:proactive:jobdescriptor:3.12 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.12/schedulerjob.xsd"  name="Memory_File_Trigger"  priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="HOST" value="" model="PA:MODEL_FROM_URL(${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/hosts)"/>
    <variable name="FOLDER_TO_MONITOR" value="/tmp/trigger" model="PA:NOT_EMPTY_STRING"/>
    <variable name="FILENAME_PATTERN_TO_MONITOR" value=".*" model="PA:NOT_EMPTY_STRING"/>
    <variable name="CHANNEL_TRIGGERED_ID" value="FileTrigger_${PA_JOB_ID}" model="PA:NOT_EMPTY_STRING"/>
    <variable name="CALLED_WORKFLOW" value="basic-examples/Print_File_Name" model="PA:CATALOG_OBJECT"/>
    <variable name="FOUND_FILE_VARIABLE_NAME" value="file" model="PA:NOT_EMPTY_STRING"/>
  </variables>
  <description>
    <![CDATA[ This workflow monitors a folder (FOLDER_TO_MONITOR) on a given HOST. 
It searches for files according to the pattern FILENAME_PATTERN_TO_MONITOR and for each file found, it will submit a catalog workflow to the scheduler (CALLED_WORKFLOW).
The submitted workflow will receive as parameter the found file path.The name of this parameter can be customized using FOUND_FILE_VARIABLE_NAME.
The MemoryFileTrigger workflow is stateful and behaves using a loop structure. It will memorize at each iteration the files already found to avoid retriggering new workflow execution for files already monitored.
This state is implemented using ProActive Synchronization API and uses the CHANNEL_TRIGGERED_ID synchronization channel. By default it uses the MemoryFileTrigger job id to make sure the memory is reset when resubmitting the MemoryFileTrigger job. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="triggers"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/file_trigger.png"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Init" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ The simplest task, ran by a Groovy engine. ]]>
      </description>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
            <arguments>
              <argument value="${HOST}"/>
            </arguments>
          </file>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
inputFilesFolder = variables.get("FOLDER_TO_MONITOR");

println("Monitoring " + inputFilesFolder)

channelId = variables.get("CHANNEL_TRIGGERED_ID")

synchronizationapi.createChannel(channelId, true)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            383.984375
        </positionTop>
        <positionLeft>
            623.5
        </positionLeft>
      </metadata>
    </task>
    <task name="TriggerJobSubmission" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ The simplest task, ran by a Groovy engine. ]]>
      </description>
      <depends>
        <task ref="Init"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
            <arguments>
              <argument value="${HOST}"/>
            </arguments>
          </file>
        </script>
        <script type="dynamic">
          <code language="groovy">
            <![CDATA[
import groovy.io.FileType
inputFilesFolder = new File(variables.get("FOLDER_TO_MONITOR"));

filesToProcess = new ArrayList();

channelId = variables.get("CHANNEL_TRIGGERED_ID")

selected = false;

pattern = variables.get("FILENAME_PATTERN_TO_MONITOR")

// list files in the watched folder
inputFilesFolder.eachFileRecurse(FileType.FILES, { file->
	key = file.getAbsolutePath()
    if (!synchronizationapi.containsKey(channelId, key) && file.getName() ==~ /${pattern}/) {
		// if key is not there then we spotted a new file
		selected = true;
	}
})
]]>
          </code>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import groovy.io.FileType

inputFilesFolder = new File(variables.get("FOLDER_TO_MONITOR"))

schedulerapi.connect()

channelId = variables.get("CHANNEL_TRIGGERED_ID")

pattern = variables.get("FILENAME_PATTERN_TO_MONITOR")


// list files in the watched folder
inputFilesFolder.eachFileRecurse(FileType.FILES, { file->
	key = file.getAbsolutePath()
	value = true // we no need value, so it is always true
	previousValue = synchronizationapi.putIfAbsent(channelId, key, value)
    if (previousValue == null && file.getName() ==~ /${pattern}/) {

		// then we found new file which was apparently added

        // Submit a workflow referenced in the ProActive Catalog (or accessible by url)
        // Please add the bucket and workflow names that you want to execute as Task Variables 'CALLED_WORKFLOW'

        // get the workflow information from Task Variables, e.g. 'basic-examples/Native_Task'
		calledWorkflow = variables.get("CALLED_WORKFLOW")

		// variables submitted to the workflow: Empty in the example, modify this map to give parameters to the submitted workflow
        variableName = variables.get("FOUND_FILE_VARIABLE_NAME")
        workflow_variables = [(variableName) : key]
		def generic_infos_map = ["PARENT_JOB_ID" : variables.get("PA_JOB_ID")]

        println "Submitting workflow " + calledWorkflow
      	// submitting the job

		jobid = schedulerapi.submitFromCatalog(variables.get("PA_CATALOG_REST_URL"), calledWorkflow, workflow_variables, generic_infos_map)

		println "Job submitted with job id " + jobid

	}
})

schedulerapi.disconnect()
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <loop target="TriggerJobSubmission">
          <script>
            <code language="groovy">
              <![CDATA[
loop = true
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            511.984375
        </positionTop>
        <positionLeft>
            623.5
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2830px;
            height:3308px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-378.984375px;left:-618.5px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_117" style="top: 383.984px; left: 623.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Groovy engine."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Init</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_120" style="top: 511.984px; left: 623.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Groovy engine."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">TriggerJobSubmission</span></a></div><svg style="position:absolute;left:663.5px;top:423.5px" width="37.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 16.5 88 C 26.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M17.922576,66.303232 L19.885371730082234,45.204714684274435 L14.541569557866197,52.71762213373894 L6.29976186382118,48.585721126408245 L17.922576,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M17.922576,66.303232 L19.885371730082234,45.204714684274435 L14.541569557866197,52.71762213373894 L6.29976186382118,48.585721126408245 L17.922576,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:737.0266769263776px;top:461.5px" width="20.473323073622403" height="141" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C -10 90 -10 -50 0 0 " transform="translate(19.973323073622403,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_131" style="position: absolute; transform: translate(-50%, -50%); left: 749px; top: 531.5px;">loop</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 664px; top: 414px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 680.5px; top: 542px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 680.5px; top: 502px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 747px; top: 502px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 747px; top: 542px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>