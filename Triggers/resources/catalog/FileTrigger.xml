<?xml version="1.0" encoding="UTF-8"?>
<job
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:proactive:jobdescriptor:3.12" xsi:schemaLocation="urn:proactive:jobdescriptor:3.12 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.12/schedulerjob.xsd"  name="FileTrigger" projectName="1. Basic Workflows" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
    <variables>
        <variable name="HOST" value="" model="PA:MODEL_FROM_URL(${PA_SCHEDULER_REST_URL}/rm/model/hosts)"/>
        <variable name="FOLDER_TO_MONITOR" value="/tmp/trigger" />
        <variable name="FILENAME_PATTERN_TO_MONITOR" value=".*" model=""/>
        <variable name="CHANNEL_TRIGGERED_ID" value="FileTrigger_${PA_JOB_ID}" />
        <variable name="CALLED_WORKFLOW" value="basic-examples/Print_File_Name" model=""/>
    </variables>
    <description>
        <![CDATA[ This workflow monitors provided folder (FOLDER_TO_MONITOR) on the provided machine(HOST). In the first run of FileTrigger task, it will find all files that follow the provided pattern(FILENAME_PATTERN_TO_MONITOR) and for each such file, it will submit provided job(CALLED_WORKFLOW) with variable "file" which equals to the path of the founded file. Next time FileTrigger will be scheduled only when there are some new files (which follow provided pattern) in the given folder.
Both tasks use a static selection script which schedules them to the provided HOST. FileTrigger task uses addition selection script which starts a task only if there is at least one new file in the folder. In order to memorize which file we have seen already, we use synchronizationapi. ]]>
    </description>
    <genericInformation>
        <info name="bucketName" value="basic-examples"/>
        <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/file_trigger.png"/>
        <info name="group" value="public-objects"/>
    </genericInformation>
    <taskFlow>
        <task name="Init"
              fork="true">
            <description>
                <![CDATA[ The simplest task, ran by a Groovy engine. ]]>
            </description>
            <selection>
                <script type="static">
                    <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
                        <arguments>
                            <argument value="${HOST}"/>
                        </arguments>
                    </file>
                </script>
            </selection>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
inputFilesFolder = variables.get("FOLDER_TO_MONITOR");

println("Monitoring " + inputFilesFolder)

channelId = variables.get("CHANNEL_TRIGGERED_ID")

synchronizationapi.createChannel(channelId, true)
]]>
                    </code>
                </script>
            </scriptExecutable>
            <metadata>
                <positionTop>
                    185.61666870117188
                </positionTop>
                <positionLeft>
                    224.39996337890625
                </positionLeft>
            </metadata>
        </task>
        <task name="FileTrigger"
              fork="true">
            <description>
                <![CDATA[ The simplest task, ran by a Groovy engine. ]]>
            </description>
            <depends>
                <task ref="Init"/>
            </depends>
            <selection>
                <script type="static">
                    <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
                        <arguments>
                            <argument value="${HOST}"/>
                        </arguments>
                    </file>
                </script>
                <script type="dynamic">
                    <code language="groovy">
                        <![CDATA[
import groovy.io.FileType
inputFilesFolder = new File(variables.get("FOLDER_TO_MONITOR"));

filesToProcess = new ArrayList();

channelId = variables.get("CHANNEL_TRIGGERED_ID")

selected = false;

pattern = variables.get("FILENAME_PATTERN_TO_MONITOR")

// list files in the watched folder
inputFilesFolder.eachFileRecurse(FileType.FILES, { file->
	key = file.getAbsolutePath()
    if (!synchronizationapi.containsKey(channelId, key) && file.getName() ==~ /${pattern}/) {
		// if key is not there then we spotted a new file
		selected = true;
	}
})

]]>
                    </code>
                </script>
            </selection>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
import groovy.io.FileType

inputFilesFolder = new File(variables.get("FOLDER_TO_MONITOR"))

schedulerapi.connect()

channelId = variables.get("CHANNEL_TRIGGERED_ID")

pattern = variables.get("FILENAME_PATTERN_TO_MONITOR")


// list files in the watched folder
inputFilesFolder.eachFileRecurse(FileType.FILES, { file->
	key = file.getAbsolutePath()
	value = true // we no need value, so it is always true
	previousValue = synchronizationapi.putIfAbsent(channelId, key, value)
    if (previousValue == null && file.getName() ==~ /${pattern}/) {

		// then we found new file which was apparently added

        // Submit a workflow referenced in the ProActive Catalog (or accessible by url)
        // Please add the bucket and workflow names that you want to execute as Task Variables 'CALLED_WORKFLOW'

        // get the workflow information from Task Variables, e.g. 'basic-examples/Native_Task'
		calledWorkflow = variables.get("CALLED_WORKFLOW")

		// variables submitted to the workflow: Empty in the example, modify this map to give parameters to the submitted workflow
        workflow_variables = ["file" : key]
		def generic_infos_map = ["PARENT_JOB_ID" : variables.get("PA_JOB_ID")]

        println "Submitting workflow " + calledWorkflow
      	// submitting the job

		jobid = schedulerapi.submitFromCatalog(variables.get("PA_CATALOG_REST_URL"), calledWorkflow, workflow_variables, generic_infos_map)

		println "Job submitted with job id " + jobid

	}
})

schedulerapi.disconnect()

]]>
                    </code>
                </script>
            </scriptExecutable>
            <controlFlow >
                <loop target="FileTrigger">
                    <script>
                        <code language="groovy">
                            <![CDATA[
loop = true
]]>
                        </code>
                    </script>
                </loop>
            </controlFlow>
            <metadata>
                <positionTop>
                    304.26666259765625
                </positionTop>
                <positionLeft>
                    223.08331298828125
                </positionLeft>
            </metadata>
        </task>
    </taskFlow>
    <metadata>
        <visualization>
            <![CDATA[ <html><head><link rel="stylesheet" href="/studio/styles/studio-standalone.css"><style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2602px;
            height:3035px;
            }
        </style></head><body><div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-180.61666870117188px;left:-218.08331298828125px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" style="top: 185.617px; left: 224.4px;" id="jsPlumb_1_16"><a class="task-name"><img src="images/Groovy.png" width="20px">&nbsp;<span class="name">Init</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" style="top: 304.267px; left: 223.083px;" id="jsPlumb_1_19"><a class="task-name"><img src="images/Groovy.png" width="20px">&nbsp;<span class="name">FileTrigger</span></a></div><svg style="position:absolute;left:262.5px;top:225.5px" width="22" height="79" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 78 C -10 28 11 50 1 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.6731519999999995,58.93977600000001 L5.032726787973348,39.20099609583515 L-2.175945697050375,44.94860786105224 L-8.958441350974422,38.70378979288553 L-2.6731519999999995,58.93977600000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.6731519999999995,58.93977600000001 L5.032726787973348,39.20099609583515 L-2.175945697050375,44.94860786105224 L-8.958441350974422,38.70378979288553 L-2.6731519999999995,58.93977600000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:303.0266769263776px;top:253.5px" width="20.473323073622403" height="141" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 40 C -10 90 -10 -50 0 0 " transform="translate(19.973323073622403,50.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path></svg><div style="position: absolute; transform: translate(-50%, -50%); left: 315px; top: 323.5px;" class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_30">loop</div><div style="position: absolute; height: 20px; width: 20px; left: 264px; top: 216px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 263px; top: 334px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 263px; top: 294px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 313px; top: 294px;" class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 313px; top: 334px;" class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div></div></div></body></html>
 ]]>
        </visualization>
    </metadata>
</job>