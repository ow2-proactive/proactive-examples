<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Pipeline_File_Trigger" tags="Triggers,File" projectName="03. File Watcher - Pipeline Example"  priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="HOST_TO_MONITOR" value="server_host_name" model="PA:NOT_EMPTY_STRING" description="Hostname of the server where the File Event Trigger will be activated"  advanced="false" hidden="false"/>
    <variable name="WATCHED_FOLDER_PATH" value="/folder/path/" model="PA:REGEXP(^$|^.+/$)" description="The path of the folder on the given HOST to be monitored for the presence of new files"  advanced="false" hidden="false"/>
    <variable name="POLL_TIME" value="1" model="PA:INTEGER" description="The time window (minutes) between two checking for the presence of new files arrival"  advanced="false" hidden="false"/>
    <variable name="CALLED_WORKFLOW" value="triggers/Pipeline_Action" model="PA:CATALOG_OBJECT" description="Path of workflow to submit from the ProActive Catalog"  advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ A workflow that monitor a specific directory, located on a given host, for the arrival of new files. This workflow, upon the arrival of any file, will trigger a follow-up process such as archiving the arrived file or launching another workflow. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="triggers"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/File_Listening.png"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Pipeline_File_Event_Trigger_Task"




    fork="true">
      <description>
        <![CDATA[ The simplest task, ran by a Python engine. ]]>
      </description>
      <genericInformation>
          <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/File_Listening.png"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
            <arguments>
              <argument value="${HOST_TO_MONITOR}"/>
            </arguments>
          </file>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="python">
            <![CDATA[
from os import listdir
from os.path import isfile, join
import time

host = variables.get('HOST_TO_MONITOR')
watchedRepository = variables.get('WATCHED_FOLDER_PATH')
calledWorkflow = variables.get('CALLED_WORKFLOW')

#function to return files in a directory
def fileInDirectory(my_dir):
    onlyfiles = [f for f in listdir(my_dir) if isfile(join(my_dir, f))]
    return(onlyfiles)

#function comparing two lists
def listComparison(OriginalList, NewList):
    differencesList = [x for x in NewList if x not in OriginalList] #Note if files get deleted, this will not highlight them
    return(differencesList)

def followupProcess(newFiles):
    # Get schedulerapi access
    schedulerapi.connect()
    for file in newFiles:
        workflow_variables = {'HOST_TO_MONITOR': host, 'WATCHED_FOLDER_PATH': watchedRepository, 'FILE_TO_PROCESS': file}
        print('Submitting the workflow', calledWorkflow, ' to process the file ', file)
        generic_infos_map = {"PARENT_JOB_ID" : variables.get("PA_JOB_ID")}
        #submitting the job
        schedulerapi.submitFromCatalog(variables.get("PA_CATALOG_REST_URL"), calledWorkflow, workflow_variables, generic_infos_map)

def fileWatcher(watchedRepository):
    if variables.get('previousFileList') is None: #Check if this is the first time the function has run
        previousFileList = []
        variables.put('previousFileList', previousFileList)

    previousFileList = variables.get('previousFileList')
    newFileList = fileInDirectory(watchedRepository)
    fileDiff = listComparison(previousFileList, newFileList)
    variables.put('previousFileList', newFileList)
    if len(fileDiff) != 0:
        followupProcess(fileDiff)
    else:
        print("Polling the folder ", watchedRepository, ' for new file(s) arrival')

fileWatcher(watchedRepository)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <loop target="Pipeline_File_Event_Trigger_Task">
          <script>
            <code language="groovy">
              <![CDATA[
pollTime = variables.get("POLL_TIME")
loop = '*/' + pollTime + ' * * * *'
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            238.45703125
        </positionTop>
        <positionLeft>
            220.341796875
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2686px;
            height:3577px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-233.45703125px;left:-215.341796875px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_84" style="top: 238.467px; left: 220.342px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Python engine."><img src="/studio/images/Python.png" width="20px">&nbsp;<span class="name">Pipeline_File_Event_Trigger_Task</span></a></div><svg style="position:absolute;left:386.0266769263776px;top:187.5px" width="20.473323073622403" height="141" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C -10 90 -10 -50 0 0 " transform="translate(19.973323073622403,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_92" style="position: absolute; transform: translate(-50%, -50%); left: 398px; top: 257.5px;">loop</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 303px; top: 268px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 396px; top: 228px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 396px; top: 268px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>