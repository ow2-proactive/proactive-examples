<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.10"
     xsi:schemaLocation="urn:proactive:jobdescriptor:3.10 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.10/schedulerjob.xsd"
    name="CriticalSectionWithSelectionScripts"
    projectName="3. Synchronization Examples"
    priority="normal"
    onTaskError="continueJobExecution"
     maxNumberOfExecution="2"
>
  <variables>
    <variable name="NB_SLOTS" value="2" model="PA:INTEGER"/>
    <variable name="NB_TASKS" value="5" model="PA:INTEGER"/>
  </variables>
  <description>
    <![CDATA[ In this example usage of the Synchronization API, a configurable number of tasks can only acquire a limited number of slots. Synchronization is made with selection scripts. ]]>
  </description>
  <genericInformation>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_wait_for_any_replicate.png"/>
  </genericInformation>
  <taskFlow>
    <task name="Init">
      <description>
        <![CDATA[ Create a channel ]]>
      </description>
      <genericInformation>
        <info name="TASK.ICON" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_wait_for_any_replicate.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
jobid = variables.get("PA_JOB_ID")
synchronizationapi.createChannel(jobid, false)
// create a reserved_slots binding containing a hash set
synchronizationapi.put(jobid, "reserved_slots", new java.util.HashSet())
println "Channel " + jobid + " created."
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <replicate>
          <script>
            <code language="groovy">
              <![CDATA[
runs=Integer.parseInt(variables.get("NB_TASKS"))
]]>
            </code>
          </script>
        </replicate>
      </controlFlow>
    </task>
    <task name="Section">
      <description>
        <![CDATA[ This task will be replicated according to the 'runs' value specified in
				the replication script.
				The replication index is used in each task's instance to select the
				input. ]]>
      </description>
      <genericInformation>
        <info name="TASK.ICON" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_wait_for_any_replicate.png"/>
      </genericInformation>
      <depends>
        <task ref="Init"/>
      </depends>
      <selection>
        <script
         type="dynamic" >
          <code language="groovy">
            <![CDATA[
jobid = variables.get("PA_JOB_ID")
slots=Integer.parseInt(variables.get("NB_SLOTS"))
taskid = variables.get("PA_TASK_ID")

// node is selected if there are slots available, and if it is the first node selected to execute the task
// when the node is selected, add to the reserved_slots set the current task id (no other node will be selected for the same task)
// return the modified set to avoid remapping to null
answer = synchronizationapi.conditionalCompute(jobid, "reserved_slots", "{k, x -> x.size() < " + slots + " && !x.contains( " + taskid + ") }", "{ k, x -> x.add(" + taskid + "); x}")

selected = answer.isTrue()
]]>
          </code>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println "Enter critical section"
Thread.sleep(10000)
]]>
          </code>
        </script>
      </scriptExecutable>
      <cleaning>
        <script>
          <code language="groovy">
            <![CDATA[
jobid = variables.get("PA_JOB_ID")
taskid = variables.get("PA_TASK_ID")
println "Release slot"
// Remove from the reserved_slots set the current task id, return the set to avoid remapping to null
synchronizationapi.compute(jobid,"reserved_slots", "{ k, x -> x.remove( " + taskid + "); x}")
]]>
          </code>
        </script>
      </cleaning>
    </task>
    <task name="Clean">
      <description>
        <![CDATA[ Delete a channel ]]>
      </description>
      <genericInformation>
        <info name="TASK.ICON" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_wait_for_any_replicate.png"/>
      </genericInformation>
      <depends>
        <task ref="Section"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
jobid = variables.get("PA_JOB_ID")
synchronizationapi.deleteChannel(jobid )
println "Channel " + jobid + " deleted."
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
  </taskFlow>
</job>