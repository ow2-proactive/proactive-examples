<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.13" xsi:schemaLocation="urn:proactive:jobdescriptor:3.13 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.13/schedulerjob.xsd"  name="Search_Train_Image_Classification" projectName="4. Training Pytorch Workflows" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="CONTAINER_PLATFORM" value="docker" model="PA:LIST(no-container,docker,podman,singularity)" description="Container platform used for executing the workflow tasks." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="CONTAINER_GPU_ENABLED" value="True" model="PA:Boolean" description="If True, it will activate the use of GPU for the workflow tasks on the selected container platform." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="CONTAINER_IMAGE" value="" model="PA:LIST(,docker://activeeon/dlm3,docker://activeeon/cuda,docker://activeeon/cuda2,docker://activeeon/nvidia:pytorch)" description="Name of the container image being used to run the workflow tasks." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="DATA_FOLDER" value="rocket_vs_plane" description="Folder path where the data should be downloaded from." group="Dataset Parameters" advanced="false" hidden="false"/>
    <variable name="SEARCH_TERM1" value="plane" model="" description="Keyword to be used to query into the search engine." group="Dataset Parameters" advanced="false" hidden="false"/>
    <variable name="QUERY_SIZE" value="11" model="PA:Integer[1,1000]" description="Maximum number of search results for a single query (maximum of 34 per request for Bing navigator)." group="Dataset Parameters" advanced="false" hidden="false"/>
    <variable name="SEARCH_ENGINE" value="DuckDuckGo" model="PA:LIST(Bing, DuckDuckGo)" description="Source engine to query and download images." group="Dataset Parameters" advanced="false" hidden="false"/>
    <variable name="SEARCH_TERM2" value="rocket" model="" description="Keyword to be used to query into the search engine." group="Dataset Parameters" advanced="false" hidden="false"/>
    <variable name="WORK_DIR" value="." description="Working directory for the data space used to transfer files automatically between the workflow tasks." advanced="false" hidden="true"/>
  </variables>
  <description>
    <![CDATA[ Query images from a search engine (Bing or DuckDuckGo) and train a model to classify them. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="ai-deep-learning-workflows"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/pytorch-logo-dark.png"/>
    <info name="Documentation" value="PML/PMLUserGuide.html#_training_custom_ai_workflows_pytorch_library"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Import_Image_Dataset" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Load and return an image dataset. ]]>
      </description>
      <variables>
        <variable name="DATA_PATH" value="rocket_vs_plane" inherited="true"     />
        <variable name="TRAIN_SPLIT" value="0.60" inherited="false"  description="Float between 0.0 and 1.0 representing the ratio of data to be used for the model training." group="" advanced="false" hidden="false"/>
        <variable name="VAL_SPLIT" value="0.15" inherited="false"  description="Float between 0.0 and 1.0 representing the ratio of data to be used for the model validation." group="" advanced="false" hidden="false"/>
        <variable name="TEST_SPLIT" value="0.25" inherited="false"  description="Float between 0.0 and 1.0 representing the ratio of data to be used for the model testing." group="" advanced="false" hidden="false"/>
        <variable name="DATASET_TYPE" value="Classification" inherited="false" model="PA:LIST(Classification, Detection, Segmentation)" description="Dataset type to be imported. Check the documentation for more information about the organization of your dataset folders and files according to each dataset type." group="" advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/import_image.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_import_image_dataset"/>
      </genericInformation>
      <depends>
        <task ref="Search_Image_Dataset"/>
        <task ref="Search_Image_Dataset2"/>
      </depends>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-deep-learning/resources/Import_Image_Dataset_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <outputFiles>
        <files  includes="$DATASET_PATH/**" accessMode="transferToGlobalSpace"/>
      </outputFiles>
      <metadata>
        <positionTop>
            201.38021850585938
        </positionTop>
        <positionLeft>
            243.984375
        </positionLeft>
      </metadata>
    </task>
    <task name="Search_Image_Dataset" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Search image from Bing or DuckDuckGo engine and return an image dataset. ]]>
      </description>
      <variables>
        <variable name="DATA_FOLDER" value="rocket_vs_plane" inherited="true"  description="Folder path where the data should be downloaded from."  advanced="false" hidden="false"/>
        <variable name="SEARCH_TERM" value="$SEARCH_TERM1" inherited="false"  description="Keyword used to query into the search engine." group="" advanced="false" hidden="false"/>
        <variable name="QUERY_SIZE" value="$QUERY_SIZE" inherited="true"  description="Maximum number of search results for a single query (maximum of 34 per request for Bing navigator)." group="" advanced="false" hidden="false"/>
        <variable name="IMG_SIZE" value="(200, 200)" inherited="false"  description="Source engine to query and download images."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/search_image_dataset.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_search_image_dataset"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-deep-learning/resources/Search_Image_Dataset_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <outputFiles>
        <files  includes="$DATA_FOLDER/**" accessMode="transferToGlobalSpace"/>
      </outputFiles>
      <metadata>
        <positionTop>
            86.37153625488281
        </positionTop>
        <positionLeft>
            138.9930419921875
        </positionLeft>
      </metadata>
    </task>
    <task name="Search_Image_Dataset2" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Search image from Bing or DuckDuckGo engine and return an image dataset. ]]>
      </description>
      <variables>
        <variable name="DATA_FOLDER" value="rocket_vs_plane" inherited="true"  description="Folder path where the data should be downloaded from."  advanced="false" hidden="false"/>
        <variable name="SEARCH_TERM" value="$SEARCH_TERM2" inherited="false"  description="Keyword used to query into the search engine." group="" advanced="false" hidden="false"/>
        <variable name="QUERY_SIZE" value="$QUERY_SIZE" inherited="true"  description="Maximum number of search results for a single query (maximum of 34 per request for Bing navigator)." group="" advanced="false" hidden="false"/>
        <variable name="IMG_SIZE" value="(200, 200)" inherited="false"  description="Source engine to query and download images."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/search_image_dataset.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_search_image_dataset"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-deep-learning/resources/Search_Image_Dataset_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <outputFiles>
        <files  includes="$DATA_FOLDER/**" accessMode="transferToGlobalSpace"/>
      </outputFiles>
      <metadata>
        <positionTop>
            85.3819580078125
        </positionTop>
        <positionLeft>
            365
        </positionLeft>
      </metadata>
    </task>
    <task name="ResNet_18" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ ResNet-18 is a deep convolutional neural network, trained on 1.28 million ImageNet training images, coming from 1000 classes. ]]>
      </description>
      <variables>
        <variable name="USE_PRETRAINED_MODEL" value="True" inherited="false" model="PA:Boolean" description="If True, the pre-trained model with the corresponding number of layers is loaded and used for training. Otherwise, the network is trained from scratch."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/deep_learning.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_resnet_18"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-deep-learning/resources/ResNet_18_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            202.58682250976562
        </positionTop>
        <positionLeft>
            439.9739990234375
        </positionLeft>
      </metadata>
    </task>
    <task name="Train_Image_Classification_Model" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Train a model using an image classification network. ]]>
      </description>
      <variables>
        <variable name="NUM_EPOCHS" value="1" inherited="false"  description="Hyperparameter that defines the number of times that the learning algorithm will work through the entire training dataset to update weights."  advanced="false" hidden="false"/>
        <variable name="BATCH_SIZE" value="4" inherited="false"  description="Number of samples that are going to be propagated through the network"  advanced="false" hidden="false"/>
        <variable name="NUM_WORKERS" value="2" inherited="false"  description="Number of subprocesses to use for data loading. 0 means that the data will be loaded in the main process."  advanced="false" hidden="false"/>
        <variable name="SHUFFLE" value="True" inherited="false"  description="If True, the data will be reshuffled at every epoch."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/deep_train.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_train_image_classification_model"/>
      </genericInformation>
      <depends>
        <task ref="Import_Image_Dataset"/>
        <task ref="ResNet_18"/>
      </depends>
      <inputFiles>
        <files  includes="$DATASET_PATH/**" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-deep-learning/resources/Train_Image_Classification_Model_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <post>
        <script>
          <code language="bash">
            <![CDATA[

]]>
          </code>
        </script>
      </post>
      <outputFiles>
        <files  includes="$MODEL_FOLDER/**" accessMode="transferToGlobalSpace"/>
      </outputFiles>
      <metadata>
        <positionTop>
            319.123291015625
        </positionTop>
        <positionLeft>
            315.26910400390625
        </positionLeft>
      </metadata>
    </task>
    <task name="Predict_Image_Classification_Model" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Predict a model using an image classification network. ]]>
      </description>
      <variables>
        <variable name="BATCH_SIZE" value="4" inherited="false"  description="Number of samples that are going to be propagated through the network"  advanced="false" hidden="false"/>
        <variable name="NUM_WORKERS" value="2" inherited="false"  description="Number of subprocesses to use for data loading. 0 means that the data will be loaded in the main process."  advanced="false" hidden="false"/>
        <variable name="SHUFFLE" value="True" inherited="false"  description="If True, the data will be reshuffled at every epoch."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/deep_predict.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_predict_image_classification_model"/>
      </genericInformation>
      <depends>
        <task ref="Train_Image_Classification_Model"/>
      </depends>
      <inputFiles>
        <files  includes="$DATASET_PATH/**" accessMode="transferFromGlobalSpace"/>
        <files  includes="$MODEL_FOLDER/**" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-deep-learning/resources/Predict_Image_Classification_Model_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            446.6146240234375
        </positionTop>
        <positionLeft>
            309.18402099609375
        </positionLeft>
      </metadata>
    </task>
    <task name="Preview_Results" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Preview the results of the predictions generated by the trained model. ]]>
      </description>
      <variables>
        <variable name="OUTPUT_FILE" value="HTML" inherited="false"  description="Converts the prediction results into the specified file type."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/deep_export_results.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_preview_results_2"/>
      </genericInformation>
      <depends>
        <task ref="Predict_Image_Classification_Model"/>
      </depends>
      <inputFiles>
        <files  includes="$DATASET_PATH/**" accessMode="transferFromGlobalSpace"/>
        <files  includes="$OUTPUT_FOLDER/**" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-deep-learning/resources/Preview_Results_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            564.4705200195312
        </positionTop>
        <positionLeft>
            345.96356201171875
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2386px;
            height:2885px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-80.3819580078125px;left:-133.9930419921875px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_924" style="top: 201.388px; left: 243.985px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Load and return an image dataset."><img src="/automation-dashboard/styles/patterns/img/wf-icons/import_image.png" width="20px">&nbsp;<span class="name">Import_Image_Dataset</span></a></div><div class="task ui-draggable" id="jsPlumb_1_927" style="top: 86.3797px; left: 138.993px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Search image from Bing or DuckDuckGo engine and return an image dataset."><img src="/automation-dashboard/styles/patterns/img/wf-icons/search_image_dataset.png" width="20px">&nbsp;<span class="name">Search_Image_Dataset</span></a></div><div class="task ui-draggable" id="jsPlumb_1_930" style="top: 85.3901px; left: 365px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Search image from Bing or DuckDuckGo engine and return an image dataset."><img src="/automation-dashboard/styles/patterns/img/wf-icons/search_image_dataset.png" width="20px">&nbsp;<span class="name">Search_Image_Dataset2</span></a></div><div class="task ui-draggable" id="jsPlumb_1_933" style="top: 202.595px; left: 439.974px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="ResNet-18 is a deep convolutional neural network, trained on 1.28 million ImageNet training images, coming from 1000 classes."><img src="/automation-dashboard/styles/patterns/img/wf-icons/deep_learning.png" width="20px">&nbsp;<span class="name">ResNet_18</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_936" style="top: 319.131px; left: 315.269px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Train a model using an image classification network."><img src="/automation-dashboard/styles/patterns/img/wf-icons/deep_train.png" width="20px">&nbsp;<span class="name">Train_Image_Classification_Model</span></a></div><div class="task ui-draggable" id="jsPlumb_1_939" style="top: 446.623px; left: 309.184px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Predict a model using an image classification network."><img src="/automation-dashboard/styles/patterns/img/wf-icons/deep_predict.png" width="20px">&nbsp;<span class="name">Predict_Image_Classification_Model</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_942" style="top: 564.476px; left: 345.971px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Preview the results of the predictions generated by the trained model."><img src="/automation-dashboard/styles/patterns/img/wf-icons/deep_export_results.png" width="20px">&nbsp;<span class="name">Preview_Results</span></a></div><svg style="position:absolute;left:198.5px;top:125.5px" width="124.5" height="76" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 103.5 75 C 113.5 25 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M93.01598437500002,50.93203125 L78.33081986861436,35.65636617706812 L80.52408851991025,44.61122924822911 L72.01001786684347,48.14826203215789 L93.01598437500002,50.93203125" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M93.01598437500002,50.93203125 L78.33081986861436,35.65636617706812 L80.52408851991025,44.61122924822911 L72.01001786684347,48.14826203215789 L93.01598437500002,50.93203125" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:302px;top:125.5px" width="146.5" height="76" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 75 C -10 25 135.5 50 125.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M14.676343374999998,50.228943750000006 L35.84010323257135,49.18239289550147 L27.645810582971315,44.95704462906107 L30.568204111632415,36.21292568753015 L14.676343374999998,50.228943750000006" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M14.676343374999998,50.228943750000006 L35.84010323257135,49.18239289550147 L27.645810582971315,44.95704462906107 L30.568204111632415,36.21292568753015 L14.676343374999998,50.228943750000006" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:302px;top:240.5px" width="117.5" height="79" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 96.5 78 C 106.5 28 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M86.919640625,53.54475000000001 L73.02276174712097,37.548601793210985 L74.76207133753574,46.60259550586018 L66.08060725298114,49.70617108067524 L86.919640625,53.54475000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M86.919640625,53.54475000000001 L73.02276174712097,37.548601793210985 L74.76207133753574,46.60259550586018 L66.08060725298114,49.70617108067524 L86.919640625,53.54475000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:398.5px;top:242.5px" width="102" height="77" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 76 C -10 26 91 50 81 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M6.329357999999997,52.919572 L26.779823984692126,47.37173990007574 L17.87154715349937,44.99632332632824 L18.856575311020354,35.82955074657636 L6.329357999999997,52.919572" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M6.329357999999997,52.919572 L26.779823984692126,47.37173990007574 L17.87154715349937,44.99632332632824 L18.856575311020354,35.82955074657636 L6.329357999999997,52.919572" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:397px;top:358.5px" width="22.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 11.5 50 1.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.6935781249999997,66.78168750000002 L5.255142286972582,47.139441095571364 L-2.0238641657164482,52.79771513115072 L-8.72883008187672,46.46972713628781 L-2.6935781249999997,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.6935781249999997,66.78168750000002 L5.255142286972582,47.139441095571364 L-2.0238641657164482,52.79771513115072 L-8.72883008187672,46.46972713628781 L-2.6935781249999997,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 302.5px; top: 231px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 302.5px; top: 191px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 199px; top: 116px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 428px; top: 116px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 480px; top: 233px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 399px; top: 349px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 399px; top: 309px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable endpointDrag _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 397.5px; top: 477px; visibility: visible;" dragid="jsPlumb_1_957" elid="jsPlumb_1_939"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 397.5px; top: 437px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 392px; top: 594px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><svg style="position:absolute;left:391.5px;top:486.5px" width="26.5" height="78" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 77 C -10 27 15.5 50 5.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.364416,58.00838400000001 L6.606469818062051,38.811425708664025 L-0.9600816647963286,44.07899617874354 L-7.3229180031944185,37.407091373460354 L-2.364416,58.00838400000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected connected" style="position: absolute; height: 20px; width: 20px; left: 392px; top: 554px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
