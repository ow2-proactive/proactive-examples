<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.13" xsi:schemaLocation="urn:proactive:jobdescriptor:3.13 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.13/schedulerjob.xsd"  name="Search_Classify_Images" projectName="5. Prediction Pytorch Workflows" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="NATIVE_SCHEDULER" value=""  description="Name of the Native Scheduler node source to use when the workflow tasks must be deployed inside a cluster such as SLURM, LSF, etc." group="Resource Management" advanced="true" hidden="false"/>
    <variable name="NATIVE_SCHEDULER_PARAMS" value=""  description="Parameters given to the native scheduler (SLURM, LSF, etc) while requesting a ProActive node used to deploy the workflow tasks." group="Resource Management" advanced="true" hidden="false"/>
    <variable name="NODE_SOURCE_NAME" value=""  description="If not empty, the workflow tasks will be run only on nodes belonging to the specified node source." group="Resource Management" advanced="true" hidden="false"/>
    <variable name="NODE_ACCESS_TOKEN" value=""  description="If not empty, the workflow tasks will be run only on nodes that contains the specified token." group="Resource Management" advanced="true" hidden="false"/>
    <variable name="CONTAINER_PLATFORM" value="docker" model="PA:LIST(no-container,docker,podman,singularity)" description="Container platform used for executing the workflow tasks." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="CONTAINER_GPU_ENABLED" value="True" model="PA:Boolean" description="If True, it will activate the use of GPU for the workflow tasks on the selected container platform." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="CONTAINER_IMAGE" value="" model="PA:LIST(,docker://activeeon/dlm3,docker://activeeon/cuda,docker://activeeon/cuda2,docker://activeeon/nvidia:pytorch)" description="Name of the container image being used to run the workflow tasks." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="DATA_FOLDER" value="rocket_vs_plane"  description="Folder path where the data should be downloaded from." group="Dataset Parameters" advanced="false" hidden="false"/>
    <variable name="SEARCH_TERM1" value="plane" model="" description="Keyword to be used to query into the search engine." group="Dataset Parameters" advanced="false" hidden="false"/>
    <variable name="QUERY_SIZE" model="PA:Integer[1,1000]" value="11"  description="Maximum number of search results for a single query (maximum of 34 per request for Bing navigator)." group="Dataset Parameters" advanced="false" hidden="false"/>
    <variable name="SEARCH_ENGINE" value="DuckDuckGo" model="PA:LIST(Bing, DuckDuckGo)" description="Source engine to query and download images." group="Dataset Parameters" advanced="false" hidden="false"/>
    <variable name="WORK_DIR" value="."  description="Working directory for the data space used to transfer files automatically between the workflow tasks."  advanced="false" hidden="true"/>
    <variable name="SEARCH_TERM2" value="rocket" model="" description="Keyword to be used to query into the search engine." group="Dataset Parameters" advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ Search and classify rocket and plane images. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="deep-learning-workflows"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/pytorch-logo-dark.png"/>
    <info name="PYTHON_COMMAND" value="python3"/>
    <info name="NS" value="$NATIVE_SCHEDULER"/>
    <info name="NODE_ACCESS_TOKEN" value="$NODE_ACCESS_TOKEN"/>
    <info name="Documentation" value="PML/PMLUserGuide.html#_prediction_custom_ai_workflows_pytorch_library"/>
    <info name="NS_BATCH" value="$NATIVE_SCHEDULER_PARAMS"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Import_Image_Dataset" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Load and return an image dataset. ]]>
      </description>
      <variables>
        <variable name="DATA_PATH" value="rocket_vs_plane" inherited="true"  description="Path or name of the file that contains the image dataset." group="" advanced="false" hidden="false"/>
        <variable name="TRAIN_SPLIT" value="0.15" inherited="false"  description="Float between 0.0 and 1.0 representing the ratio of data to be used for the model training." group="" advanced="false" hidden="false"/>
        <variable name="VAL_SPLIT" value="0.15" inherited="false"  description="Float between 0.0 and 1.0 representing the ratio of data to be used for the model validation." group="" advanced="false" hidden="false"/>
        <variable name="TEST_SPLIT" value="0.70" inherited="false"  description="Float between 0.0 and 1.0 representing the ratio of data to be used for the model testing." group="" advanced="false" hidden="false"/>
        <variable name="DATASET_TYPE" value="Classification" inherited="false" model="PA:LIST(Classification, Detection, Segmentation)" description="Dataset type to be imported. Check the documentation for more information about the organization of your dataset folders and files according to each dataset type." group="" advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/import_image.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_import_image_dataset"/>
      </genericInformation>
      <depends>
        <task ref="Search_Image_Dataset"/>
        <task ref="Search_Image_Dataset2"/>
      </depends>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/deep-learning/resources/Import_Image_Dataset_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <outputFiles>
        <files  includes="$DATASET_PATH/**" accessMode="transferToGlobalSpace"/>
      </outputFiles>
      <metadata>
        <positionTop>
            301.5972442626953
        </positionTop>
        <positionLeft>
            277.69964599609375
        </positionLeft>
      </metadata>
    </task>
    <task name="Search_Image_Dataset" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Search image from Bing or DuckDuckGo engine and return an image dataset. ]]>
      </description>
      <variables>
        <variable name="DATA_FOLDER" value="rocket_vs_plane" inherited="true"  description="Folder path where the data should be downloaded from."  advanced="false" hidden="false"/>
        <variable name="SEARCH_TERM" value="$SEARCH_TERM1" inherited="true"  description="Keyword used to query into the search engine." group="" advanced="false" hidden="false"/>
        <variable name="QUERY_SIZE" value="11" inherited="true"  description="Maximum number of search results for a single query (maximum of 34 per request for Bing navigator)."  advanced="false" hidden="false"/>
        <variable name="IMG_SIZE" value="(200, 200)" inherited="false"  description="Source engine to query and download images."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/search_image_dataset.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_search_image_dataset"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/deep-learning/resources/Search_Image_Dataset_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <outputFiles>
        <files  includes="$DATA_FOLDER/**" accessMode="transferToGlobalSpace"/>
      </outputFiles>
      <metadata>
        <positionTop>
            176.9010467529297
        </positionTop>
        <positionLeft>
            165.97222900390625
        </positionLeft>
      </metadata>
    </task>
    <task name="Search_Image_Dataset2" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Search image from Bing or DuckDuckGo engine and return an image dataset. ]]>
      </description>
      <variables>
        <variable name="DATA_FOLDER" value="rocket_vs_plane" inherited="true"  description="Folder path where the data should be downloaded from."  advanced="false" hidden="false"/>
        <variable name="SEARCH_TERM" value="$SEARCH_TERM2" inherited="true"  description="Keyword used to query into the search engine." group="" advanced="false" hidden="false"/>
        <variable name="QUERY_SIZE" value="11" inherited="true"  description="Maximum number of search results for a single query (maximum of 34 per request for Bing navigator)."  advanced="false" hidden="false"/>
        <variable name="IMG_SIZE" value="(200, 200)" inherited="false"  description="Source engine to query and download images."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/search_image_dataset.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_search_image_dataset"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/deep-learning/resources/Search_Image_Dataset_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <outputFiles>
        <files  includes="$DATA_FOLDER/**" accessMode="transferToGlobalSpace"/>
      </outputFiles>
      <metadata>
        <positionTop>
            177.9080047607422
        </positionTop>
        <positionLeft>
            359.97393798828125
        </positionLeft>
      </metadata>
    </task>
    <task name="Import_Model" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Import a trained model by a deep learning algorithm. ]]>
      </description>
      <variables>
        <variable name="MODEL_URL" value="https://activeeon-public.s3.eu-west-2.amazonaws.com/models/search_image_model.zip" inherited="false"  description="Valid URL specified by the user referencing the model that needs to be deployed." group="" advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/import_deep_model.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_import_model_2"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/deep-learning/resources/Import_Model_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <outputFiles>
        <files  includes="$MODEL_FOLDER/**" accessMode="transferToGlobalSpace"/>
      </outputFiles>
      <metadata>
        <positionTop>
            293.0902862548828
        </positionTop>
        <positionLeft>
            623.967041015625
        </positionLeft>
      </metadata>
    </task>
    <task name="ResNet_18" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ ResNet-18 is a deep convolutional neural network, trained on 1.28 million ImageNet training images, coming from 1000 classes. ]]>
      </description>
      <variables>
        <variable name="USE_PRETRAINED_MODEL" value="True" inherited="false" model="PA:Boolean" description="If True, the pre-trained model with the corresponding number of layers is loaded and used for training. Otherwise, the network is trained from scratch."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/deep_learning.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_resnet_18"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/deep-learning/resources/ResNet_18_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            298.2465362548828
        </positionTop>
        <positionLeft>
            469.9739990234375
        </positionLeft>
      </metadata>
    </task>
    <task name="Predict_Image_Classification_Model" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Predict a model using an image classification network. ]]>
      </description>
      <variables>
        <variable name="BATCH_SIZE" value="4" inherited="false"  description="Number of samples that are going to be propagated through the network"  advanced="false" hidden="false"/>
        <variable name="NUM_WORKERS" value="2" inherited="false"  description="Number of subprocesses to use for data loading. 0 means that the data will be loaded in the main process."  advanced="false" hidden="false"/>
        <variable name="SHUFFLE" value="True" inherited="false"  description="If True, the data will be reshuffled at every epoch."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/deep_predict.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_predict_image_classification_model"/>
      </genericInformation>
      <depends>
        <task ref="Import_Image_Dataset"/>
        <task ref="ResNet_18"/>
        <task ref="Import_Model"/>
      </depends>
      <inputFiles>
        <files  includes="$DATASET_PATH/**" accessMode="transferFromGlobalSpace"/>
        <files  includes="$MODEL_FOLDER/**" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/deep-learning/resources/Predict_Image_Classification_Model_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            420.2691192626953
        </positionTop>
        <positionLeft>
            340.18231201171875
        </positionLeft>
      </metadata>
    </task>
    <task name="Preview_Results" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Preview the results of the predictions generated by the trained model. ]]>
      </description>
      <variables>
        <variable name="OUTPUT_FILE" value="HTML" inherited="false"  description="Converts the prediction results into the specified file type."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/deep_export_results.png"/>
        <info name="task.documentation" value="PML/PMLUserGuide.html#_preview_results_2"/>
      </genericInformation>
      <depends>
        <task ref="Predict_Image_Classification_Model"/>
      </depends>
      <inputFiles>
        <files  includes="$DATASET_PATH/**" accessMode="transferFromGlobalSpace"/>
        <files  includes="$OUTPUT_FOLDER/**" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/deep-learning/resources/Preview_Results_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            523.1336822509766
        </positionTop>
        <positionLeft>
            370.97222900390625
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2386px;
            height:2885px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-171.9010467529297px;left:-160.97222900390625px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2414" style="top: 301.605px; left: 277.7px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Load and return an image dataset."><img src="/automation-dashboard/styles/patterns/img/wf-icons/import_image.png" width="20px">&nbsp;<span class="name">Import_Image_Dataset</span></a></div><div class="task ui-draggable" id="jsPlumb_1_2417" style="top: 176.909px; left: 165.973px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Search image from Bing or DuckDuckGo engine and return an image dataset."><img src="/automation-dashboard/styles/patterns/img/wf-icons/search_image_dataset.png" width="20px">&nbsp;<span class="name">Search_Image_Dataset</span></a></div><div class="task ui-draggable active-task" id="jsPlumb_1_2420" style="top: 177.916px; left: 359.974px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Search image from Bing or DuckDuckGo engine and return an image dataset."><img src="/automation-dashboard/styles/patterns/img/wf-icons/search_image_dataset.png" width="20px">&nbsp;<span class="name">Search_Image_Dataset2</span></a></div><div class="task ui-draggable" id="jsPlumb_1_2423" style="top: 293.098px; left: 623.967px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Import a trained model by a deep learning algorithm."><img src="/automation-dashboard/styles/patterns/img/wf-icons/import_deep_model.png" width="20px">&nbsp;<span class="name">Import_Model</span></a></div><div class="task ui-draggable" id="jsPlumb_1_2426" style="top: 298.255px; left: 469.974px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="ResNet-18 is a deep convolutional neural network, trained on 1.28 million ImageNet training images, coming from 1000 classes."><img src="/automation-dashboard/styles/patterns/img/wf-icons/deep_learning.png" width="20px">&nbsp;<span class="name">ResNet_18</span></a></div><div class="task ui-draggable" id="jsPlumb_1_2429" style="top: 420.277px; left: 340.183px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Predict a model using an image classification network."><img src="/automation-dashboard/styles/patterns/img/wf-icons/deep_predict.png" width="20px">&nbsp;<span class="name">Predict_Image_Classification_Model</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2432" style="top: 523.141px; left: 370.972px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Preview the results of the predictions generated by the trained model."><img src="/automation-dashboard/styles/patterns/img/wf-icons/deep_export_results.png" width="20px">&nbsp;<span class="name">Preview_Results</span></a></div><svg style="position:absolute;left:225px;top:216.5px" width="131.5" height="86" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 110.5 85 C 120.5 35 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M97.919445375,58.83175125 L83.72663892749421,43.09757681523419 L85.63451241306532,52.11755568234107 L77.01244335983529,55.38250977716888 L97.919445375,58.83175125" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M97.919445375,58.83175125 L83.72663892749421,43.09757681523419 L85.63451241306532,52.11755568234107 L77.01244335983529,55.38250977716888 L97.919445375,58.83175125" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:335.5px;top:217.5px" width="107.5" height="85" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 84 C -10 34 96.5 50 86.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M7.8348159999999964,59.177664 L28.191204345506303,53.2940041248088 L19.245038870763977,51.06552408259876 L20.079064428105067,41.88378125404481 L7.8348159999999964,59.177664" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M7.8348159999999964,59.177664 L28.191204345506303,53.2940041248088 L19.245038870763977,51.06552408259876 L20.079064428105067,41.88378125404481 L7.8348159999999964,59.177664" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:335.5px;top:341.5px" width="113.5" height="79" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 92.5 78 C 102.5 28 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M83.92176,53.921088 L70.4273334260692,37.583999782058896 L71.94074867247471,46.67848021207508 L63.18472563814427,49.56501110958419 L83.92176,53.921088" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M83.92176,53.921088 L70.4273334260692,37.583999782058896 L71.94074867247471,46.67848021207508 L63.18472563814427,49.56501110958419 L83.92176,53.921088" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:428px;top:337.5px" width="102.5" height="83" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 82 C -10 32 91.5 50 81.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M6.796004874999996,57.828281000000004 L27.03323992099566,51.547013795595724 L18.045139901385667,49.49419669768202 L18.699155618677676,40.29787876921005 L6.796004874999996,57.828281000000004" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M6.796004874999996,57.828281000000004 L27.03323992099566,51.547013795595724 L18.045139901385667,49.49419669768202 L18.699155618677676,40.29787876921005 L6.796004874999996,57.828281000000004" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:428px;top:332.5px" width="256.5" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 87 C -10 37 245.5 50 235.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M38.10250162500001,58.17771225 L59.204580629597054,60.10183846304959 L51.68189247169496,54.77181380279148 L55.79868218238854,46.52244761635464 L38.10250162500001,58.17771225" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M38.10250162500001,58.17771225 L59.204580629597054,60.10183846304959 L51.68189247169496,54.77181380279148 L55.79868218238854,46.52244761635464 L38.10250162500001,58.17771225" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 336px; top: 332px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 336px; top: 292px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 225.5px; top: 207px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 422.5px; top: 208px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 664px; top: 323px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 510px; top: 328px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable endpointDrag _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 428.5px; top: 450px; visibility: visible;" dragid="jsPlumb_1_2445" elid="jsPlumb_1_2429"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 428.5px; top: 410px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 417px; top: 553px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><svg style="position:absolute;left:416.5px;top:459.5px" width="32.5" height="64" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 63 C -10 13 21.5 50 11.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.9875520000000002,46.638144000000004 L8.767323762228367,28.380744203231767 L0.7343634417386544,32.90529373765371 L-4.965526500117926,25.658828761493115 L-1.9875520000000002,46.638144000000004" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected connected" style="position: absolute; height: 20px; width: 20px; left: 417px; top: 513px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
