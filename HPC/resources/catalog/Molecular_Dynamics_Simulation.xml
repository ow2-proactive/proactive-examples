<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Molecular_Dynamics_Simulation" projectName="Molecular Dynamics" tags="bioscience,hpc" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="1"  >
  <variables>
    <variable name="MOLECULE_PROCESSING_STEPS" value="hpc-bioscience/Lysozyme_in_Water_Steps_Short" model="PA:CATALOG_OBJECT" description="CSV file that contains the molecule processing steps (i.e., Gromacs commands)" group="Bioscience Molecule Parameters" advanced="false" hidden="false"/>
    <variable name="BIOSCIENCE_WORKSPACE" value="BioScience-Workspace/Lysozyme-in-Water" model="PA:GLOBAL_FOLDER" description="Name of a folder in the Global Dataspace used to store the input/output files of the current experiment" group="Bioscience Molecule Parameters" advanced="false" hidden="false"/>
    <variable name="BIOSCIENCE_EXECUTION_TAG" value="Lysozyme-in-Water-Cubic-Box-${PA_JOB_ID}" model="PA:NOT_EMPTY_STRING" description="Tag used to identify the current experiment" group="Bioscience Molecule Parameters" advanced="false" hidden="false"/>
    <variable name="EMAIL_RECIPIENT" value="usera.bioscience@gmail.com" model="PA:NOT_EMPTY_STRING" description="Recipient Email that will receive notifications about the experiment progress" group="Notification Parameters" advanced="false" hidden="false"/>
    <variable name="NATIVE_SCHEDULER" value=""  description="Name of the native scheduler (if any) that will execute the current experiment" group="Runtime Parameters" advanced="false" hidden="false"/>
    <variable name="NATIVE_SCHEDULER_PARAMS" value=""  description="Parameters to be passed to the native scheduler (if any) that will execute the current experiment" group="Runtime Parameters" advanced="false" hidden="false"/>
    <variable name="CONTAINER_RUNTIME" value="Docker" model="PA:LIST(Docker,Singularity)" description="Container engine used to deploy molecular dynamics applications such as Gromacs and VMD" group="Runtime Parameters" advanced="false" hidden="false"/>
    <variable name="CONTAINER_IMAGE" value="gromacs/gromacs:gmx-2020.3-cuda-10.2" model="PA:LIST(nvcr.io/hpc/gromacs:2021,gromacs/gromacs:gmx-2020.3-cuda-10.2)" description="Container image used to deploy the  Gromacs application" group="Runtime Parameters" advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ This workflow allows bioscientists to transform molecules and run simulations. It performs the following:
(i) Visualize the molecule structure using the viewing program VMD.
(ii) Use Gromacs to carry out the molecule transformations. The resulting files are placed in the user dataspace.
(iii) Send an email and web notifications to the user after each step of the molecule processing. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="hpc-bioscience"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/bioscience.png"/>
    <info name="Documentation" value="http://www.mdtutorials.com/gmx/index.html"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Parse_Molecule_Processing_Steps" maxNumberOfExecution="1"
    
    onTaskError="suspendTask" 
    
    
    fork="true">
      <genericInformation>
        <info name="DISABLE_PTK" value="true"/>
        <info name="PRE_SCRIPT_AS_FILE" value="molecule-processing-steps.csv"/>
      </genericInformation>
      <depends>
        <task ref="Start_Molecule_Processing"/>
      </depends>
      <pre>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/hpc-bioscience/resources/Lysozyme_in_Water_Steps_Short/raw"></file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
@Grab('com.xlson.groovycsv:groovycsv:1.3')
import static com.xlson.groovycsv.CsvParser.parseCsv

variables.put("GROMACS_ERROR","false")

def previousTasks = variables.get("PROCESSED_TASKS")

if(previousTasks == null ){
    previousTasks = new ArrayList()
}
 
def steps = parseCsv(new FileReader('molecule-processing-steps.csv'), separator: ';')
numberOfSteps = steps.size()


def CURRENT_TASK = null  

for(line in parseCsv(new FileReader('molecule-processing-steps.csv'), separator: ';')) {   

    if (!previousTasks.contains("$line.Step_ID".trim())){

            variables.put("CURRENT_STEP_ID" , "$line.Step_ID".trim())
            variables.put("CURRENT_STEP_COMMAND" , "$line.Command".trim())
            variables.put("CURRENT_STEP_OUTPUT_FILES" , "$line.Output_Files".trim())
            variables.put("CURRENT_STEP_NOTIFICATION" , "$line.Notification".trim().toLowerCase())
            variables.put("CURRENT_STEP_ACTION" , "$line.Action".trim().toLowerCase())
            
            CURRENT_TASK= variables.get("CURRENT_STEP_ID") 
            previousTasks.add(CURRENT_TASK)
			variables.put("PROCESSED_TASKS",previousTasks)
            break;
    }    
}

if (CURRENT_TASK == null ||  variables.get("CURRENT_STEP_ACTION")=="cancel"){
    variables.put("STOP_LOOP", true)
} else {
    variables.put("STOP_LOOP", false)
    /*println(variables.get("CURRENT_STEP_ID"))
    println(variables.get("CURRENT_STEP_COMMAND"))
    println(variables.get("CURRENT_STEP_OUTPUT_FILES"))
    println(variables.get("CURRENT_STEP_NOTIFICATION"))
    println(variables.get("CURRENT_STEP_ACTION"))*/
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <metadata>
        <positionTop>
            228
        </positionTop>
        <positionLeft>
            596.25
        </positionLeft>
      </metadata>
    </task>
    <task name="Start_Molecule_Processing" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png"/>
        <info name="Documentation" value="user/ProActiveUserGuide.html#_loop"/>
      </genericInformation>
      <depends>
        <task ref="Start"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[

]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <metadata>
        <positionTop>
            130
        </positionTop>
        <positionLeft>
            712
        </positionLeft>
      </metadata>
    </task>
    <task name="Loop_Over_Molecule_Processing_Steps" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png"/>
      </genericInformation>
      <depends>
        <task ref="Send_Signal"/>
        <task ref="Send_Notifications"/>
      </depends>
      <selection>
        <script type="static">
          <code language="groovy">
            <![CDATA[
/**
 * Script which verifies that the current node runs on the given machine (defined by its hostname)
 *
 * Arguments:
 * machine host name
 */

import com.google.common.base.Strings;

if (args.length != 1) {
    println "Incorrect number of arguments, expected 1, received " + args.length;
    selected = false;
    return;
}

machineName = args[0]

if (Strings.isNullOrEmpty(machineName)) {
    println "Given host name was empty";
    selected = false;
    return;
}

machineName = machineName.trim().toLowerCase()

println "Hostname " + nodehost.toLowerCase() + " (expected :  " + machineName + ")";

selected = (nodehost.toLowerCase() == machineName)
]]>
          </code>
          <arguments>
            <argument value="${BIOSCIENCE_HOST}"/>
          </arguments>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
if [ "$variables_STOP_LOOP" == "true" ]; then
    rm -rf /tmp/$variables_BIOSCIENCE_WORKSPACE
fi
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow  block="end">
        <loop target="Start_Molecule_Processing">
          <script>
            <code language="groovy">
              <![CDATA[
if(!variables.get('STOP_LOOP')) {
    loop = true;
} else {
    loop = false;
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            701
        </positionTop>
        <positionLeft>
            656
        </positionLeft>
      </metadata>
    </task>
    <task name="Send_Signal" 
    
    
    
    
    fork="true">
      <variables>
        <variable name="MESSAGE" value="${CURRENT_STEP_ID} is finished. You can find its result in the  user dataspace in the folder &#x27;${BIOSCIENCE_WORKSPACE}/ ${BIOSCIENCE_EXECUTION_TAG}/${CURRENT_STEP_ID}&#x27;." inherited="false"     />
        <variable name="STOP_VNC_SIGNAL" value="Stop-Remote-Visualization" inherited="false"     />
        <variable name="SIGNAL_TO_CONTINUE" value="Validate ${CURRENT_STEP_ID} and continue" inherited="false"    advanced="false" hidden="false"/>
      </variables>
      <depends>
        <task ref="Check_Errors"/>
      </depends>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
if(!variables.get("STOP_LOOP") && variables.get("CURRENT_STEP_ACTION").equals("pause")){
    // Declare signals
    Set signalsSet = new HashSet<>()
    signalsSet.add("Terminate_Job")
    signalsSet.add(variables.get("SIGNAL_TO_CONTINUE"))
    
    // Send a ready notification for the specified signal
    signalapi.readyForSignal(variables.get("SIGNAL_TO_CONTINUE"))
    signalapi.readyForSignal("Terminate_Job")

    // Wait until the signal is received
    receivedSignal = signalapi.waitForAny(signalsSet)

    // Remove ready signals
	signalapi.removeManySignals(new HashSet<>(signalsSet.collect { signal -> "ready_"+signal }))
    
    println ("Received Signal: "+receivedSignal.getName())
    
    if (receivedSignal.getName().equals("Terminate_Job")){
        variables.put("STOP_LOOP",true)
    }  
} 

if (variables.get("STOP_LOOP")){
    signalapi.sendSignal(variables.get("STOP_VNC_SIGNAL"))
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            600
        </positionTop>
        <positionLeft>
            625
        </positionLeft>
      </metadata>
    </task>
    <task name="Gromacs_Execute_Step" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Execute Gromacs commands ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/gromacs.jpeg"/>
        <info name="DISABLE_PTK" value="true"/>
        <info name="NS" value="${NATIVE_SCHEDULER}"/>
        <info name="NS_BATCH" value="${NATIVE_SCHEDULER_PARAMS}"/>
      </genericInformation>
      <depends>
        <task ref="Parse_Molecule_Processing_Steps"/>
      </depends>
      <inputFiles>
        <files  includes="BioScience-Workspace/Lysozyme-in-Water/**" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <code language="groovy">
            <![CDATA[
/**
 * Script which verifies that the current node runs on the given machine (defined by its hostname)
 *
 * Arguments:
 * machine host name
 */

import com.google.common.base.Strings;

if (args.length != 1) {
    println "Incorrect number of arguments, expected 1, received " + args.length;
    selected = false;
    return;
}

machineName = args[0]

if (Strings.isNullOrEmpty(machineName)) {
    println "Given host name was empty";
    selected = false;
    return;
}

machineName = machineName.trim().toLowerCase()

println "Hostname " + nodehost.toLowerCase() + " (expected :  " + machineName + ")";

selected = (nodehost.toLowerCase() == machineName)
]]>
          </code>
          <arguments>
            <argument value="${BIOSCIENCE_HOST}"/>
          </arguments>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
echo "========================================================================================"

original_workspace=/tmp/$variables_BIOSCIENCE_WORKSPACE
current_execution_workspace=$original_workspace/$variables_BIOSCIENCE_EXECUTION_TAG
    
if [[ "$variables_STOP_LOOP" == "false" && "$variables_CURRENT_STEP_ACTION" == "skip" ]]; then
    echo "Skipping $variables_CURRENT_STEP_ID"
    
elif [ "$variables_STOP_LOOP" == "false" ]; then
    echo "Executing $variables_CURRENT_STEP_ID"

    ### Prepare Docker params for Gromacs
    docker_image=$variables_CONTAINER_IMAGE
    inside_workspace=/$variables_BIOSCIENCE_WORKSPACE
    
    current_step_workspace=$current_execution_workspace/$variables_CURRENT_STEP_ID
    tmp_workspace=$current_step_workspace/temporary
  
    ### Copy original input files
    mkdir -p $current_step_workspace/inputs
    cp -R $variables_BIOSCIENCE_WORKSPACE/inputs/* $current_step_workspace/inputs
    chmod -R ugo+rw $current_execution_workspace

        
    ### Add previous output files    
    if [ -d  $current_execution_workspace ]; then  
        for i in `find $current_execution_workspace -type f -print | grep -i "result/*" | sort` ; do cp $i $current_step_workspace/inputs ; done
    fi
    
 	### Execute Gromacs command and get its status
    mkdir -p $current_step_workspace/temporary
    cp -R $current_step_workspace/inputs/*  $current_step_workspace/temporary
    
    docker run -i --rm --name gromacs-$variables_PA_JOB_ID  -v $current_step_workspace/temporary:$inside_workspace $docker_image sh -c "cd $inside_workspace && $variables_CURRENT_STEP_COMMAND && chmod -R ugo+rw $inside_workspace"
     
    if [ $? -ne 0 ] 
    then 
        echo "GROMACS_ERROR=true" > .variables
    	echo "Error occurred in $variables_CURRENT_STEP_ID. Please check the submitted Gromacs command." && exit 0 
    fi
    
    ### Add execution parameters to be transferred to the user data space
    touch $current_step_workspace/parameters
    echo "Workspace:  $variables_BIOSCIENCE_WORKSPACE" >> $current_step_workspace/parameters
    echo "Executed command:  $variables_CURRENT_STEP_COMMAND" >> $current_step_workspace/parameters
    echo "Email of recipient: $variables_EMAIL_RECIPIENT" >> $current_step_workspace/parameters
    echo "Output folder: $current_step_workspace" >> $current_step_workspace/parameters

    ### Add result files to be transferred to the user data space
    mkdir -p $current_step_workspace/result
    
    IFS=',' read -ra FILES <<< "$variables_CURRENT_STEP_OUTPUT_FILES"
	for i in "${FILES[@]}"; do
    	if [ ! -f  $current_step_workspace/temporary/$i ]; then
        	echo "Error: output file $i is not found."
            exit 1
        else
        	cp $current_step_workspace/temporary/$i $current_step_workspace/result
    	fi        
	done
        
    rm -R $current_step_workspace/temporary/
    
    cp -R $original_workspace/* $variables_BIOSCIENCE_WORKSPACE
    
    echo "Step $variables_CURRENT_STEP_ID is accomplished"
    
fi
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
def varFile=new File(localspace, ".variables")
if (varFile.exists()){
    varFile.eachLine { line ->
        keyvalue = line.split("\\s*=\\s*")
        if (keyvalue.length == 2) {
            variables.put(keyvalue[0], keyvalue[1])
        }
    }
    if ("true"==variables.get("GROMACS_ERROR")){
        previousTasks = variables.get("PROCESSED_TASKS")
        previousTasks.remove(variables.get("CURRENT_STEP_ID"))
        variables.put("PROCESSED_TASKS", previousTasks)
    }
}
]]>
          </code>
        </script>
      </post>
      <outputFiles>
        <files  includes="BioScience-Workspace/Lysozyme-in-Water/**" accessMode="transferToGlobalSpace"/>
      </outputFiles>
      <metadata>
        <positionTop>
            360
        </positionTop>
        <positionLeft>
            602.75
        </positionLeft>
      </metadata>
    </task>
    <task name="Check_Errors" maxNumberOfExecution="1"
    
    onTaskError="suspendTask" 
    
    
    fork="true">
      <depends>
        <task ref="Gromacs_Execute_Step"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
if ("true"==variables.get("GROMACS_ERROR")){
    
    schedulerapi.connect()
    taskState = schedulerapi.getTaskState(org.ow2.proactive.scheduler.job.JobIdImpl.makeJobId(variables.get("PA_JOB_ID")), variables.get("PA_TASK_NAME"))
    
	if (taskState.getNumberOfExecutionLeft() > 0) {
        throw new Exception ("Error occurred in "+variables.get("CURRENT_STEP_ID")+". Please check the submitted Gromacs command.")
    }
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow  block="end">
        <loop target="Parse_Molecule_Processing_Steps">
          <script>
            <code language="groovy">
              <![CDATA[
if ("true"==variables.get("GROMACS_ERROR")){
    loop = true
} else {
    loop = false
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            487
        </positionTop>
        <positionLeft>
            685
        </positionLeft>
      </metadata>
    </task>
    <task name="Send_Notifications" 
    
    
    
    
    fork="true">
      <variables>
        <variable name="MESSAGE" value="${CURRENT_STEP_ID} is finished. You can find its result in the  user dataspace in the folder &#x27;${BIOSCIENCE_WORKSPACE}/ ${BIOSCIENCE_EXECUTION_TAG}/${CURRENT_STEP_ID}&#x27;." inherited="false"     />
        <variable name="STOP_VNC_SIGNAL" value="Stop-Remote-Visualization" inherited="false"     />
        <variable name="SIGNAL_TO_CONTINUE" value="Terminate ${CURRENT_STEP_ID} and continue" inherited="false"     />
      </variables>
      <depends>
        <task ref="Check_Errors"/>
      </depends>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[
import org.ow2.proactive.notification.client.ApiClient
import org.ow2.proactive.notification.client.api.EventRestApi
import org.ow2.proactive.notification.client.model.EventRequest
import org.ow2.proactive.notification.client.model.Event
import org.ow2.proactive.notification.client.ApiException

if(!variables.get("STOP_LOOP") && variables.get("CURRENT_STEP_NOTIFICATION").equals("true")){

    //Get notification-service URL
    def notifUrl = variables.get('PA_NOTIFICATION_SERVICE_REST_URL')

    // Instantiate EventRestApi instance
    def apiClient = new ApiClient()
    apiClient.setBasePath(notifUrl)
    def eventRestApi = new EventRestApi(apiClient)

    //Get job id
    def jobId = new Long(variables.get("PA_JOB_ID"))

    //Get event message or set default
    def eventMessage = variables.get("MESSAGE")
    if (variables.get("CURRENT_STEP_ACTION").equals("pause")){
            eventMessage+=" To resume the workflow execution, please trigger the action '" +variables.get("SIGNAL_TO_CONTINUE")+ "'."
    }
    if (eventMessage == null || eventMessage.isEmpty()) {
        eventMessage = "You have a notification."
    }

    // Get event severity or set default
    def eventSeverity = "INFO"
    if (eventSeverity == null || eventSeverity.isEmpty()) {
        eventSeverity = EventRequest.EventSeverityEnum.INFO
    } else {
        eventSeverity = EventRequest.EventSeverityEnum.valueOf(eventSeverity)
    }

    //Get session id
    schedulerapi.connect()
    def sessionId = schedulerapi.getSession()

    //Create event
    def eventRequest = new EventRequest()
            .bucketName(genericInformation.get("bucketName"))
            .workflowName(variables.get("PA_JOB_NAME"))
            .eventType(EventRequest.EventTypeEnum.CUSTOM)
            .eventSeverity(eventSeverity)
            .jobId(jobId)
            .message(eventMessage);

    try {
        result = eventRestApi.createEventUsingPOST(sessionId, eventRequest).toString()
        println("Web notification sent to current user." )
    } catch (ApiException e) {
        System.err.println("Exception when calling EventRestApi#createEventUsingPOST")
        System.err.println(e.getMessage())
    }    
}
]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.ow2.proactive.addons.email.EmailSender;

if(!variables.get("STOP_LOOP") && variables.get("CURRENT_STEP_NOTIFICATION").equals("true")){
    
    try {
        // Note that you must configure SMTP connection a priori !!

        // Email parameters
        //from = variables.get("EMAIL_SENDER")
        from = "noreply@activeeon.com"
        to = variables.get("EMAIL_RECIPIENT")
        subject = variables.get("BIOSCIENCE_EXECUTION_TAG")
        content = variables.get("MESSAGE")
        if (variables.get("CURRENT_STEP_ACTION").equals("pause")){
            content+="To resume the workflow execution, please trigger the action '" +variables.get("SIGNAL_TO_CONTINUE")+ "'."
        }
        
        // Send email
        EmailSender.Builder builder = new EmailSender.Builder(credentials);
        builder.setFrom(from)
        builder.addRecipient(to)
        builder.setSubject(subject)
        builder.setBody(content)
        builder.build().sendPlainTextEmail();
        
        println "Email notification sent to user "+ to + "."
        
    } catch(Exception e){
    	System.err.println "Email notification failed, no email was sent to user "+ to + "."
        System.err.println(e.getMessage())
    }
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            597
        </positionTop>
        <positionLeft>
            747
        </positionLeft>
      </metadata>
    </task>
    <task name="Start" 
    
    
    
    
    fork="true">
      <variables>
        <variable name="GROMACS_SIGNAL" value="Start_Gromacs_Processing" inherited="false"     />
      </variables>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[
variables.put("MOLECULE_PROCESSING_STEPS",variables.get("MOLECULE_PROCESSING_STEPS").replace("/","/resources/"))
]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
variables.put("BIOSCIENCE_HOST",variables.get("PA_NODE_HOST"))
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            23
        </positionTop>
        <positionLeft>
            880
        </positionLeft>
      </metadata>
    </task>
    <task name="Remote_Visualization_for_VMD" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Execute VMD container ]]>
      </description>
      <variables>
        <variable name="NS" value="" inherited="false"     />
        <variable name="NS_BATCH" value="" inherited="false"     />
        <variable name="STOP_VNC_SIGNAL" value="Stop-Remote-Visualization" inherited="false"     />
        <variable name="VISU_COMMAND" value="Xvnc :${DISPLAY} -geometry 1280x1024 -SecurityTypes None" inherited="false" model="PA:NOT_EMPTY_STRING"    />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/remote-visualization.png"/>
        <info name="DISABLE_PTK" value="true"/>
        <info name="NS" value="${NS}"/>
        <info name="NS_BATCH" value="${NS_BATCH}"/>
      </genericInformation>
      <depends>
        <task ref="Start"/>
      </depends>
      <inputFiles>
        <files  includes="BioScience-Workspace/Lysozyme-in-Water/**" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <code language="groovy">
            <![CDATA[
/**
 * Script which verifies that the current node runs on the given machine (defined by its hostname)
 *
 * Arguments:
 * machine host name
 */

import com.google.common.base.Strings;

if (args.length != 1) {
    println "Incorrect number of arguments, expected 1, received " + args.length;
    selected = false;
    return;
}

machineName = args[0]

if (Strings.isNullOrEmpty(machineName)) {
    println "Given host name was empty";
    selected = false;
    return;
}

machineName = machineName.trim().toLowerCase()

println "Hostname " + nodehost.toLowerCase() + " (expected :  " + machineName + ")";

selected = (nodehost.toLowerCase() == machineName)
]]>
          </code>
          <arguments>
            <argument value="${BIOSCIENCE_HOST}"/>
          </arguments>
        </script>
      </selection>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[
/**
 * Pre-Script which enables Remote Visualization using a VNC command and X terminal session
 *
 * This script creates the variable 'VISU_PID' containing the process id of the VNC session started
 * This session should be terminated with a kill command (otherwise the task will remain running)
 *
 * Arguments:
 * display : X display number (e.g. 12)
 * visu_command : command used to start the VNC session (e.g. "Xvnc :${DISPLAY} -geometry 1280x1024 -SecurityTypes None")
 */

// Generate random port for remote visualization
def findPort() {
    findPortScript = new File("find_port.sh")
    findPortScript << '''
    while :
        do
            RND_PORT="`shuf -i 5911-5999 -n 1`"
	        ss -lpn | grep -q ":$RND_PORT " || break
        done
    echo $RND_PORT
    '''
    'chmod u+x find_port.sh'.execute().text
    port = "./find_port.sh".execute().text
    findPortScript.delete() 
    return port
}

    // Prepare remote visualization command
    def visu_command = args[0]
    port = findPort()
    display = port.trim().substring(2)
    variables.put("DISPLAY", display)
    visu_command_final = visu_command.replace('$DISPLAY',display).replace('${DISPLAY}',display)
    println "visu_command = " + visu_command_final

    // Start remote visualization
    def processVisu = visu_command_final.execute()
    processVisu.consumeProcessOutput(System.out, System.err)
    Thread.sleep(1000)
    grepProc = 'ps -aux'.execute() | ['grep', visu_command_final].execute() | 'grep -v grep'.execute() | ['awk', '{ print $2 }'].execute()
    grepProc.waitFor()
    visu_pidText = grepProc.text

    println "Visu process id: " + visu_pidText

    try {
        Integer visuPid = visu_pidText.trim() as Integer
        variables.put("VISU_PID", visuPid)
    } catch (Exception e) {
        throw new IllegalStateException("Visu process cannot be found", e)
    }    

    remoteConnectionString = String.format("PA_REMOTE_CONNECTION;%s;%s;vnc;%s:59%s", variables.get("PA_JOB_ID"), variables.get("PA_TASK_ID"), variables.get("PA_NODE_HOST"), display)
    println remoteConnectionString

    schedulerapi.connect()
    schedulerapi.enableRemoteVisualization(variables.get("PA_JOB_ID"), variables.get("PA_TASK_NAME"), remoteConnectionString)
]]>
          </code>
          <arguments>
            <argument value="${VISU_COMMAND}"/>
          </arguments>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
#!/bin/bash

# set the display to be used
export DISPLAY=:${variables_DISPLAY}
#export LIBGL_ALWAYS_INDIRECT=1

outside_workspace=/tmp/$variables_BIOSCIENCE_WORKSPACE
inside_workspace=/$variables_BIOSCIENCE_WORKSPACE
tmp_workspace=$(pwd)/visu_script

mkdir -p $outside_workspace
chmod -R 777 $outside_workspace

mkdir -p $tmp_workspace
touch $tmp_workspace/connect_to_sim.tcl
echo "menu main on" > $tmp_workspace/connect_to_sim.tcl
echo "display background gradient" >> $tmp_workspace/connect_to_sim.tcl
echo "wait 100000" >> $tmp_workspace/connect_to_sim.tcl


docker run -d --name vmd-$variables_PA_JOB_ID --net=host -e DISPLAY=$DISPLAY -v $outside_workspace:$inside_workspace -v $tmp_workspace:/visu_script activeeon/vmd /bin/bash -c "vmd -startup /visu_script/connect_to_sim.tcl"

sleep 2

docker logs vmd-$variables_PA_JOB_ID
]]>
          </code>
        </script>
      </scriptExecutable>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
def stopVMD(){    
     // Remove VMD Docker container
	def removeContainerCmd = "docker rm -f vmd-"+variables.get("PA_JOB_ID")
	def removeContainer = removeContainerCmd.execute()
	removeContainer.consumeProcessOutput(System.out, System.err)
	removeContainer.waitForOrKill(10000)
	Thread.sleep(1000)
}

def stopVNC(){
    
    stopVMD()
    
    // Kill remote visualization process (Xvnc) 
	def VISU_PID = variables.get("VISU_PID")
	def killVisCmd = "kill -9 "+VISU_PID
	def killVis = killVisCmd.execute()
	killVis.consumeProcessOutput(System.out, System.err)
	killVis.waitForOrKill(1000)
	Thread.sleep(1000)
    
    def DISPLAY = variables.get("DISPLAY")
	def DISPLAY_LOCK_FILE = new File("/tmp/.X"+DISPLAY+"-lock")
	DISPLAY_LOCK_FILE.delete()
    
    println("Remote visualization stopped")
}

// Read the signal variables
stopVNCSignal = variables.get("STOP_VNC_SIGNAL")

Set<String> signalsSet1 = [stopVNCSignal]
//signalapi.readyForSignal(stopVNCSignal)
receivedSignal = signalapi.waitForAny(signalsSet1)
if(receivedSignal.getName() == stopVNCSignal){
	println("Stopping Remote Visualization ..")
	stopVNC()
}
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            133
        </positionTop>
        <positionLeft>
            1001.5
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2725px;
            height:3364px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-18px;left:-591.25px"><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1" style="top: 228px; left: 596.25px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Parse_Molecule_Processing_Steps</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_4" style="top: 130px; left: 712px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png" width="20px">&nbsp;<span class="name">Start_Molecule_Processing</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_7" style="top: 701px; left: 656px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png" width="20px">&nbsp;<span class="name">Loop_Over_Molecule_Processing_Steps</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_10" style="top: 600px; left: 625px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Send_Signal</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_13" style="top: 360px; left: 602.75px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Execute Gromacs commands"><img src="/automation-dashboard/styles/patterns/img/wf-icons/gromacs.jpeg" width="20px">&nbsp;<span class="name">Gromacs_Execute_Step</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_16" style="top: 487px; left: 685px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Check_Errors</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_19" style="top: 597px; left: 747px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Send_Notifications</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_22" style="top: 23px; left: 880px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Start</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_25" style="top: 133px; left: 1001.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Execute VMD container"><img src="/automation-dashboard/styles/patterns/img/wf-icons/remote-visualization.png" width="20px">&nbsp;<span class="name">Remote_Visualization_for_VMD</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><svg style="position:absolute;left:684.5px;top:169.5px" width="119" height="59" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 58 C -10 8 108 50 98 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.259711999999997,36.399168 L30.443868939243213,35.918028962388746 L22.365307361474823,31.475412297155934 L25.520113236399144,22.81243360091392 L9.259711999999997,36.399168" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.259711999999997,36.399168 L30.443868939243213,35.918028962388746 L22.365307361474823,31.475412297155934 L25.520113236399144,22.81243360091392 L9.259711999999997,36.399168" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:782.5px;top:62.5px" width="158" height="68" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 67 C -10 17 147 50 137 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M17.040384,43.047616000000005 L38.216895381597006,43.79284462605549 L30.408881978175053,38.89030174587757 L34.05958112747458,30.424346647880437 L17.040384,43.047616000000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M17.040384,43.047616000000005 L38.216895381597006,43.79284462605549 L30.408881978175053,38.89030174587757 L34.05958112747458,30.424346647880437 L17.040384,43.047616000000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:664.5px;top:639.5px" width="113" height="62" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 92 61 C 102 11 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M83.95661349999999,39.32304425 L68.47371914120572,24.85653180662179 L71.14385483649562,33.680951071861784 L62.831625963067495,37.66929047012616 L83.95661349999999,39.32304425" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M83.95661349999999,39.32304425 L68.47371914120572,24.85653180662179 L71.14385483649562,33.680951071861784 L62.831625963067495,37.66929047012616 L83.95661349999999,39.32304425" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:756.5px;top:636.5px" width="63" height="65" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 64 C -10 14 52 50 42 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M0.2837339999999972,45.501404500000014 L18.180823106128763,34.15705782302972 L8.96845332154335,34.52071006358063 L7.200128669709382,25.472338501486362 L0.2837339999999972,45.501404500000014" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M0.2837339999999972,45.501404500000014 L18.180823106128763,34.15705782302972 L8.96845332154335,34.52071006358063 L7.200128669709382,25.472338501486362 L0.2837339999999972,45.501404500000014" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:867.5px;top:119.5px" width="57" height="632" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 0 C 50 -50 -6 581 4 531 " transform="translate(6.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M20.9020995,91.66356675000003 L28.135300969857557,111.58041380209265 L21.065675002127037,105.66261111220932 L14.13625660764826,111.74398930421968 L20.9020995,91.66356675000003" class="" stroke="#316b31" fill="#316b31" transform="translate(6.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M20.9020995,91.66356675000003 L28.135300969857557,111.58041380209265 L21.065675002127037,105.66261111220932 L14.13625660764826,111.74398930421968 L20.9020995,91.66356675000003" class="" stroke="#316b31" fill="#316b31" transform="translate(6.5,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_43" style="position: absolute; transform: translate(-50%, -50%); left: 890.5px; top: 435px;">loop</div><svg style="position:absolute;left:664.5px;top:526.5px" width="81.5" height="74" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 73 C -10 23 70.5 50 60.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.1316951249999967,51.39188425000001 L22.628336482625137,43.09242789598857 L13.478494362064403,41.96088506921946 L13.19733730184459,32.74562865892417 L3.1316951249999967,51.39188425000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.1316951249999967,51.39188425000001 L22.628336482625137,43.09242789598857 L13.478494362064403,41.96088506921946 L13.19733730184459,32.74562865892417 L3.1316951249999967,51.39188425000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:667px;top:267.5px" width="38.5" height="93" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 92 C -10 42 27.5 50 17.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.2744418750000013,69.4706815 L10.448788759796182,51.81945311545474 L2.1836521028563376,55.9044887385686 L-3.1174040016352165,48.361359137598406 L-1.2744418750000013,69.4706815" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.2744418750000013,69.4706815 L10.448788759796182,51.81945311545474 L2.1836521028563376,55.9044887385686 L-3.1174040016352165,48.361359137598406 L-1.2744418750000013,69.4706815" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:667px;top:399.5px" width="79" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 58 87 C 68 37 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M54.571662,63.10721925000001 L46.64314711283846,43.456808269970665 L45.33842270278818,52.58356531800361 L36.119493180842056,52.69004756718249 L54.571662,63.10721925000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M54.571662,63.10721925000001 L46.64314711283846,43.456808269970665 L45.33842270278818,52.58356531800361 L36.119493180842056,52.69004756718249 L54.571662,63.10721925000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:785.5px;top:217.5px" width="59" height="320" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 8 0 C 58 -50 10 269 0 219 " transform="translate(0.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M29.634759000000003,24.255171750000002 L37.72731068138928,43.838598602418955 L30.407005412587843,38.233856791099015 L23.74862564029027,44.61084501500679 L29.634759000000003,24.255171750000002" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M29.634759000000003,24.255171750000002 L37.72731068138928,43.838598602418955 L30.407005412587843,38.233856791099015 L23.74862564029027,44.61084501500679 L29.634759000000003,24.255171750000002" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_58" style="position: absolute; transform: translate(-50%, -50%); left: 812px; top: 377px;">loop</div><svg style="position:absolute;left:725px;top:526.5px" width="94.5" height="71" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 73.5 70 C 83.5 20 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M68.38456837500001,47.95758 L55.88660065310762,30.846156832345713 L56.8559482579399,40.01460082361304 L47.943621476720665,42.37477694940583 L68.38456837500001,47.95758" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M68.38456837500001,47.95758 L55.88660065310762,30.846156832345713 L56.8559482579399,40.01460082361304 L47.943621476720665,42.37477694940583 L68.38456837500001,47.95758" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:919.5px;top:62.5px" width="184" height="71" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 163 70 C 173 20 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M140.34375,45 L122.87254585928432,33.010128196121556 L126.83162395060027,41.336333854574995 L119.20887971385932,46.52225424552128 L140.34375,45" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M140.34375,45 L122.87254585928432,33.010128196121556 L126.83162395060027,41.336333854574995 L119.20887971385932,46.52225424552128 L140.34375,45" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 685px; top: 258px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 685px; top: 218px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 784px; top: 258px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 783px; top: 160px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 783px; top: 120px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 864px; top: 160px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 757px; top: 731px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 757px; top: 691px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 868px; top: 691px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 665px; top: 630px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 665px; top: 590px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 667.5px; top: 390px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 667.5px; top: 350px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 725.5px; top: 517px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 725.5px; top: 477px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 776px; top: 477px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 799px; top: 627px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 799px; top: 587px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 920px; top: 53px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 1083px; top: 163px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 1083px; top: 123px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
