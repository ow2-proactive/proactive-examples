<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.13" xsi:schemaLocation="urn:proactive:jobdescriptor:3.13 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.13/schedulerjob.xsd"  name="AWS_Create_Nice_DCV_Node" projectName="2. Remote Visualization" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="NS_name" value="aws-dcv" model="PA:NOT_EMPTY_STRING" description="The name of nodesource infrastructure" group="Deployment_Configuration  " advanced="false" hidden="false"/>
    <variable name="rm_host_name" value="try.activeeon.com" model="PA:NOT_EMPTY_STRING" description="The hostname of the server" group="Node_Configuration" advanced="false" hidden="false"/>
    <variable name="tokens" value="DCV" model="" description="Tokens to be attached to the added nodes" group="Node_Configuration" advanced="false" hidden="false"/>
    <variable name="MAX_VMs" value="1" model="PA:INTEGER" description="Maximum number of VMs" group="Deployment_Configuration" advanced="true" hidden="false"/>
    <variable name="maxNodePerVM" value="1" model="PA:INTEGER" description="Maximum number of nodes per VM" group="Deployment_Configuration" advanced="true" hidden="false"/>
    <variable name="AWS_Key" value="" model="" description="AWS Access key ID" group="AWS_Configuration" advanced="false" hidden="false"/>
    <variable name="AWS_Secret" value="${AWS_Key}" model="PA:Credential" description="AWS Access key secret" group="AWS_Configuration" advanced="false" hidden="false"/>
    <variable name="SSH_Key" value="" model="" description="AWS SSH key to be attached to the authorized keys of the VMs" group="VM_Configuration" advanced="false" hidden="false"/>
    <variable name="Instance_type" value="t2.large" model="PA:NOT_EMPTY_STRING" description="AWS Instance type" group="VM_Configuration" advanced="false" hidden="false"/>
    <variable name="AMI_Id" value="ami-0081c1d642678a3ff" model="PA:NOT_EMPTY_STRING" description="Amazon Machine Images ID" group="VM_Configuration" advanced="false" hidden="false"/>
    <variable name="SubNetId" value="subnet-xxx" model="PA:NOT_EMPTY_STRING" description="Subnet ID" group="VM_Configuration" advanced="false" hidden="false"/>
    <variable name="SecurityGroup" value="sg-xxx" model="PA:NOT_EMPTY_STRING" description="SecurityGroup ID" group="VM_Configuration" advanced="false" hidden="false"/>
    <variable name="Region" value="eu-west-1" model="PA:NOT_EMPTY_STRING" description="AWS Region" group="VM_Configuration" advanced="false" hidden="false"/>
    <variable name="VpcId" value="vpc-xxx" model="PA:NOT_EMPTY_STRING" description="AWS Virtual Private Cloud ID" group="VM_Configuration" advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ A workflow that creates an AWS Nice DCV nodes using AwsAutoScalingInfrastructure, the added nodes are then given a DCV token to be selected for the creation of Nice DCV sessions. ]]>
  </description>
  <genericInformation>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/DCV.png"/>
  </genericInformation>
  <taskFlow>
    <task name="Create_NodeSource" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A task that creates an AWS Nice DCV nodes using AwsAutoScalingInfrastructure, the added nodes are then given a DCV token to be selected for the creation of Nice DCV sessions. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/DCV.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
// Connecting to the Scheduler
def retCode =0;
def nodeSourceName = variables.get("NS_name")
def host = variables.get("rm_host_name")
def tokens= variables.get("tokens")

def maxVms = variables.get("MAX_VMs")
def maxNodePerVM = variables.get("maxNodePerVM")

def awsKey = variables.get("AWS_Key")
def awsSecret = credentials.get(awsKey)
def publicSshKey = variables.get("SSH_Key")
def InstanceType = variables.get("Instance_type")
def amiId = variables.get("AMI_Id")
def defaultSubNetId = variables.get("SubNetId")
def defaultSecurityGroup = variables.get("SecurityGroup")
def region = variables.get("Region")
def VpcId = variables.get("VpcId")

if (tokens=="") {
    tokens="ALL"
}
else {
    tokens="tokens="+tokens    
}

def nodeJarUrl = "https://"+host+"/rest/node.jar"
    
println "[+] Preparation of NodeSoure " + nodeSourceName
print "(1/4) Connecting to the RM"
rmapi.connect()
println  " OK!"

//Getting NS configuration settings
def infrastructureType = "org.ow2.proactive.resourcemanager.nodesource.infrastructure.AwsAutoScalingInfrastructure"
def infrastructureParameters = ["nice-dcv-",//vmGroupTagPrefix
                                awsKey,//awsKey
                                awsSecret,//awsSecretKey
                                maxVms,//maxVms
                                InstanceType,//defaultInstanceType
                                amiId,//amiId
                                publicSshKey,//publicSshKey
                              VpcId,//defaultVpcId
                                defaultSubNetId,//defaultSubNetId
                                defaultSecurityGroup,//defaultSecurityGroup
                                region,//region
                                "pamr://4096/",//rmUrl, for try platforms we use pamr://4096/ otherwise we use pamr://0/
                                host,//rmHostname
                                nodeJarUrl,//nodeJarURL
                                "",//additionalProperties
                                maxNodePerVM,//maxNodePerVM
                                "600",//deploymentTimeOut
                                "600",//cleanDelay
                                ""] //Spotprice 
                               
                               

def infrastructureFileParameters = [""]//externalStartupScript
                                  
def policyType = "org.ow2.proactive.resourcemanager.nodesource.policy.StaticPolicy"
def poliyParameters = [tokens,"ALL"]
def policyFileParameters = [""]
def nodesRecoverable = "true"

print "(2/4) Creating NodeSource ..."
rmapi.defineNodeSource(nodeSourceName,infrastructureType,(String[]) infrastructureParameters.toArray(),(String[]) infrastructureFileParameters.toArray(), policyType, (String[]) poliyParameters.toArray(), (String[]) policyFileParameters.toArray(),nodesRecoverable)
println " ... OK !"
print "(3/4) Deploying the NodeSource ..."
rmapi.deployNodeSource(nodeSourceName)
println " ... OK !"
print "(4/4) Done"

return retCode;
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            515
        </positionTop>
        <positionLeft>
            512.5
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2834px;
            height:3468px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-510px;left:-507.5px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_22" style="top: 515px; left: 512.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A task that creates an AWS Nice DCV nodes using AwsAutoScalingInfrastructure, the added nodes are then given a DCV token to be selected for the creation of Nice DCV sessions."><img src="/automation-dashboard/styles/patterns/img/wf-icons/DCV.png" width="20px">&nbsp;<span class="name">Create_NodeSource</span></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 565.5px; top: 545px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>