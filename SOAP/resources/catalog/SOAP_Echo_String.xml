<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="SOAP_Echo_String" projectName="1. SOAP Workflows" tags="API,SOAP,Web Service" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="SERVICE_URL" value="https://eaglesoa.com/services-1.0/Test.asmx" model="PA:URL" description="Public SOAP service URL" group="Connection Parameters" advanced="false" hidden="false"/>
    <variable name="USER" value="my_user" model="PA:NOT_EMPTY_STRING"  description="If the service requires basic http authentication, enter a username." group="Connection Parameters" advanced="false" hidden="false"/>
    <variable name="PASSWORD" value="my_password" model="PA:HIDDEN"  description="If the service requires basic http authentication, enter a password." group="Connection Parameters" advanced="false" hidden="false"/>
    <variable name="STRING" value="Hello World" model="" description="The input string to be displayed" group="Service Parameters" advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ A workflow that run a basic public SOAP request (that do not require any authentication). It calls the method Echo to output the provided input string. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="communication-soap"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/api-soap.png"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Echo_String"
    fork="true">
      <description>
        <![CDATA[ A task that runs a public SOAP request to display an input string defined by the user. ]]>
      </description>
      <variables>
          <variable name="SERVICE_URL" value="https://eaglesoa.com/services-1.0/Test.asmx" inherited="true" model="PA:URL" description="Public SOAP service URL" group="Connection Parameters" advanced="false" hidden="false"/>
          <variable name="STRING" value="Hello World" inherited="true" model="" description="The input string to be displayed" group="Service Parameters" advanced="false" hidden="false"/>
          <variable name="ENVELOPE" value="Echo_String_Envelope.xml" inherited="false" model="NOT_EMPTY_STRING" description="SOAP envelope consumed by the service." group="Service Parameters" advanced="false" hidden="true"/>
      </variables>
      <genericInformation>
        <info name="PRE_SCRIPT_AS_FILE" value="${ENVELOPE}"/>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/api-soap.png"/>
      </genericInformation>
      <pre>
          <script>
              <code language="javascript">
                  <![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<!--SOAP envelope consumed by the service at https://eaglesoa.com/services-1.0/Test.asmx.
It calls the method Echo to output the input string-->
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:xsd="http://www.w3.org/2001/XMLSchema"
      xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <soap:Body>
    <Echo xmlns="http://activant.com/Services">
      <s xmlns="http://activant.com/Services">?</s>
    </Echo>
  </soap:Body>
</soap:Envelope>
]]>
              </code>
          </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
@Grab(group='com.github.groovy-wslite', module='groovy-wslite', version='1.1.0')

import groovy.xml.*
import wslite.soap.*
import wslite.http.auth.*
import java.io.StringReader
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.transform.Transformer
import javax.xml.transform.TransformerException
import javax.xml.transform.TransformerFactory
import javax.xml.transform.dom.DOMSource
import javax.xml.transform.stream.StreamResult
import org.w3c.dom.Document
import org.w3c.dom.Attr
import org.w3c.dom.Element
import org.xml.sax.InputSource
import javax.xml.transform.OutputKeys

serviceURL = variables.get("SERVICE_URL")
string = variables.get("STRING")
envelope = variables.get("ENVELOPE")

def client = new SOAPClient(serviceURL)
//In case the service requires a basic authentication, you can uncomment the following instructions
//user = variables.get("USER")
//password = variables.get("PASSWORD")
//client.authorization = new HTTPBasicAuthorization(user, password)

def soapEnvelope = new File(envelope).text
def doc = convertStringToXMLDocument(soapEnvelope)
doc.getElementsByTagName("s").item(0).setTextContent(string)


def convertStringToXMLDocument(def xmlString){
    //API to obtain DOM Document instance with default configuration
    def builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
    def doc = builder.parse(new InputSource(new StringReader(xmlString)));
    doc.getDocumentElement().normalize();
    return doc
}

def convertXMLDocumentToString(def doc){
    def tf = TransformerFactory.newInstance();
    def transformer;
    transformer = tf.newTransformer();
    // below code to remove XML declaration
    // transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, "yes");
    def writer = new StringWriter()
    transformer.transform(new DOMSource(doc), new StreamResult(writer))
    return writer.getBuffer().toString()
}

def response = client.send(SOAPAction: "http://activant.com/Services/Echo",
                           connectTimeout:5000,
                           readTimeout:20000,
                           useCaches:false,
                           followRedirects:false,
                           sslTrustAllCerts:true, convertXMLDocumentToString(doc))

resultMap.put("Input String", response.getBody().toString())
println("Echo input string " + response.getBody().toString())
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            242.861328125
        </positionTop>
        <positionLeft>
            518.291015625
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2688px;
            height:3580px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-237.861328125px;left:-513.291015625px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_19" style="top: 242.862px; left: 518.291px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A task that runs a public SOAP request to display an input string defined by the user."><img src="/automation-dashboard/styles/patterns/img/wf-icons/api-soap.png" width="20px">&nbsp;<span class="name">Echo_String</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 598px; top: 273px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>