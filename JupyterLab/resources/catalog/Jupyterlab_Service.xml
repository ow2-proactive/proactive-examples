<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.13" xsi:schemaLocation="urn:proactive:jobdescriptor:3.13 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.13/schedulerjob.xsd"  name="Jupyterlab_Service" projectName="Service Automation - Management" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="NATIVE_SCHEDULER" value=""/>
    <variable name="NATIVE_SCHEDULER_PARAMS" value=""/>
    <variable name="ENDPOINT_ID" value="jupyterlab-endpoint-$PA_JOB_ID"/>
    <variable name="PROXYFIED" value="True" model="PA:Boolean"/>
    <variable name="HTTPS_ENABLED" value="False" model="PA:Boolean"/>
    <variable name="BUILD_IMAGE_IF_NOT_EXISTS" value="True" model="PA:Boolean"/>
    <variable name="SERVICE_PORT" value="-1" model="PA:Integer"/>
    <variable name="JUPYTERLAB_PASSWORD" value="" model="PA:HIDDEN"/>
    <variable name="SINGULARITY_IMAGE_PATH" value="/tmp/jupyterlab.sif" />
    <variable name="ENGINE" value="docker" model="PA:List(docker,singularity)"/>
    <variable name="INSTANCE_NAME" value="jupyterlab-server-${PA_JOB_ID}"/>
  </variables>
  <description>
    <![CDATA[ Deploy a JupyterLab server.
The service can be started using the following variables:
INSTANCE_NAME (Required): service instance name.
ENV_VARS (Optional): List of the environment variables. Each environment variable should be preceded by -e.
JUPYTERLAB_PASSWORD: provides password for JupyterLab service. Default is empty string. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="service-automation"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/jupyterlab.png"/>
    <info name="Documentation" value="PSA/PSAUserGuide.html#_jupyterlab"/>
    <info name="pca.service.id" value="JupyterLab"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Start_Jupyterlab_Service" 
    
    onTaskError="cancelJob" 
    
    
    fork="true">
      <description>
        <![CDATA[ Start the Jupyterlab server as a service. ]]>
      </description>
      <variables>
        <variable name="SERVICE_ID" value="JupyterLab" inherited="false" />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/jupyterlab.png"/>
        <info name="task.documentation" value="PSA/PSAUserGuide.html"/>
      </genericInformation>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Start/raw" language="groovy">
            <arguments>
              <argument value="true"/>
              <argument value="false"/>
              <argument value="NATIVE_SCHEDULER"/>
              <argument value="NATIVE_SCHEDULER_PARAMS"/>
              <argument value="INSTANCE_NAME"/>
              <argument value="ENDPOINT_ID"/>
              <argument value="PROXYFIED"/>
              <argument value="HTTPS_ENABLED"/>
              <argument value="SERVICE_PORT"/>
              <argument value="JUPYTERLAB_PASSWORD"/>
              <argument value="SINGULARITY_IMAGE_PATH"/>
              <argument value="BUILD_IMAGE_IF_NOT_EXISTS"/>
              <argument value="ENGINE"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            299.5
        </positionTop>
        <positionLeft>
            582.25
        </positionLeft>
      </metadata>
    </task>
    <task name="Stop_Jupyterlab_Service" 
    
    onTaskError="cancelJob" 
    
    
    fork="true">
      <variables>
        <variable name="ACTION" value="Finish_JupyterLab" inherited="false" model="PA:LIST(Pause_JupyterLab, Resume_JupyterLab, Finish_JupyterLab)"/>
        <variable name="INSTANCE_ID" value="" inherited="false" />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/jupyterlab.png"/>
        <info name="task.documentation" value="PSA/PSAUserGuide.html"/>
      </genericInformation>
      <depends>
        <task ref="wait_for_stop"/>
      </depends>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Action/raw" language="groovy"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            552.5
        </positionTop>
        <positionLeft>
            637.25
        </positionLeft>
      </metadata>
    </task>
    <task name="wait_for_stop" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job. ]]>
      </description>
      <variables>
        <variable name="SIGNALS" value="Terminate_job_and_service" inherited="false" />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png"/>
        <info name="TASK.DOCUMENTATION" value="user/ProActiveUserGuide.html#_task_signal_api"/>
      </genericInformation>
      <depends>
        <task ref="Start_Jupyterlab_Service"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import com.google.common.base.Splitter;

if (variables.get("PA_TASK_ITERATION")==0){

    // Read the variable SIGNALS
	signals = variables.get("SIGNALS")

	// Split the value of the variable SIGNALS and transform it into a list
	Set signalsSet = new HashSet<>(Splitter.on(',').trimResults().omitEmptyStrings().splitToList(signals))

    // Send a ready notification for each signal in the set
    println("Ready for signals "+ signalsSet)
    signalsSet.each {
        signal -> signalapi.readyForSignal(signal)
    }

    // Add the signals set as a variable to be used by next tasks
    variables.put("SIGNALS_SET", signalsSet)
}

//Read the variable SIGNALS_SET
Set signalsSet =  variables.get("SIGNALS_SET")

// Check whether one signal among those specified as input is received
println("Checking whether one signal in the set "+ signalsSet +" is received")
receivedSignal = signalapi.checkForSignals(signalsSet)

// If a signal is received, remove ready signals and break the loop, else sleep 10 seconds then restart
if (receivedSignal != null){

    // remove ready signals
	signalapi.removeManySignals(new HashSet<>(signalsSet.collect { signal -> "ready_"+signal }))

    // print the received signal
    println("Received signal: "+ receivedSignal.getName())
    result = receivedSignal.getName()

} else {
    result = null
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <loop target="wait_for_stop">
          <script>
            <code language="groovy">
              <![CDATA[
if (result!=null){
    loop = false
} else {
    loop = "* * * * *"
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            425.484375
        </positionTop>
        <positionLeft>
            637.25
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:3824px;
            height:4968px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-560px;left:-841.5px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_108" style="top: 565px; left: 846.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start the Jupyterlab server as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/jupyterlab.png" width="20px">&nbsp;<span class="name">Start_Jupyterlab_Service</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_111" style="top: 821px; left: 846.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/jupyterlab.png" width="20px">&nbsp;<span class="name">Stop_Jupyterlab_Service</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_ active-task" id="jsPlumb_1_114" style="top: 693px; left: 846.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png" width="20px">&nbsp;<span class="name">wait_for_stop</span></a></div><svg style="position:absolute;left:886.5px;top:732.5px" width="43.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 22.5 88 C 32.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M23.40936,66.303232 L23.83038624209553,45.1177950938735 L19.047922429813696,52.999929315276646 L10.52708355737218,49.47923266405979 L23.40936,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M23.40936,66.303232 L23.83038624209553,45.1177950938735 L19.047922429813696,52.999929315276646 L10.52708355737218,49.47923266405979 L23.40936,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:886.5px;top:604.5px" width="44" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 88 C -10 38 33 50 23 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-0.7793772500000016,65.8307285 L12.31489900918228,49.17119881731642 L3.75016271362594,52.58371873485242 L-0.932110755965307,44.64165885369049 L-0.7793772500000016,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-0.7793772500000016,65.8307285 L12.31489900918228,49.17119881731642 L3.75016271362594,52.58371873485242 L-0.932110755965307,44.64165885369049 L-0.7793772500000016,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:927.0266769263776px;top:642.5px" width="20.473323073622403" height="141" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C -10 90 -10 -50 0 0 " transform="translate(19.973323073622403,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_128" style="position: absolute; transform: translate(-50%, -50%); left: 939px; top: 712.5px;">loop</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 910px; top: 595px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 909.5px; top: 851px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 909.5px; top: 811px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 887px; top: 723px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 887px; top: 683px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 937px; top: 683px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 937px; top: 723px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>