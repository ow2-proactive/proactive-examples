<?xml version="1.0" encoding="UTF-8"?>
<job xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:proactive:jobdescriptor:3.10"
	xsi:schemaLocation="urn:proactive:jobdescriptor:3.10 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.10/schedulerjob.xsd"
	name="File Trigger" projectName="1. Basic Workflows" priority="normal"
	onTaskError="continueJobExecution" maxNumberOfExecution="2">
	<variables>
		<variable name="FOLDER_TO_MONITOR" value="/tmp/trigger" />
	</variables>
	<description>
    <![CDATA[ Process a file whenever the file is created in a specified folder. For the sake of this example, the monitoring loop will stop after 5 times (see loop code). ]]>
	</description>
	<genericInformation>
		<info name="bucketName" value="1. Basic Workflows" />
		<info name="group" value="public-objects" />
		<info name="workflow.icon"
			value="/automation-dashboard/styles/patterns/img/wf-icons/file_trigger.png" />
	</genericInformation>
	<taskFlow>
		<task name="FileTrigger" onTaskError="suspendTask">
			<description>
        <![CDATA[ This groovy task check if new files are created in a specified folder (FOLDER_TO_MONITOR). If that is the case, it will pass the file name to the Process Task ]]>
			</description>
			<variables>
				<variable name="FOLDER_TO_MONITOR" value="/tmp/trigger"
					inherited="true" />
			</variables>
			<genericInformation>
				<info name="task.icon"
					value="/automation-dashboard/styles/patterns/img/wf-icons/file_trigger.png" />
			</genericInformation>
			<selection>
				<script type="static">
					<code language="groovy">
            <![CDATA[
selected = org.ow2.proactive.scripting.helper.selection.SelectionUtils.checkHostName("slave3")
]]>
					</code>
				</script>
			</selection>
			<scriptExecutable>
				<script>
					<code language="groovy">
            <![CDATA[
inputFilesFolder = variables.get("FOLDER_TO_MONITOR");
processedFilesfolder = inputFilesFolder + "/.filetrigger";
println("Monitoring " + inputFilesFolder)

new File(processedFilesfolder).mkdirs();

filesToProcess = new ArrayList();

// list files in the watched folder
new File(inputFilesFolder).eachFile() { file->  
	if (!file.isDirectory()){
		File f = new File(processedFilesfolder + "/" + file.getName() );
		if(!f.exists()) { 
			filesToProcess.add(file.getName())
			// store the processed file name to avoid processing it again
			f.createNewFile();
		}
	}
}

result = filesToProcess;
]]>
					</code>
				</script>
			</scriptExecutable>
			<controlFlow block="start">
				<replicate>
					<script>
						<code language="groovy">
              <![CDATA[
runs = result.size()
]]>
						</code>
					</script>
				</replicate>
			</controlFlow>
		</task>
		<task name="Process">
			<description>
        <![CDATA[ This task will be replicated according to the 'runs' value specified in
				the replication script.
				The replication index is used in each task's instance to select the
				input. ]]>
			</description>
			<genericInformation>
				<info name="TASK.ICON"
					value="/automation-dashboard/styles/patterns/img/wf-icons/print_file_name.png" />
			</genericInformation>
			<depends>
				<task ref="FileTrigger" />
			</depends>
			<selection>
				<script type="static">
					<code language="groovy">
            <![CDATA[
selected = org.ow2.proactive.scripting.helper.selection.SelectionUtils.checkHostName("slave3")
]]>
					</code>
				</script>
			</selection>
			<scriptExecutable>
				<script>
					<code language="groovy">
            <![CDATA[
int replication = variables.get('PA_TASK_REPLICATION')
input = results[0].value()[replication]

print("Ready to process " + input)
result = input.toUpperCase()


//Uncomment the following to submit a workflow for every file found
/*
variables = new HashMap()
variables.put("file", input)
schedulerapi.connect();
jobid = schedulerapi.submitFromCatalog("https://try.activeeon.com/catalog","basic-examples", "print_file_name", variables);
println "Triggered job " + jobid + " to process " + input;
schedulerapi.disconnect();
*/
]]>
					</code>
				</script>
			</scriptExecutable>
		</task>
		<task name="Merge">
			<description>
        <![CDATA[ As a merge operation, we simply print the results from previous tasks. ]]>
			</description>
			<genericInformation>
				<info name="TASK.ICON"
					value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" />
			</genericInformation>
			<depends>
				<task ref="Process" />
			</depends>
			<scriptExecutable>
				<script>
					<code language="groovy">
            <![CDATA[
println results
]]>
					</code>
				</script>
			</scriptExecutable>
			<controlFlow block="end">
				<loop target="FileTrigger">
					<script>
						<code language="groovy">
              <![CDATA[
loop = variables.get("PA_TASK_ITERATION") < 5 ? true : false;
]]>
						</code>
					</script>
				</loop>
			</controlFlow>
		</task>
	</taskFlow>
</job>