<?xml version="1.0" encoding="UTF-8"?>
<job xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:proactive:jobdescriptor:3.8"
	xsi:schemaLocation="urn:proactive:jobdescriptor:3.8 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.8/schedulerjob.xsd"
	name="RemoteFileCheck" projectName="BuildingBlock" priority="normal"
	onTaskError="continueJobExecution" maxNumberOfExecution="2">
	<variables>
		<variable name="FILE_NAME" value="plop.txt" />
		<variable name="INTERVAL_BETWEEN_CHECKS" value="3" />
		<variable name="THRESHOLD" value="10" />
	</variables>
	<genericInformation>
		<info name="pca.action.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/proactive.png" />
	</genericInformation>
	<taskFlow>
		<task name="dummy_task">
			<depends>
				<task ref="FileCheck" />
			</depends>
			<scriptExecutable>
				<script>
					<code language="javascript">
            <![CDATA[
print("Dummy task triggered!");
]]>
					</code>
				</script>
			</scriptExecutable>
		</task>
		<task name="FileCheck">
			<description>
        <![CDATA[ Cron task running every minute ]]>
      </description>
			<inputFiles>
				<files includes="{$FILE_NAME}" accessMode="transferFromUserSpace" />
			</inputFiles>
			<scriptExecutable>
				<script>
					<code language="groovy">
            <![CDATA[
//%%%%%%%%%%%% Inputs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
fileName = variables.get("FILE_NAME");
println("fileName: ["+fileName+"]");


//%%%%%%%%%%%% Code %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//%% Create a new variable called lineCount      %%

try {
  lineCount = countLines(fileName);
  println("lineCount: "+lineCount);

  variables.put("lineCount", lineCount)
} catch(e) {
  println("File not found");
  variables.put("lineCount", 0)
}

return true;


//%%%%%%%%%%%% Code %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//%% Count lines within file                     %%

public static int countLines(String filename) throws IOException {
    InputStream is = new BufferedInputStream(new FileInputStream(filename));
    try {
        byte[] c = new byte[1024];
        int count = 0;
        int readChars = 0;
        boolean empty = true;
        while ((readChars = is.read(c)) != -1) {
            empty = false;
            for (int i = 0; i < readChars; ++i) {
                if (c[i] == '\n') {
                    ++count;
                }
            }
        }
        return (count == 0 && !empty) ? 1 : count;
    } finally {
        is.close();
    }
}
]]>
					</code>
				</script>
			</scriptExecutable>
			<controlFlow>
				<loop target="FileCheck">
					<script>
						<code language="groovy">
              <![CDATA[
sleep(variables.get('INTERVAL_BETWEEN_CHECKS') * 1000);
loop = (variables.get('lineCount') < variables.get('THRESHOLD'));

// Explanations
// The file is uploaded to the node executing the task from the UserSpace
// The loop cannot be done within the task since the file will not be uploaded at each iteration
]]>
						</code>
					</script>
				</loop>
			</controlFlow>
		</task>
	</taskFlow>
</job>