<?xml version="1.0" encoding="UTF-8"?>
<job xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:proactive:jobdescriptor:3.9"
	xsi:schemaLocation="urn:proactive:jobdescriptor:3.9 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.9/schedulerjob.xsd"
	name="Kafka_Read_From_Topic" projectName="2. Kafka" priority="normal"
	onTaskError="continueJobExecution" maxNumberOfExecution="2">
	<description>
		<![CDATA[ This workflow reads messages from a given publish-subscribe Kafka topic (https://kafka.apache.org/) during a given period. ]]>
	</description>
	<genericInformation>
		<info name="bucketName" value="big-data" />
		<info name="workflow.icon"
			value="/automation-dashboard/styles/patterns/img/wf-icons/kafka.png" />
		<info name="group" value="public-objects" />
	</genericInformation>
	<taskFlow>
		<task name="Kafka_Read_From_Topic">
			<description>
				<![CDATA[ This task reads messages from a given publish-subscribe Kafka topic (https://kafka.apache.org/) during a given period. ]]>
			</description>
			<variables>
				<variable name="topic" value="kafka-topic-1" inherited="false" />
				<variable name="kafka_instance" value="" inherited="true" />
				<variable name="reading_duration" value="5" inherited="false" />
				<variable name="from_beginning" value="true" inherited="false"
					model="PA:Boolean" />
			</variables>
			<genericInformation>
				<info name="task.documentation" value="https://kafka.apache.org/" />
				<info name="task.icon"
					value="/automation-dashboard/styles/patterns/img/wf-icons/kafka.png" />
			</genericInformation>
			<forkEnvironment>
				<envScript>
					<script>
						<code language="groovy">
              <![CDATA[
// Prepare Docker parameters 
dockerCommand =  'docker exec ' 
dockerParameters = '-i ' 
containerName = variables.get("kafka_instance")+' '

// Save pre execution command into magic variable 'preJavaHomeCmd', which is picked up by the node 
preJavaHomeCmd = dockerCommand + dockerParameters + containerName
]]>
						</code>
					</script>
				</envScript>
			</forkEnvironment>
			<scriptExecutable>
				<script>
					<code language="bash">
            <![CDATA[
## Initialize variables
ZOOKEEPER=zookeeper:2181
KAFKA=localhost:9092
TOPIC=$variables_topic
DURATION=$variables_reading_duration
ALL=""

if [ "$variables_from_beginning" == "true" ] ; then
	ALL="--from-beginning"
fi

## Check if the topic exists, otherwise create it.
exists=$(/opt/kafka/bin/kafka-topics.sh --list --zookeeper $ZOOKEEPER | grep  -w "$TOPIC")

if  ! [ $exists == $TOPIC ]; then
	echo "Topic $TOPIC does not exist"
    exit 1
else  	
   timeout $DURATION /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server $KAFKA --topic $TOPIC $ALL
   exit 0
fi
]]>
					</code>
				</script>
			</scriptExecutable>
		</task>
	</taskFlow>
</job>
