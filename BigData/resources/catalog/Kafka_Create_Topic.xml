<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.11" xsi:schemaLocation="urn:proactive:jobdescriptor:3.11 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.11/schedulerjob.xsd"  name="Kafka_Create_Topic" projectName="2. Kafka" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2" >
  <description>
    <![CDATA[ This workflow creates a new publish-subscribe topic within a running Kafka broker (https://kafka.apache.org/). ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="big-data"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/kafka.png"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Kafka_Create_Topic" >
      <description>
        <![CDATA[ This task creates a new publish-subscribe topic within a running Kafka broker (https://kafka.apache.org/). ]]>
      </description>
      <variables>
        <variable name="topic" value="kafka-topic-1" inherited="false" />
        <variable name="kafka_instance" value="kafka-server-1" inherited="true" />
        <variable name="replication_factor" value="1" inherited="false" model="PA:Integer"/>
        <variable name="partitions" value="1" inherited="false" model="PA:Integer"/>
      </variables>
      <genericInformation>
        <info name="task.documentation" value="https://kafka.apache.org/"/>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/kafka.png"/>
      </genericInformation>
      <forkEnvironment >
        <envScript>
          <script>
            <code language="groovy">
              <![CDATA[
// Prepare Docker parameters 
dockerCommand =  'docker exec ' 
dockerParameters = '-i ' 
containerName = variables.get("kafka_instance")+' '

// Save pre execution command into magic variable 'preJavaHomeCmd', which is picked up by the node 
preJavaHomeCmd = dockerCommand + dockerParameters + containerName
]]>
            </code>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
## Initialize variables
ZOOKEEPER=zookeeper:2181
TOPIC=$variables_topic

## Check if the topic exists, otherwise create it.
exists=$(/opt/kafka/bin/kafka-topics.sh --list --zookeeper $ZOOKEEPER | grep -w "$TOPIC")

if [[ $exists == $TOPIC ]]; then
	echo "Topic $TOPIC already exists"
    exit 1
else  	
  /opt/kafka/bin/kafka-topics.sh --create --zookeeper $ZOOKEEPER --topic $TOPIC --partitions $variables_partitions --replication-factor $variables_replication_factor
fi
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html><head><link rel="stylesheet" href="/studio/styles/studio-standalone.css"><style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2476px;
            height:2795px;
            }
        </style></head><body><div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-404.4886245727539px;left:-533.1817932128906px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_508" style="top: 409.489px; left: 538.196px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/kafka.png" width="20px">&nbsp;<span class="name">Kafka_Create_Topic</span></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 590.5px; top: 439px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div></body></html>
 ]]>
    </visualization>
  </metadata>
</job>