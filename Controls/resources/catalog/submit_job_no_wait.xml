<?xml version="1.0" encoding="UTF-8"?>
<job xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:proactive:jobdescriptor:3.11"
     xsi:schemaLocation="urn:proactive:jobdescriptor:3.11 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.11/schedulerjob.xsd"
     name="Submit_Job_No_Wait" projectName="2. Tasks and Jobs Dependencies">
    <genericInformation>
        <info name="workflow.icon"
              value="/automation-dashboard/styles/patterns/img/wf-icons/controls_submit_job_no_wait.png"/>
    </genericInformation>
    <taskFlow>
        <task name="Submit_Job_No_Wait">
            <description>
                <![CDATA[ Submit a workflow referenced in the ProActive Catalog (or accessible by url) ]]>
            </description>
            <variables>
                <variable name="called_workflow" value="basic-examples/Native_Task" inherited="true"
                          model="PA:CATALOG_OBJECT"/>
            </variables>
            <genericInformation>
                <info name="task.icon"
                      value="/automation-dashboard/styles/patterns/img/wf-icons/controls_submit_job_no_wait.png"/>
            </genericInformation>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
// Submit a workflow referenced in the ProActive Catalog (or accessible by url)

// Please add the bucket and workflow names that you want to execute as Task Variables 'called_workflow'

// connect to the scheduler
schedulerapi.connect()

// get the workflow information from Task Variables
calledWorkflow = variables.get("called_workflow")

// variables submitted to the workflow: Empty in the example, modify this map to give parameters to the submitted workflow
workflow_variables = Collections.EMPTY_MAP

println "Submitting workflow " + calledWorkflow

// submitting the job
def generic_infos_map = ["PARENT_JOB_ID" : variables.get("PA_JOB_ID")]
jobid = schedulerapi.submitFromCatalog(variables.get("PA_CATALOG_REST_URL"), calledWorkflow, workflow_variables, generic_infos_map)

// alternatively you can submit a workflow from a direct url

// // add sessionId to request header map
// requestHeader = Collections.singletonMap("sessionId", schedulerapi.getSession())
// jobUrl = "https://try.activeeon.com/catalog/buckets/basic-examples/resources/distributed_computing_Pi/raw"
// jobid = schedulerapi.submit(jobURL, variables, generic_infos_map, requestHeader)

println "Job submitted with job id " + jobid

result = jobid
]]>
                    </code>
                </script>
            </scriptExecutable>
        </task>
    </taskFlow>
    <metadata>
        <visualization>
            <![CDATA[ <html><head><link rel="stylesheet" href="/studio/styles/studio-standalone.css"><style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2864px;
            height:3568px;
            }
        </style></head><body><div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-467px;left:-620.75px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_129" style="top: 472px; left: 625.75px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_submit_job_no_wait.png" width="20px">&nbsp;<span class="name">Submit_Job_No_Wait</span></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 681.5px; top: 502px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div></body></html>
 ]]>
        </visualization>
    </metadata>
</job>