<?xml version="1.0" encoding="UTF-8"?>
<job
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:proactive:jobdescriptor:3.13" xsi:schemaLocation="urn:proactive:jobdescriptor:3.13 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.13/schedulerjob.xsd"  name="Wait_For_Signal_With_Variables" projectName="4. Signal Templates" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <description>
    <![CDATA[ A template workflow that waits until one signal (with input parameters) that is specified in the variable SIGNAL is added to the set of job signals. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="basic-examples"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-send.png"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="wait_for_signal_with_variables"




          fork="true">
      <description>
        <![CDATA[ A template task that waits until one signal with variables that is specified in the variable SIGNAL is added to the set of job signals. ]]>
      </description>
      <variables>
        <variable name="SIGNAL" value="stop" inherited="false" description="Signal that will be added to the set of job signals."/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-send.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.ow2.proactive.scheduler.common.job.JobVariable

signal = args[0]
List <JobVariable> signalVariables = new java.util.ArrayList<JobVariable>()
signalVariables.add(new JobVariable("INTEGER_VARIABLE", "12", "PA:INTEGER", "description", "", false, false))
signalVariables.add(new JobVariable("LIST_VARIABLE", "True", "PA:LIST(True,False)", "", "List", true, false))
signalVariables.add(new JobVariable("BOOLEAN_VARIABLE", "true", "PA:Boolean", "", "", false, true))

signalapi.readyForSignal(signal, signalVariables)
outputParameters = signalapi.waitFor(signal)

println "Output parameters = " + outputParameters
]]>
          </code>
          <arguments>
            <argument value="${SIGNAL}"/>
          </arguments>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
          296.2625045776367
        </positionTop>
        <positionLeft>
          356
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2257px;
            height:2605px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-291.2625045776367px;left:-351px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_40" style="top: 296.275px; left: 356px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A template task that waits until one signal specified in the variable SIGNAL with variables is added to the set of job signals."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-send.png" width="20px">&nbsp;<span class="name">wait_for_signal_with_variables</span></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 442px; top: 326.275px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
