<?xml version="1.0" encoding="UTF-8"?>
<job xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns="urn:proactive:jobdescriptor:3.11"
     xsi:schemaLocation="urn:proactive:jobdescriptor:3.11 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.11/schedulerjob.xsd"
     name="Submit_Job_And_Wait">
    <genericInformation>
        <info name="workflow.icon"
              value="/automation-dashboard/styles/patterns/img/wf-icons/controls_submit_job_and_wait.png"/>
    </genericInformation>
    <taskFlow>
        <task name="Submit_Job_And_Wait">
            <description>
                <![CDATA[ Submit a workflow referenced in the ProActive Catalog (or accessible by url) and wait for its termination by checking every minute if the job is terminated. ]]>
            </description>
            <variables>
                <variable name="called_workflow" value="basic-examples/Native_Task" inherited="true"
                          model="PA:CATALOG_OBJECT"/>
            </variables>
            <genericInformation>
                <info name="task.icon"
                      value="/automation-dashboard/styles/patterns/img/wf-icons/controls_submit_job_and_wait.png"/>
            </genericInformation>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
// Submit a workflow referenced in the ProActive Catalog (or accessible by url)

// Please add the bucket and workflow names that you want to execute as Task Variables 'called_workflow'

// connect to the scheduler
schedulerapi.connect()
def jobid
if( !variables.get("jobSubmitted") ){
    // get the workflow information from Task Variables
    def calledWorkflow = variables.get("called_workflow")

    // variables submitted to the workflow: Empty in the example, modify this map to give parameters to the submitted workflow
    workflow_variables = Collections.EMPTY_MAP

    println "Submitting workflow " + calledWorkflow

    // submitting the job
    def generic_infos_map = ["PARENT_JOB_ID" : variables.get("PA_JOB_ID")]
    jobid = schedulerapi.submitFromCatalog(variables.get("PA_CATALOG_REST_URL"), calledWorkflow, workflow_variables, generic_infos_map)
    variables.put("jobSubmitted", true)

    // alternatively you can submit a workflow from a direct url

    // // add sessionId to request header map
    // requestHeader = Collections.singletonMap("sessionId", schedulerapi.getSession()
    // jobUrl = "https://try.activeeon.com/catalog/buckets/basic-examples/resources/distributed_computing_Pi/raw"
    // jobid = schedulerapi.submit(jobURL, variables, generic_infos_map, requestHeader)

    println "Job submitted with job id " + jobid
    variables.put("jobID", jobid)
}

if( jobid == null ){
    jobid = variables.get("jobID")
}
isFinished = schedulerapi.isJobFinished(jobid)

variables.put("isFinished", isFinished)

result = jobid
]]>
                    </code>
                </script>
            </scriptExecutable>
            <controlFlow>
                <loop target="Submit_Job_And_Wait">
                    <script>
                        <code language="javascript">
                            <![CDATA[
// You can use a Cron Expression here
              // examples http://www.sauronsoftware.it/projects/cron4j/manual.php#p02
if(!variables.get("isFinished")){
	loop = '* * * * *';
}else{
    variables.put("jobSubmitted", false);
	loop = false;
}
]]>
                        </code>
                    </script>
                </loop>
            </controlFlow>
        </task>
    </taskFlow>
    <metadata>
        <visualization>
            <![CDATA[ <html><head><link rel="stylesheet" href="/studio/styles/studio-standalone.css"><style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2864px;
            height:3568px;
            }
        </style></head><body><div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-467px;left:-617px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_120" style="top: 472px; left: 622px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_submit_job_and_wait.png" width="20px">&nbsp;<span class="name">Submit_Job_And_Wait</span></a></div><svg style="position:absolute;left:738.0266769263776px;top:421.5px" width="20.473323073622403" height="141" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C -10 90 -10 -50 0 0 " transform="translate(19.973323073622403,50.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_128" style="position: absolute; transform: translate(-50%, -50%); left: 750px; top: 491.5px;">loop</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 680px; top: 502px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 748px; top: 462px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 748px; top: 502px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div></div></div></body></html>
 ]]>
        </visualization>
    </metadata>
</job>