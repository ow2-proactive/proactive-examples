<?xml version="1.0" encoding="UTF-8"?>
<job
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:proactive:jobdescriptor:3.10"
        xsi:schemaLocation="urn:proactive:jobdescriptor:3.10 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.10/schedulerjob.xsd"
        name="Azure_Databricks_dbfs_put" projectName="Azure Big Data"
        priority="normal"
        onTaskError="continueJobExecution"
        maxNumberOfExecution="2"
>
  <variables>
    <variable name="domain" value="westeurope.azuredatabricks.net"/>
    <variable name="token" value="my_databricks_workspace_token"/>
    <variable name="jar_path_from_dataspace" value="my_jar_to_put_to_the_dbfs" />
  </variables>
  <description>
    <![CDATA[ Creates a new Spark job with the provided settings and runs it now. ]]>
  </description>
  <genericInformation>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/databricks.png"/>
    <info name="Documentation" value="https://docs.azuredatabricks.net/api/latest/index.html"/>
  </genericInformation>
  <taskFlow>

    <task name="Azure_Databricks_dbfs_put">
      <genericInformation>
        <info name="task.documentation" value="https://docs.azuredatabricks.net/api/latest/index.html"/>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/databricks.png"/>
      </genericInformation>
      <inputFiles>
        <files  includes="$jar_path_from_dataspace" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import groovy.json.JsonBuilder
import org.apache.http.entity.StringEntity
import org.apache.http.client.methods.HttpPost
import org.apache.http.entity.mime.MultipartEntityBuilder
import org.apache.http.impl.client.HttpClientBuilder
import org.apache.http.entity.mime.content.FileBody
import org.apache.http.entity.mime.content.StringBody
import org.apache.http.entity.ContentType


// Retrieve variables
def domain = variables.get("domain")
def token = variables.get("token")
def jar_path_from_dataspace = variables.get("jar_path_from_dataspace")


// Build the command
def put_query = "https://" + domain + "/api/2.0/dbfs/put"
def put_post = new HttpPost(put_query)
put_post.addHeader("Authorization", "Bearer " +  token)

def builder = MultipartEntityBuilder.create()
builder.addPart("contents", new FileBody(new File(localspace, jar_path_from_dataspace)))
builder.addPart("path", new StringBody("dbfs:/" + jar_path_from_dataspace))

put_post.setEntity(builder.build())
println "DBFS/PUT REQUEST=> " + put_post.getRequestLine()

// Execute the command
def put_response = HttpClientBuilder.create().build().execute(put_post)
println "DBFS/PUT RESPONSE=> " + put_response
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
  </taskFlow>
</job>