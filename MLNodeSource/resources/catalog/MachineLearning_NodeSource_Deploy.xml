<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.11" xsi:schemaLocation="urn:proactive:jobdescriptor:3.11 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.11/schedulerjob.xsd"  name="MachineLearning_NodeSource_Deploy" projectName="5. Machine Learning NodeSource" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2" >
  <variables>
    <variable name="CONTAINER_NAME" value="ml" />
    <variable name="credentials" value="CREDENTIAL_GENERATED_BY_RESOURCE_MANAGER_PORTAL" />
    <variable name="DOCKER_IMAGE" value="activeeon/dlm3" />
    <variable name="nodesNumber" value="4" />
    <variable name="NodeSourceName" value="MachineLearningNodes" />
    <variable name="password" value="PASSWORD" />
    <variable name="rmAddress" value="https://try.activeeon.com/rest/rm/" />
    <variable name="username" value="USERNAME" />
  </variables>
  <description>
    <![CDATA[ Deploy a machine learning nodesource ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="machine-learning-workflows"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/machine_learning_node_source_deploy_6.png"/>
    <info name="Documentation" value="https://ow2-proactive.github.io/proactive-examples/MachineLearning/resources/doc/V1/automated-machine-learning-activeeon.pdf"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Deploy_NodeSource" >
      <description>
        <![CDATA[ The simplest task, ran by a bash engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/machine_learning_node_source_deploy_6.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
sessionid=$(curl -d "username=$variables_username&password=$variables_password" $variables_rmAddress"/login")

echo "The session ID with current user"

echo $sessionid
             
creds=$variables_credentials

echo "The credential for the current username and password generated from the Resource Manager portal"
             
curl -v -H "sessionid:$sessionid" -d "nodeSourceName=$variables_NodeSourceName&infrastructureType=org.ow2.proactive.resourcemanager.nodesource.infrastructure.LocalInfrastructure&&infrastructureParameters=$variables_nodesNumber&infrastructureParameters=30000&infrastructureParameters=" --data-urlencode "infrastructureFileParameters=$creds" -d "policyType=org.ow2.proactive.resourcemanager.nodesource.policy.StaticPolicy&policyParameters=tokens=$variables_NodeSourceName&policyParameters=ME" $variables_rmAddress"/nodesource/create"

echo " A node source is created"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
    </task>
    <task name="Deploy_Docker_Container" >
      <description>
        <![CDATA[ The simplest task, ran by a bash engine. ]]>
      </description>
      <genericInformation>
        <info name="NODE_ACCESS_TOKEN" value="MachineLearningNodes"/>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/machine_learning_node_source_deploy_6.png"/>
      </genericInformation>
      <depends>
        <task ref="Deploy_NodeSource"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
echo "Updating local docker image"
docker pull $variables_DOCKER_IMAGE
export RUN_DOCKER="docker run -dit -h dlm -w /root --name=$variables_CONTAINER_NAME $variables_DOCKER_IMAGE"
echo "Checking if docker container is running"
if [ $(docker inspect -f '{{.State.Running}}' $variables_CONTAINER_NAME) = "true" ]; 
then 
  echo "OK. The $variables_CONTAINER_NAME container is running!"
else 
  echo "$variables_CONTAINER_NAME container is not running."
  if [ $(docker inspect -f '{{.State.Running}}' $variables_CONTAINER_NAME) = "false" ]; 
  then 
    echo "Starting it..."
    docker start $variables_CONTAINER_NAME
  else 
    echo "Running it..."
    echo $RUN_DOCKER
    $($RUN_DOCKER)
    sleep 5
  fi
  if [ $(docker inspect -f '{{.State.Running}}' $variables_CONTAINER_NAME) = "true" ]; 
  then 
    echo "OK. The $variables_CONTAINER_NAME container is running now!"
  else 
    echo "$variables_CONTAINER_NAME container is not running."
    echo "An error occurred while running the container."
    exit
  fi
fi
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html><head><link rel="stylesheet" href="/studio/styles/studio-standalone.css"><style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:1139px;
            height:614px;
            }
        </style></head><body><div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-294.4875030517578px;left:-458.5px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_10" style="top: 299.5px; left: 463.5px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/machine_learning_node_source_deploy_6.png" width="20px">&nbsp;<span class="name">Deploy_NodeSource</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_13" style="top: 427.5px; left: 463.5px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/machine_learning_node_source_deploy_6.png" width="20px">&nbsp;<span class="name">Deploy_Docker_Container</span></a></div><svg style="position:absolute;left:515.5px;top:338.5px" width="34" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 13 88 C 23 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M14.721952,66.303232 L17.607310728060902,45.310978547585634 L11.939456689355112,52.582527942035654 L3.88660667009656,48.093473858230524 L14.721952,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M14.721952,66.303232 L17.607310728060902,45.310978547585634 L11.939456689355112,52.582527942035654 L3.88660667009656,48.093473858230524 L14.721952,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 516px; top: 329px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 529px; top: 457px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 529px; top: 417px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div></body></html>
 ]]>
    </visualization>
  </metadata>
</job>