<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.14" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="2" name="COCO_Annotator" onTaskError="continueJobExecution" priority="normal" tags="Artificial Intelligence,COCO Annotator,Service Automation,Data Annotation" projectName="4. Data Processing" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd">
  <variables>
    <variable model="" name="INSTANCE_NAME" value="coco-annotator-$PA_JOB_ID" description="The name of the service to be deployed." advanced="false" hidden="false"/>
    <variable name="SERVICE_PORT" value="-1" model="PA:Integer" description="The port that will be used to expose the service. Random value if -1 is set." advanced="true" hidden="false"/>
    <variable model="PA:Boolean" name="PROXYFIED" value="True" description="True if a proxy is needed to protect the access to the service endpoint." advanced="true" hidden="false"/>
    <variable model="" name="ENDPOINT_ID" value="coco-annotator-gui-$PA_JOB_ID" description="The endpoint identifier that will be used." advanced="false" hidden="true"/>
    <variable model="PA:Boolean" name="HTTP_ENABLED" value="True" description="True if an http endpoint will be exposed as the service endpoint." advanced="false" hidden="true"/>
  </variables>
  <description>
    <![CDATA[ Deployment of the COCO Annotator service. ]]>
  </description>
  <genericInformation>
<info name="bucketName" value="service-automation"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/coco-annotator.jpg"/>
<info name="pca.states" value="(VOID,RUNNING)"/>
<info name="Documentation" value="https://github.com/jsbroks/coco-annotator"/>
<info name="pca.service.id" value="COCO_Annotator"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task fork="true" name="Start_COCO_Annotator">
      <description>
        <![CDATA[ Pull COCO Annotator image and start a container ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/coco-annotator.jpg"/>
        <info name="task.documentation" value="https://github.com/jsbroks/coco-annotator"/>
      </genericInformation>
      <pre>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Pre_Start_Service/raw" language="groovy"></file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
echo BEGIN "$variables_PA_TASK_NAME"

################################################################################
### THIS PART IS IMAGE SPECIFIC. IF YOU NEED TO MODIFY SOMETHING, DO IT HERE ###
DOCKER_IMAGE=activeeon/coco-annotator:latest
SERVICE_HOST_PORT=$variables_SERVICE_PORT
################################################################################

echo "Pulling "$variables_PA_JOB_NAME" image"
docker pull $DOCKER_IMAGE

GET_RANDOM_PORT(){
    read LOWERPORT UPPERPORT < /proc/sys/net/ipv4/ip_local_port_range
    while :
    do
        RND_PORT="`shuf -i $LOWERPORT-$UPPERPORT -n 1`"
        ss -lpn | grep -q ":$RND_PORT " || break
    done
    echo $RND_PORT
}

if [ "$SERVICE_HOST_PORT" -eq "-1" ]; then
    echo "[INFO] Picking a random port number"
    SERVICE_HOST_PORT=$(GET_RANDOM_PORT)
fi
echo "The service will be initialized on port $SERVICE_HOST_PORT"


INSTANCE_NAME=$variables_INSTANCE_NAME
if [ -z "$INSTANCE_NAME" ]; then
    echo [ERROR] The INSTANCE_NAME is not provided by the user. Empty value is not allowed.
    exit 1
fi

if [ "$(docker ps --format '{{.Names}}' | grep ^$INSTANCE_NAME$)" ]; then
    RUNNING=$(docker inspect --format="{{ .State.Running }}" $INSTANCE_NAME 2> /dev/null)
    STOPPED=$(docker inspect --format="{{ .State.Status }}" $INSTANCE_NAME 2> /dev/null)
    if [ "$RUNNING" == "true" ]; then
        echo "$INSTANCE_NAME container is running"
    elif [ "$STOPPED" == "exited" ]; then
        echo "Starting $INSTANCE_NAME container"
        docker start $INSTANCE_NAME
    fi
else
    ################################################################################
    ### THIS PART IS IMAGE SPECIFIC. IF YOU NEED TO MODIFY SOMETHING, DO IT HERE ###
    echo "Running $INSTANCE_NAME container"
    F_PORT=$(GET_RANDOM_PORT)

    docker run -d --rm --name $INSTANCE_NAME -e SERVICE_HOST_PORT=$SERVICE_HOST_PORT -v /var/run/docker.sock:/var/run/docker.sock $DOCKER_IMAGE
    ################################################################################
fi

port=$SERVICE_HOST_PORT
echo "$port" > $INSTANCE_NAME"_port"

containerID=$(docker ps -aqf "name=^/$INSTANCE_NAME$")
echo "$containerID" > $INSTANCE_NAME"_containerID"

# Endpoint added to the job variables using a groovy post-script
echo END "$variables_PA_TASK_NAME"
]]>
          </code>
        </script>
      </scriptExecutable>
      <post>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Post_Start_Service/raw"/>
        </script>
      </post>
      <cleaning>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Clean_Start_Service/raw" language="groovy"></file>
        </script>
      </cleaning>
      <metadata>
        <positionTop>
            266.953125
        </positionTop>
        <positionLeft>
            195.83984375
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Loop_Over_Instance_Status">
      <description>
        <![CDATA[ Loop over service instance status and fetch docker container logs.
It will run every minute. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/coco-annotator.jpg"/>
        <info name="Documentation" value="PSA/PSAUserGuide.html"/>
        <info name="NODE_ACCESS_TOKEN" value="$INSTANCE_NAME"/>
      </genericInformation>
      <depends>
        <task ref="Start_COCO_Annotator"/>
      </depends>
      <scriptExecutable>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Check_Instance_Status/raw"/>
        </script>
      </scriptExecutable>
      <controlFlow>
        <loop target="Loop_Over_Instance_Status">
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Fetch_Logs/raw"/>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            394.94140625
        </positionTop>
        <positionLeft>
            195.83984375
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2646px;
            height:3501px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-261.953125px;left:-190.83984375px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_19" style="top: 266.953px; left: 195.84px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Pull COCO Annotator image and start a container"><img src="/automation-dashboard/styles/patterns/img/wf-icons/coco-annotator.jpg" width="20px">&nbsp;<span class="name">Start_COCO_Annotator</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_22" style="top: 394.942px; left: 195.84px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Loop over service instance status and fetch docker container logs.
It will run every minute."><img src="/automation-dashboard/styles/patterns/img/wf-icons/coco-annotator.jpg" width="20px">&nbsp;<span class="name">Loop_Over_Instance_Status</span></a></div><svg style="position:absolute;left:237px;top:307.5px" width="59" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 38 87 C 48 37 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M37.268423999999996,64.458666 L33.603807110973904,43.58833818617146 L30.42792321006124,52.24361180679859 L21.3887529177725,50.42883897611022 L37.268423999999996,64.458666" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M37.268423999999996,64.458666 L33.603807110973904,43.58833818617146 L30.42792321006124,52.24361180679859 L21.3887529177725,50.42883897611022 L37.268423999999996,64.458666" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:355.0266769263776px;top:344.5px" width="20.473323073622403" height="141" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 40 C -10 90 -10 -50 0 0 " transform="translate(19.973323073622403,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_33" style="position: absolute; transform: translate(-50%, -50%); left: 367px; top: 414.5px;">loop</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 237.5px; top: 298px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 275.5px; top: 425px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 275.5px; top: 385px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 365px; top: 385px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 365px; top: 425px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
