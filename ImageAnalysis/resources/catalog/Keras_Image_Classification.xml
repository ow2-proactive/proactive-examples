<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.11" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="2" name="Keras_Image_Classification" onTaskError="continueJobExecution" priority="normal" projectName="5. Custom AI workflows - Other libraries" xsi:schemaLocation="urn:proactive:jobdescriptor:3.11 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.11/schedulerjob.xsd">
  <variables>
    <variable name="CONTAINER_NAME" value="ml"/>
    <variable name="DOCKER_IMAGE" value="activeeon/dlm3"/>
    <variable name="INPUT_IMAGE" value="images/dog.jpg"/>
    <variable name="OUTPUT_IMAGE" value="output/dog.jpg"/>
  </variables>
  <description>
    <![CDATA[ Classify an input image using a pre-trained deep neural network ]]>
  </description>
  <genericInformation>
<info name="bucketName" value="deep-learning-workflows-dev2"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/keras.png"/>
<info name="Documentation" value="https://ow2-proactive.github.io/proactive-examples/MachineLearning/resources/doc/V1/automated-machine-learning-activeeon.pdf"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task name="Classify">
      <description>
        <![CDATA[ The simplest task, ran by a cmd engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/keras.png"/>
      </genericInformation>
      <depends>
        <task ref="Preview_Input"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
n=$(curl https://api.keyvalue.xyz/3e0701bd/myKey)
echo "key:[$n]"

docker exec $variables_CONTAINER_NAME /bin/sh -c "cd deeplearning_demo && python dl_image_prediction.py -i $variables_INPUT_IMAGE -o $variables_OUTPUT_IMAGE"

mkdir -p /tmp/$n
mkdir -p /tmp/$n/output

docker cp $variables_CONTAINER_NAME:/root/deeplearning_demo/$variables_OUTPUT_IMAGE /tmp/$n/$variables_OUTPUT_IMAGE
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <cleaning>
        <script>
          <code language="bash">
            <![CDATA[
docker stop $variables_CONTAINER_NAME
]]>
          </code>
        </script>
      </cleaning>
      <metadata>
        <positionTop>
            628
        </positionTop>
        <positionLeft>
            1124
        </positionLeft>
      </metadata>
    </task>
    <task name="Preview_Input">
      <description>
        <![CDATA[ The simplest task, ran by a groovy engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/keras.png"/>
      </genericInformation>
      <depends>
        <task ref="Download_Data"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def connection = new URL("https://api.keyvalue.xyz/3e0701bd/myKey").openConnection() as HttpURLConnection
connection.setRequestProperty('User-Agent', 'groovy')
connection.setRequestProperty('Accept', 'application/json')
def answer = connection.inputStream.text
def key = answer[0..-2]
println "key:["+key+"]"

def home = "/tmp"
def input_image = variables.get("INPUT_IMAGE")

image_path  = home + "/" + key + "/" + input_image

println "home: " + home 
println "input_image: " + input_image
println "image_path  : " + image_path  

def image_file = new File(image_path)
println "exists? " + image_file.exists()

result = image_file.getBytes()
resultMetadata.put("file.name", input_image)
resultMetadata.put("content.type", "image/jpg")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            500
        </positionTop>
        <positionLeft>
            1124
        </positionLeft>
      </metadata>
    </task>
    <task name="Preview_Output">
      <description>
        <![CDATA[ The simplest task, ran by a groovy engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/keras.png"/>
      </genericInformation>
      <depends>
        <task ref="Classify"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def connection = new URL("https://api.keyvalue.xyz/3e0701bd/myKey").openConnection() as HttpURLConnection
connection.setRequestProperty('User-Agent', 'groovy')
connection.setRequestProperty('Accept', 'application/json')
def answer = connection.inputStream.text
def key = answer[0..-2]
println "key:["+key+"]"

def home = "/tmp"
def output_image = variables.get("OUTPUT_IMAGE")

image_path  = home + "/" + key + "/" + output_image

println "home: " + home 
println "output_image: " + output_image
println "image_path  : " + image_path  

def image_file = new File(image_path)
println "exists? " + image_file.exists()

result = image_file.getBytes()
resultMetadata.put("file.name", output_image)
resultMetadata.put("content.type", "image/jpg")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            756
        </positionTop>
        <positionLeft>
            1124
        </positionLeft>
      </metadata>
    </task>
    <task name="Download_Data">
      <description>
        <![CDATA[ The simplest task, ran by a bash engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/keras.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
#
# unset RUN_DOCKER
# docker stop ml && docker rm ml
# export variables_CONTAINER_NAME=ml && export variables_INPUT_IMAGE=images/dog.jpg && export variables_OUTPUT_IMAGE=output/dog.jpg 
#
echo "Updating local docker image"
docker pull $variables_DOCKER_IMAGE
export RUN_DOCKER="docker run -dit -h dlm -w /root --name=$variables_CONTAINER_NAME $variables_DOCKER_IMAGE"
echo "Checking if docker container is running"
if [ $(docker inspect -f '{{.State.Running}}' $variables_CONTAINER_NAME) = "true" ]; 
then 
  echo "OK. The $variables_CONTAINER_NAME container is running!"
else 
  echo "$variables_CONTAINER_NAME container is not running."
  if [ $(docker inspect -f '{{.State.Running}}' $variables_CONTAINER_NAME) = "false" ]; 
  then 
    echo "Starting it..."
    docker start $variables_CONTAINER_NAME
  else 
    echo "Running it..."
    echo $RUN_DOCKER
    $($RUN_DOCKER)
    sleep 5
  fi
  if [ $(docker inspect -f '{{.State.Running}}' $variables_CONTAINER_NAME) = "true" ]; 
  then 
    echo "OK. The $variables_CONTAINER_NAME container is running now!"
  else 
    echo "$variables_CONTAINER_NAME container is not running."
    echo "An error occurred while running the container."
    exit
  fi
fi

n=$RANDOM
echo "Random generated number: $n"
curl -X POST https://api.keyvalue.xyz/3e0701bd/myKey/$n
echo "Stored key:"
curl https://api.keyvalue.xyz/3e0701bd/myKey

docker exec $variables_CONTAINER_NAME /bin/sh -c "rm -r -f deeplearning_demo"
docker exec $variables_CONTAINER_NAME /bin/sh -c "git clone https://github.com/carolinepacheco/deeplearning_demo.git"

mkdir -p /tmp/$n
mkdir -p /tmp/$n/images

docker cp $variables_CONTAINER_NAME:/root/deeplearning_demo/$variables_INPUT_IMAGE /tmp/$n/$variables_INPUT_IMAGE
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            372
        </positionTop>
        <positionLeft>
            1124
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html><head><link rel="stylesheet" href="/studio/styles/studio-standalone.css"><style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:1427px;
            height:812px;
            }
        </style></head><body><div style="position:relative;top:-220px;left:-905px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_701" style="top: 526px; left: 1005px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/keras.png" width="20px">&nbsp;<span class="name">Classify</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_704" style="top: 398px; left: 1005px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/keras.png" width="20px">&nbsp;<span class="name">Preview_Input</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_707" style="top: 654px; left: 1005px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/keras.png" width="20px">&nbsp;<span class="name">Preview_Output</span></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_710" style="top: 270px; left: 1005px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/keras.png" width="20px">&nbsp;<span class="name">Download_Data</span></a></div><svg style="position:absolute;left:1039.9817132113826px;top:437.5px" width="15.518286788617468" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 -10 50 0 0 " transform="translate(15.018286788617468,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path></svg><svg style="position:absolute;left:1044.5px;top:309.5px" width="24" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 13 50 3 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.5718437499999998,66.78168750000002 L5.7564728306810355,47.297356797305774 L-1.630943452167807,52.813340903872785 L-8.211873765446198,46.35645649947359 L-2.5718437499999998,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.5718437499999998,66.78168750000002 L5.7564728306810355,47.297356797305774 L-1.630943452167807,52.813340903872785 L-8.211873765446198,46.35645649947359 L-2.5718437499999998,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:1044.5px;top:565.5px" width="24" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 3 88 C 13 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M5.571843749999999,66.78168750000002 L11.211873765446198,46.35645649947359 L4.630943452167807,52.813340903872785 L-2.7564728306810355,47.297356797305774 L5.571843749999999,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M5.571843749999999,66.78168750000002 L11.211873765446198,46.35645649947359 L4.630943452167807,52.813340903872785 L-2.7564728306810355,47.297356797305774 L5.571843749999999,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 1045px; top: 556px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 1045px; top: 516px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 1045px; top: 428px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 1045px; top: 388px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 1048px; top: 684px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 1048px; top: 644px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 1048px; top: 300px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></body></html>
 ]]>
    </visualization>
  </metadata>
</job>
