<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.13" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="2" name="Restart_VM_${VCENTER_VM_NAME}" onTaskError="continueJobExecution" priority="normal" projectName="1. PowerCLI Simple Tasks" xsi:schemaLocation="urn:proactive:jobdescriptor:3.13 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.13/schedulerjob.xsd">
  <variables>
    <variable model="PA:URL" name="VCENTER_ENDPOINT" value="https://xxx-vcenter/rest"  description="VMware vCenter server base URL" group="VMware vCenter Connection"/>
    <variable model="" name="VCENTER_USER" value="" description="Basic authentication user" group="VMware vCenter Connection"/>
    <variable model="PA:HIDDEN" name="VCENTER_PASSWORD" value="" description="Basic authentication password" group="VMware vCenter Connection"/>
    <variable model="" name="VCENTER_VM_NAME" value="" description="Name of the VM to restart" group="VMware vCenter parameters"/>
  </variables>
  <genericInformation>
<info name="bucketName" value="vmware"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/powercli.png"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task fork="true" maxNumberOfExecution="1" name="restart_vm">
      <description>
        <![CDATA[ The simplest task, ran by a bash engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/powercli.png"/>
      </genericInformation>
      <selection>
        <script type="static">
          <code language="groovy">
            <![CDATA[
/**
 * Script which verifies that the current node runs on a host which matches the given regular expression
 *
 * Arguments:
 * machine host name (regexp)
 */

import com.google.common.base.Strings;
import org.ow2.proactive.scripting.helper.selection.SelectionUtils

if (args.length != 1) {
    println "Incorrect number of arguments, expected 1, received " + args.length;
    selected = false;
    return;
}

machineName = args[0]

if (Strings.isNullOrEmpty(machineName)) {
    println "Given host name was empty";
    selected = false;
    return;
}

machineName = machineName.trim()

println "Hostname " + nodehost + " (expected :  " + machineName + ")";

selected = SelectionUtils.checkHostName(machineName)
]]>
          </code>
          <arguments>
            <argument value="SRV-EXEC"/>
          </arguments>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="powershell">
            <![CDATA[
Import-Module VMware.VimAutomation.Core

$VM = $variables.Get_Item("VCENTER_VM_NAME")

Connect-VIServer -Protocol https -Server $variables.Get_Item("VCENTER_ENDPOINT") -User $variables.Get_Item("VCENTER_USER") -Password $variables.Get_Item("VCENTER_PASSWORD") -WarningAction SilentlyContinue | out-null

$commandResult = Get-VM -Name $VM -ErrorAction Stop

If ($commandResult.PowerState -eq ’PoweredOn’) 
{ 
   Restart-VMGuest -VM $VM -ErrorAction Stop -Confirm:$false | Out-Host
   
   $GuestState =  Get-VMGuest -VM $VM -ErrorAction Stop
   While ($GuestState.State -ne ’Running’)
   {
    Start-Sleep -Seconds 1 
    $GuestState =  Get-VMGuest -VM $VM -ErrorAction Stop
   }
} 
ElseIf ($commandResult.PowerState -eq ’PoweredOff’)  
{
   Write-Host "VM $VM is stopped, starting it .."
   
   Start-VM -VM $VM -Confirm:$false -RunAsync:$false -ErrorAction Stop | Out-Host
}
Else 
{
	Write-Error "Unexpected command result: $commandResult" 
}

Disconnect-VIServer -Server $variables.Get_Item("VCENTER_ENDPOINT") -confirm:$false |  out-null
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            169.9375
        </positionTop>
        <positionLeft>
            417.875
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2144px;
            height:2780px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-164.9375px;left:-412.875px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_136" style="top: 169.953px; left: 417.875px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a bash engine."><img src="/studio/images/PowerShell.png" width="20px">&nbsp;<span class="name">restart_vm</span></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 458px; top: 200px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
