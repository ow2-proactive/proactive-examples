<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Visdom" tags="Visualization,Service Automation,Visdom" projectName="Service Automation - Deployment" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="INSTANCE_NAME" value="visdom-server-$PA_JOB_ID"  description="The name of the service to be deployed."  advanced="false" hidden="false"/>
    <variable name="ENDPOINT_ID" value="visdom-gui-$PA_JOB_ID"  description="The endpoint identifier that will be used."  advanced="false" hidden="true"/>
    <variable name="PROXYFIED" value="True" model="PA:Boolean" description="True if a proxy is needed to protect the access to the service endpoint."  advanced="true" hidden="false"/>
    <variable name="HTTP_ENABLED" value="True" model="PA:Boolean" description="True if an http endpoint will be exposed as the service endpoint."  advanced="false" hidden="true"/>
    <variable name="SERVICE_PORT" value="-1" model="PA:INTEGER" description="The port that will be used to expose the service. Random value if -1 is set."  advanced="true" hidden="false"/>
    <variable name="VISDOM_ENABLE_LOGIN" value="False" model="PA:Boolean" description="True if the service requires basic http authentication."  advanced="false" hidden="false"/>
    <variable name="VISDOM_USERNAME" value="admin"  description="If the service requires basic http authentication, enter a username."  advanced="false" hidden="false"/>
    <variable name="VISDOM_PASSWORD" value="ENC(GbFgoYJUk3y3zWajMqzWEA==)" model="PA:HIDDEN" description="If the service requires basic http authentication, enter a password."  advanced="false" hidden="false"/>
    <variable name="VISDOM_USERNAME_HANDLER" value="" model="PA:SPEL(variables[&#x27;VISDOM_ENABLE_LOGIN&#x27;].toLowerCase() == &#x27;true&#x27; ? showVar(&#x27;VISDOM_USERNAME&#x27;) : hideVar(&#x27;VISDOM_USERNAME&#x27;))"   advanced="false" hidden="true"/>
    <variable name="VISDOM_PASSWORD_HANDLER" value="" model="PA:SPEL(variables[&#x27;VISDOM_ENABLE_LOGIN&#x27;].toLowerCase() == &#x27;true&#x27; ? showVar(&#x27;VISDOM_PASSWORD&#x27;) : hideVar(&#x27;VISDOM_PASSWORD&#x27;))"   advanced="false" hidden="true"/>
    <variable name="ENGINE" value="docker" model="PA:List(docker,singularity)" description="Container platform used for executing the workflow tasks." group="Container management" advanced="false" hidden="false"/>
    <variable name="DOCKER_IMAGE" value="activeeon/visdom_server"  description="Name of the docker image used to run the service" group="Container management" advanced="true" hidden="false"/>
    <variable name="SINGULARITY_IMAGE_PATH" value="/tmp/visdom_server.sif"  description="Location of the singularity image on the node file system. If the image does not exist in the specified location, it is possible to automatically built it from the specified Docker image." group="Singularity management" advanced="true" hidden="false"/>
    <variable name="BUILD_IMAGE_IF_NOT_EXISTS" value="True" model="PA:Boolean" description="Pull and build the singularity image if the Singularity Image File (SIF) file is not available." group="Singularity management" advanced="true" hidden="false"/>
    <variable name="SINGULARITY_IMAGE_PATH_HANDLER" value="" model="PA:SPEL(variables[&#x27;ENGINE&#x27;].toLowerCase() == &#x27;singularity&#x27; ? showVar(&#x27;SINGULARITY_IMAGE_PATH&#x27;) : hideVar(&#x27;SINGULARITY_IMAGE_PATH&#x27;))"  group="Singularity management" advanced="false" hidden="true"/>
    <variable name="SINGULARITY_BUILD_IMAGE_HANDLER" value="" model="PA:SPEL(variables[&#x27;ENGINE&#x27;].toLowerCase() == &#x27;singularity&#x27; ? showVar(&#x27;BUILD_IMAGE_IF_NOT_EXISTS&#x27;) : hideVar(&#x27;BUILD_IMAGE_IF_NOT_EXISTS&#x27;))"  group="Singularity management" advanced="false" hidden="true"/>
    <variable name="HOST" value="" model="PA:MODEL_FROM_URL(${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/hosts)" description="Host where the Visdom service will be deployed (optional)"  advanced="true" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ Deployment of the Visdom server. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="service-automation"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
    <info name="pca.states" value="(VOID,RUNNING)"/>
    <info name="NODE_ACCESS_TOKEN" value="$NODE_ACCESS_TOKEN"/>
    <info name="Documentation" value="PSA/PSAUserGuide.html#_visdom"/>
    <info name="pca.service.id" value="Visdom"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Start_Visdom_S" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Pull Visdom image and start a container ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="https://research.fb.com/downloads/visdom/"/>
        <info name="DISABLE_PTK" value="true"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name_optional/raw" language="groovy">
            <arguments>
              <argument value="${HOST}"/>
            </arguments>
          </file>
        </script>
      </selection>
      <pre>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Pre_Start_Service/raw" language="groovy"></file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
echo BEGIN "$variables_PA_TASK_NAME"

PATH=$PATH:/usr/sbin

GET_RANDOM_PORT(){
    PCA_SERVICES_PORT_RANGE_FILE=$variables_PA_SCHEDULER_HOME/config/pca_services_port_range
    if [[ -f "$PCA_SERVICES_PORT_RANGE_FILE" ]]; then
        read LOWERPORT UPPERPORT < $PCA_SERVICES_PORT_RANGE_FILE
    else
        read LOWERPORT UPPERPORT < /proc/sys/net/ipv4/ip_local_port_range
    fi
    while :
    do
        RND_PORT="`shuf -i $LOWERPORT-$UPPERPORT -n 1`"
        ss -lpn | grep -q ":$RND_PORT " || break
    done
    echo $RND_PORT
}

export XDG_RUNTIME_DIR=/run/user/$UID

DOCKER_IMAGE=$variables_DOCKER_IMAGE
INSTANCE_NAME=$variables_INSTANCE_NAME
SIF_IMAGE_PATH=$variables_SINGULARITY_IMAGE_PATH
BUILD_IMAGE=$variables_BUILD_IMAGE_IF_NOT_EXISTS
VISDOM_ENABLE_LOGIN=$variables_VISDOM_ENABLE_LOGIN
VISDOM_USERNAME=$variables_VISDOM_USERNAME
VISDOM_PASSWORD=$variables_VISDOM_PASSWORD
VISDOM_HOST_PORT=$variables_SERVICE_PORT

if [ "$VISDOM_HOST_PORT" -eq "-1" ]; then
    echo "[INFO] Picking a random port number"
    VISDOM_HOST_PORT=$(GET_RANDOM_PORT)
fi
echo "The service will be initialized on port $VISDOM_HOST_PORT"

if [ -z "$INSTANCE_NAME" ]; then
    echo "[ERROR] The INSTANCE_NAME is not provided by the user. Empty value is not allowed."
    exit 1
fi

if [ -z "$SIF_IMAGE_PATH" ]; then
    echo "[ERROR] The singularity image path is not provided by the user. Empty value is not allowed."
    exit 1
else
    echo "Using $SIF_IMAGE_PATH to start the service"
fi

if [ "$(singularity instance list | grep "^$INSTANCE_NAME$")" ]; then
    echo "[ERROR] $INSTANCE_NAME is already used by another service instance."
    exit 128
else
    if [ "${BUILD_IMAGE,,}" = "true" ]; then
        #if [ -d "$SIF_IMAGE_PATH" ]; then
        #   echo "[INFO] Removing existing image on $SIF_IMAGE_PATH"
        #   rm -Rf $SIF_IMAGE_PATH
        #fi
        if [ -e "$SIF_IMAGE_PATH" ]; then
            echo "[INFO] Using existing image on $SIF_IMAGE_PATH"
        else
            echo "[INFO] Building the image on $SIF_IMAGE_PATH"
            echo "[INFO] singularity build --sandbox $SIF_IMAGE_PATH docker://$DOCKER_IMAGE"
            singularity build --sandbox $SIF_IMAGE_PATH docker://$DOCKER_IMAGE
        fi
        #echo "[INFO] Building the image on $SIF_IMAGE_PATH"
        #echo "[INFO] singularity build --sandbox $SIF_IMAGE_PATH docker://$DOCKER_IMAGE"
        #singularity build --sandbox $SIF_IMAGE_PATH docker://$DOCKER_IMAGE
    fi
    
    echo "[INFO] Starting the singularity instance $INSTANCE_NAME"
    echo "[INFO] singularity instance start --writable --no-home $SIF_IMAGE_PATH $INSTANCE_NAME"
    singularity instance start --writable --no-home $SIF_IMAGE_PATH $INSTANCE_NAME
    
    echo "[INFO] SINGULARITYENV_VISDOM_PORT=$VISDOM_HOST_PORT SINGULARITYENV_VISDOM_ENABLE_LOGIN=$VISDOM_ENABLE_LOGIN SINGULARITYENV_VISDOM_USERNAME=$VISDOM_USERNAME SINGULARITYENV_VISDOM_PASSWORD=$VISDOM_PASSWORD singularity run --writable instance://$INSTANCE_NAME"
    #SINGULARITYENV_VISDOM_PORT=$VISDOM_HOST_PORT SINGULARITYENV_VISDOM_ENABLE_LOGIN=$VISDOM_ENABLE_LOGIN SINGULARITYENV_VISDOM_USERNAME=$VISDOM_USERNAME SINGULARITYENV_VISDOM_PASSWORD=$VISDOM_PASSWORD singularity run --writable instance://$INSTANCE_NAME
    export SINGULARITYENV_VISDOM_PORT=$VISDOM_HOST_PORT
    export SINGULARITYENV_VISDOM_ENABLE_LOGIN=$VISDOM_ENABLE_LOGIN
    export SINGULARITYENV_VISDOM_USERNAME=$VISDOM_USERNAME
    export SINGULARITYENV_VISDOM_PASSWORD=$VISDOM_PASSWORD
    bash -c "nohup singularity run --writable instance://$INSTANCE_NAME > /tmp/$INSTANCE_NAME.log 2>&1 < /dev/null &"
    sleep 3
    cat /tmp/$INSTANCE_NAME.log
    
    if [ "$(singularity instance list | grep "^$INSTANCE_NAME$")" ]; then
        echo $INSTANCE_NAME > $INSTANCE_NAME"_status"
    fi
fi

echo "$VISDOM_HOST_PORT" > $INSTANCE_NAME"_port"

# Endpoint added to the job variables using a groovy post-script
echo END "$variables_PA_TASK_NAME"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <post>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Post_Start_Service/raw" language="groovy"></file>
        </script>
      </post>
      <cleaning>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Clean_Start_Service/raw" language="groovy"></file>
        </script>
      </cleaning>
      <metadata>
        <positionTop>
            309.0687484741211
        </positionTop>
        <positionLeft>
            418
        </positionLeft>
      </metadata>
    </task>
    <task name="Loop_Over_Instance_Status_S" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Loop over service instance status and fetch docker container logs.
It will run every minute. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="Documentation" value="PSA/PSAUserGuide.html"/>
        <info name="NODE_ACCESS_TOKEN" value="$INSTANCE_NAME"/>
      </genericInformation>
      <depends>
        <task ref="Start_Visdom_S"/>
      </depends>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Check_Instance_Status_Singularity/raw" language="groovy"></file>
        </script>
      </scriptExecutable>
      <controlFlow >
        <loop target="Loop_Over_Instance_Status_S">
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Fetch_Logs/raw" language="groovy"></file>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            437.0687484741211
        </positionTop>
        <positionLeft>
            418
        </positionLeft>
      </metadata>
    </task>
    <task name="Start_Visdom_D" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Pull Visdom image and start a container ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="https://research.fb.com/downloads/visdom/"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name_optional/raw" language="groovy">
            <arguments>
              <argument value="${HOST}"/>
            </arguments>
          </file>
        </script>
      </selection>
      <pre>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Pre_Start_Service/raw" language="groovy"></file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
echo BEGIN "$variables_PA_TASK_NAME"

PATH=$PATH:/usr/sbin

GET_RANDOM_PORT(){
    PCA_SERVICES_PORT_RANGE_FILE=$variables_PA_SCHEDULER_HOME/config/pca_services_port_range
    if [[ -f "$PCA_SERVICES_PORT_RANGE_FILE" ]]; then
        read LOWERPORT UPPERPORT < $PCA_SERVICES_PORT_RANGE_FILE
    else
        read LOWERPORT UPPERPORT < /proc/sys/net/ipv4/ip_local_port_range
    fi
    while :
    do
        RND_PORT="`shuf -i $LOWERPORT-$UPPERPORT -n 1`"
        ss -lpn | grep -q ":$RND_PORT " || break
    done
    echo $RND_PORT
}

DOCKER_IMAGE=$variables_DOCKER_IMAGE
INSTANCE_NAME=$variables_INSTANCE_NAME
VISDOM_ENABLE_LOGIN=$variables_VISDOM_ENABLE_LOGIN
VISDOM_USERNAME=$variables_VISDOM_USERNAME
VISDOM_PASSWORD=$variables_VISDOM_PASSWORD
VISDOM_INTERNAL_PORT=8097
VISDOM_HOST_PORT=$variables_SERVICE_PORT

echo "Pulling "$variables_PA_JOB_NAME" image"
docker pull $DOCKER_IMAGE

if [ "$VISDOM_HOST_PORT" -eq "-1" ]; then
    echo "Picking a random port number"
    VISDOM_HOST_PORT=$(GET_RANDOM_PORT)
fi
echo "The service will be initialized on port $VISDOM_HOST_PORT"

if [ -z "$INSTANCE_NAME" ]; then
    echo [ERROR] The INSTANCE_NAME is not provided by the user. Empty value is not allowed.
    exit 1
fi

if [ "$(docker ps --format '{{.Names}}' | grep ^$INSTANCE_NAME$)" ]; then
    RUNNING=$(docker inspect --format="{{ .State.Running }}" $INSTANCE_NAME 2> /dev/null)
    STOPPED=$(docker inspect --format="{{ .State.Status }}" $INSTANCE_NAME 2> /dev/null)
    if [ "${RUNNING,,}" = "true" ]; then
        echo "$INSTANCE_NAME container is running"
    elif [ "${STOPPED,,}" = "exited" ]; then
        echo "Starting $INSTANCE_NAME container"
        docker start $INSTANCE_NAME
    fi
else
    echo "Running $INSTANCE_NAME container"
    echo docker run -d --name $INSTANCE_NAME -p $VISDOM_HOST_PORT:$VISDOM_INTERNAL_PORT -e VISDOM_ENABLE_LOGIN=$VISDOM_ENABLE_LOGIN -e VISDOM_USERNAME=$VISDOM_USERNAME -e VISDOM_PASSWORD=$VISDOM_PASSWORD $DOCKER_IMAGE
    docker run -d --name $INSTANCE_NAME -p $VISDOM_HOST_PORT:$VISDOM_INTERNAL_PORT -e VISDOM_ENABLE_LOGIN=$VISDOM_ENABLE_LOGIN -e VISDOM_USERNAME=$VISDOM_USERNAME -e VISDOM_PASSWORD=$VISDOM_PASSWORD $DOCKER_IMAGE
fi

VISDOM_PORT=$(docker inspect --format='{{(index (index .NetworkSettings.Ports "'$VISDOM_INTERNAL_PORT'/tcp") 0).HostPort}}' $INSTANCE_NAME)
echo "$VISDOM_PORT" > $INSTANCE_NAME"_port"

containerID=$(docker ps -aqf "name=^$INSTANCE_NAME$")
echo "$containerID" > $INSTANCE_NAME"_containerID"

echo END "$variables_PA_TASK_NAME"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <post>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Post_Start_Service/raw" language="groovy"></file>
        </script>
      </post>
      <cleaning>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Clean_Start_Service/raw" language="groovy"></file>
        </script>
      </cleaning>
      <metadata>
        <positionTop>
            309.0687484741211
        </positionTop>
        <positionLeft>
            630
        </positionLeft>
      </metadata>
    </task>
    <task name="Loop_Over_Instance_Status_D" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Loop over service instance status and fetch docker container logs.
It will run every minute. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="Documentation" value="PSA/PSAUserGuide.html"/>
        <info name="NODE_ACCESS_TOKEN" value="$INSTANCE_NAME"/>
      </genericInformation>
      <depends>
        <task ref="Start_Visdom_D"/>
      </depends>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Check_Instance_Status/raw" language="groovy"></file>
        </script>
      </scriptExecutable>
      <controlFlow >
        <loop target="Loop_Over_Instance_Status_D">
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Fetch_Logs/raw" language="groovy"></file>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            437.0687484741211
        </positionTop>
        <positionLeft>
            630
        </positionLeft>
      </metadata>
    </task>
    <task name="Condition" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
        <info name="Documentation" value="user/ProActiveUserGuide.html#_branch"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def engine = variables.get("ENGINE")

println("[INFO] Starting a Visdom server in a " + engine + " container.")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <if target="Start_Visdom_S"
        else="Start_Visdom_D">
          <script>
            <code language="groovy">
              <![CDATA[
def engine = variables.get("ENGINE")
if(engine.toLowerCase().equals("singularity")){
    branch = "if";
} else {
    branch = "else";
}
]]>
            </code>
          </script>
        </if>
      </controlFlow>
      <metadata>
        <positionTop>
            181.0687484741211
        </positionTop>
        <positionLeft>
            524
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2256px;
            height:2189px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-176.0687484741211px;left:-413px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2844" style="top: 309.069px; left: 418px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Pull Visdom image and start a container"><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Start_Visdom_S</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2847" style="top: 437.069px; left: 418px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Loop over service instance status and fetch docker container logs.
It will run every minute."><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Loop_Over_Instance_Status_S</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2850" style="top: 309.069px; left: 630px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Pull Visdom image and start a container"><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Start_Visdom_D</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2853" style="top: 437.069px; left: 630px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Loop over service instance status and fetch docker container logs.
It will run every minute."><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Loop_Over_Instance_Status_D</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_2856" style="top: 181.069px; left: 524px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Condition</span></a></div><svg style="position:absolute;left:461px;top:348.5px" width="54.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 33.5 88 C 43.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M33.19404300000001,65.364084 L30.65373961543506,44.32728627044126 L27.01833893502241,52.799822012051045 L18.0894776274861,50.50299033541886 L33.19404300000001,65.364084" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M33.19404300000001,65.364084 L30.65373961543506,44.32728627044126 L27.01833893502241,52.799822012051045 L18.0894776274861,50.50299033541886 L33.19404300000001,65.364084" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:572.0266769263776px;top:386.5px" width="20.473323073622403" height="141" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C -10 90 -10 -50 0 0 " transform="translate(19.973323073622403,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_2867" style="position: absolute; transform: translate(-50%, -50%); left: 584px; top: 456.5px;">loop</div><svg style="position:absolute;left:673px;top:348.5px" width="54.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 33.5 88 C 43.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M33.19404300000001,65.364084 L30.65373961543506,44.32728627044126 L27.01833893502241,52.799822012051045 L18.0894776274861,50.50299033541886 L33.19404300000001,65.364084" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M33.19404300000001,65.364084 L30.65373961543506,44.32728627044126 L27.01833893502241,52.799822012051045 L18.0894776274861,50.50299033541886 L33.19404300000001,65.364084" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:784.0266769263776px;top:386.5px" width="20.473323073622403" height="141" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C -10 90 -10 -50 0 0 " transform="translate(19.973323073622403,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.4569999999999963,49.16001999999999 L-8.714346841294152,28.91537600442066 L-10.77778447022079,37.90104376767174 L-19.973323073622403,37.23616047464146 L-2.4569999999999963,49.16001999999999" class="" stroke="#316b31" fill="#316b31" transform="translate(19.973323073622403,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_2876" style="position: absolute; transform: translate(-50%, -50%); left: 796px; top: 456.5px;">loop</div><svg style="position:absolute;left:407.5px;top:220.5px" width="127" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 116 50 106 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M11.373775999999998,61.830692 L32.1119500181267,57.480043957018964 L23.35668294178916,54.591220940287066 L24.87247895841376,45.4971370152298 L11.373775999999998,61.830692" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M11.373775999999998,61.830692 L32.1119500181267,57.480043957018964 L23.35668294178916,54.591220940287066 L24.87247895841376,45.4971370152298 L11.373775999999998,61.830692" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_2882" style="position: absolute; transform: translate(-50%, -50%); left: 470.5px; top: 264.5px;">if</div><svg style="position:absolute;left:513.5px;top:220.5px" width="127" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 106 88 C 116 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M94.62622400000001,61.830692 L81.12752104158622,45.49713701522982 L82.64331705821084,54.59122094028708 L73.88804998187331,57.480043957018985 L94.62622400000001,61.830692" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M94.62622400000001,61.830692 L81.12752104158622,45.49713701522982 L82.64331705821084,54.59122094028708 L73.88804998187331,57.480043957018985 L94.62622400000001,61.830692" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_2886" style="position: absolute; transform: translate(-50%, -50%); left: 576.5px; top: 264.5px;">else</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 461.5px; top: 339px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 408px; top: 299px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 495px; top: 467px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 495px; top: 427px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 582px; top: 427px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 582px; top: 467px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 673.5px; top: 339px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 620px; top: 299px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 707px; top: 467px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 707px; top: 427px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 794px; top: 427px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 794px; top: 467px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 564px; top: 211px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint if-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 514px; top: 211px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>