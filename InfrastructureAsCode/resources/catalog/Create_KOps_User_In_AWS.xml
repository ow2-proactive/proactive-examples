<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.14" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="1" name="Create_KOps_User_In_AWS" onTaskError="suspendTask" priority="normal" projectName="Kubernetes workflows" tags="IAM,kOps,K8S,AWS,Kubernetes" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd">
  <variables>
    <variable advanced="false" description="AWS access key to be used by AWS CLI" group="AWS Subscription" hidden="false" model="PA:NOT_EMPTY_STRING" name="AWS_ACCESS_KEY" value="my_aws_access_key"/>
    <variable advanced="false" description="AWS secret key to be used by AWS CLI" group="AWS Subscription" hidden="false" model="PA:CREDENTIAL" name="AWS_SECRET_KEY" value="$AWS_ACCESS_KEY"/>
    <variable advanced="true" description="AWS region to be used by AWS CLI" group="AWS Subscription" hidden="false" model="PA:NOT_EMPTY_STRING" name="AWS_REGION" value="eu-west-3"/>
    <variable advanced="false" description="Name of the user to be created for Kops" group="Kubernetes Parameters" hidden="false" model="PA:NOT_EMPTY_STRING" name="AWS_IAM_USER_NAME" value="kops"/>
    <variable advanced="false" description="Name of the user group to be created for Kops" group="Kubernetes Parameters" hidden="false" model="PA:NOT_EMPTY_STRING" name="AWS_IAM_GROUP_NAME" value="kops"/>
  </variables>
  <description>
    <![CDATA[ A workflow that creates a user and a group in AWS to be used by kOps. The privileges of the user and its group are configured to fit the requirements of kOps.
The workflow requires Docker to be installed in the underlying host where it will be executed, since AWS CLI runs inside a docker container (i.e., based on the Docker image activeeon/k8s-tools). ]]>
  </description>
  <genericInformation>
<info name="bucketName" value="it-infrastructure-as-code"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/amazon.png"/>
<info name="Documentation" value="https://kops.sigs.k8s.io/"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task fork="true" name="Create_AWS_IAM_User">
      <description>
        <![CDATA[ A bash task that creates a user and a group in AWS to be used by kOps. The privileges of the user and its group are configured to fit the requirements of kOps.
The task requires Docker to be installed in the underlying host where it will be executed, since AWS CLI runs inside a docker container (i.e., based on the Docker image activeeon/k8s-tools). ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/amazon.png"/>
        <info name="PRE_SCRIPT_AS_FILE" value="Create-Kops-User-In-AWS.sh"/>
      </genericInformation>
      <depends>
        <task ref="Read_AWS_Credentials"/>
      </depends>
      <pre>
        <script>
          <file language="shell" url="${PA_CATALOG_REST_URL}/buckets/it-infrastructure-as-code/resources/Create-kOps-User-In-AWS/raw"/>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
if [ ! -f "Create-Kops-User-In-AWS.sh" ]; then
    echo "User creation script not found !!" && exit 1
fi
chmod +x Create-Kops-User-In-AWS.sh

mkdir -p /tmp/kops/$variables_PA_JOB_ID/.aws
AWS_DIR=/tmp/kops/$variables_PA_JOB_ID/.aws

echo "[default]" > $AWS_DIR/config
echo "region=$variables_AWS_REGION" >> $AWS_DIR/config
echo "output=json" >> $AWS_DIR/config

echo "[default]" > $AWS_DIR/credentials
echo "aws_access_key_id=$variables_AWS_ACCESS_KEY" >> $AWS_DIR/credentials
echo "aws_secret_access_key=$variables_AWS_ACCESS_SECRET" >> $AWS_DIR/credentials

# Alias for executing Kops, Kubectl and aws commands
K8S_TOOLS="docker run --rm -i -v $(pwd):/scripts -v $AWS_DIR:/root/.aws activeeon/k8s-tools"

# Create KOPS user in AWS
$K8S_TOOLS /scripts/Create-Kops-User-In-AWS.sh $variables_AWS_IAM_USER_NAME $variables_AWS_IAM_GROUP_NAME
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            434.484375
        </positionTop>
        <positionLeft>
            586
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Read_AWS_Credentials">
      <description>
        <![CDATA[ A groovy task that reads the AWS access credentials from the ProActive buit-in vault (called 3rd Party Credentials vault) ]]>
      </description>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
variables.put("AWS_ACCESS_SECRET",credentials.get(variables.get("AWS_ACCESS_KEY")))
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            306.5
        </positionTop>
        <positionLeft>
            586
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2725px;
            height:3120px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-301.5px;left:-581px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_ active-task" id="jsPlumb_1_386" style="top: 434.5px; left: 586px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A bash task that creates a user and a group in AWS to be used by kOps. The privileges of the user and its group are configured to fit the requirements of kOps.
The task requires Docker to be installed in the underlying host where it will be executed, since AWS CLI runs inside a docker container (i.e., based on the Docker image activeeon/k8s-tools)."><img src="/automation-dashboard/styles/patterns/img/wf-icons/amazon.png" width="20px">&nbsp;<span class="name">Create_AWS_IAM_User</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_389" style="top: 306.5px; left: 586px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A groovy task that reads the AWS access credentials from the ProActive buit-in vault (called 3rd Party Credentials vault)"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Read_AWS_Credentials</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><svg style="position:absolute;left:645.0235032915331px;top:346.5px" width="15.47649670846693" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 87 C -10 37 -10 50 0 0 " transform="translate(14.97649670846693,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 650px; top: 464px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 650px; top: 424px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 650px; top: 337px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
