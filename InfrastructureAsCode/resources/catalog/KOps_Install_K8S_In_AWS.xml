<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="KOps_Install_K8S_In_AWS" projectName="Kubernetes workflows" tags="kOps,K8S,SSH,Enterprise-grade,AWS,Kubernetes" priority="normal" onTaskError="suspendTask"  maxNumberOfExecution="1"  >
  <variables>
    <variable name="AWS_ACCESS_KEY" value="kOps_aws_access_key" model="PA:NOT_EMPTY_STRING" description="AWS access key used by kOps to create AWS resources." group="AWS Subscription" advanced="false" hidden="false"/>
    <variable name="AWS_SECRET_KEY" value="$AWS_ACCESS_KEY" model="PA:CREDENTIAL" description="AWS secret key used by kOps to create AWS resources. Must be added to the third-party credentials vault." group="AWS Subscription" advanced="false" hidden="false"/>
    <variable name="AWS_REGION" value="eu-west-3" model="PA:NOT_EMPTY_STRING" description="AWS region where the cluster deployment will take place" group="AWS Subscription" advanced="true" hidden="false"/>
    <variable name="K8S_DOMAIN" value="activeeon-k8s.net" model="PA:NOT_EMPTY_STRING" description="An AWS Route53 domain, used as the main domain of the Kubernetes cluster." group="Kubernetes Parameters" advanced="false" hidden="false"/>
    <variable name="K8S_CLUSTER_NAME" value="kubernetes-${PA_JOB_ID}" model="PA:NOT_EMPTY_STRING" description="Name of the Kubernetes cluster, to be used as the sub-domain of the Kubernetes cluster." group="Kubernetes Parameters" advanced="false" hidden="false"/>
    <variable name="K8S_NODE_COUNT" value="2" model="PA:INTEGER" description="Number of the worker nodes in the Kubernetes cluster." group="Kubernetes Parameters" advanced="false" hidden="false"/>
    <variable name="K8S_NODE_SIZE" value="t3.large" model="PA:NOT_EMPTY_STRING" description="Size of the worker nodes (i.e., EC2 instances) in the Kubernetes cluster." group="Kubernetes Parameters" advanced="true" hidden="false"/>
    <variable name="K8S_STATE_STORE" value="activeeon-k8s-state-store" model="PA:NOT_EMPTY_STRING" description="Name of the AWS S3 bucket to be used for storing the state information of the Kubernetes cluster. If the bucket does not exist, it will be created and configured by the workflows." group="Kubernetes Parameters" advanced="true" hidden="false"/>
    <variable name="K8S_OIDC_STORE" value="activeeon-k8s-oidc-store" model="PA:NOT_EMPTY_STRING" description="Name of the AWS S3 bucket to be used for storing the OIDC access information of the Kubernetes cluster. If the bucket does not exist, it will be created and configured by the workflows." group="Kubernetes Parameters" advanced="true" hidden="false"/>
    <variable name="USER_OF_AWS_AMI" value="ubuntu" model="PA:NOT_EMPTY_STRING" description="Standard user of the AWS AMI used for the nodes of the kubernetes cluster." group="Kubernetes Parameters" advanced="true" hidden="true"/>
    <variable name="DELETE_AWS_BUCKETS" value="false" model="PA:BOOLEAN" description="Indicate whether to remove the S3 buckets (i.e., the state and OIDC stores) when deleting the Kubernetes cluster. By default, this variable is set to false as the same buckets can be used by multiple Kubernetes clusters." group="Kubernetes Parameters"  hidden="false"/>
    <variable name="DASHBOARD_TOKEN_DURATION" value="2h" model="PA:NOT_EMPTY_STRING" description="Validity duration of the token needed to access the Kubernetes Dashboard. It can be in seconds, minutes or hours (e.g., 360s, 60m, 24h)" group="Kubernetes Parameters" advanced="true" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ A workflow that uses the kOps tool to install an enterprise-grade Kubernetes cluster in AWS. Once the installation is done, the workflow enables an SSH access to  the master node of the Kubernetes cluster. The workflow requires Docker to be installed in the underlying hosts where it will be executed, since the tools it uses (kOps, Kubectl and AWS CLI) are executed in a docker container (i.e., based on the Docker image activeeon/k8s-tools). ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="it-infrastructure-as-code"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/kops.svg"/>
    <info name="Documentation" value="https://kops.sigs.k8s.io/getting_started/aws/"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Create_AWS_Buckets" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A bash task that uses AWS CLI to create S3 buckets for the Kubernetes cluster (i.e., the state and OIDC stores), if they do not exist. AWS CLI is executed in a docker container (i.e., based on the Docker image activeeon/k8s-tools). This task requires then Docker to be installed in its underlying host. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/amazon.png"/>
        <info name="PRE_SCRIPT_AS_FILE" value="Create-Kops-Buckets-In-AWS.sh"/>
      </genericInformation>
      <depends>
        <task ref="Read_AWS_Credentials"/>
      </depends>
      <pre>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/it-infrastructure-as-code/resources/Create-kOps-Buckets-In-AWS/raw" language="shell"></file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
if [ ! -f "Create-Kops-Buckets-In-AWS.sh" ]; then
    echo "Bucket creation script not found !!" && exit 1
fi
chmod +x Create-Kops-Buckets-In-AWS.sh

mkdir -p .aws
AWS_DIR=$(pwd)/.aws

echo "[default]" > $AWS_DIR/config
echo "region=$variables_AWS_REGION" >> $AWS_DIR/config
echo "output=json" >> $AWS_DIR/config

echo "[default]" > $AWS_DIR/credentials
echo "aws_access_key_id=$variables_AWS_ACCESS_KEY" >> $AWS_DIR/credentials
echo "aws_secret_access_key=$variables_AWS_ACCESS_SECRET" >> $AWS_DIR/credentials

# Alias for executing Kops, Kubectl and aws commands
K8S_TOOLS="docker run --rm -i -v $AWS_DIR:/root/.aws -v $(pwd):/scripts activeeon/k8s-tools"

# Create KOPS user in AWS
$K8S_TOOLS /scripts/Create-Kops-Buckets-In-AWS.sh $variables_K8S_STATE_STORE $variables_K8S_OIDC_STORE $variables_AWS_REGION
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            262
        </positionTop>
        <positionLeft>
            674
        </positionLeft>
      </metadata>
    </task>
    <task name="Read_AWS_Credentials" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A groovy task that reads the AWS access credentials from the ProActive buit-in vault (called 3rd Party Credentials vault) ]]>
      </description>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
variables.put("AWS_ACCESS_SECRET",credentials.get(variables.get("AWS_ACCESS_KEY")))

//variables.put("CLUSTER_ID",new Random().nextInt(10 ** 4))
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            147
        </positionTop>
        <positionLeft>
            669
        </positionLeft>
      </metadata>
    </task>
    <task name="Delete_Kubernetes_Cluster" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A bash task that deletes a Kubernetes cluster using Kops. This task requires Docker to be installed in its underlying host, since the tools it uses (Kops, Kubectl and AWS CLI) are executed in a docker container (i.e., based on the Docker image activeeon/k8s-tools). ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/Kube.png"/>
        <info name="NODE_ACCESS_TOKEN" value="${K8S_CLUSTER_NAME}"/>
      </genericInformation>
      <depends>
        <task ref="Stop_SSH_Connection"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
if [ "$variables_SIGNAL_ACTION" = "Delete_Kubernetes_Cluster" ]; then
    mkdir -p .aws
    AWS_DIR=$(pwd)/.aws

    echo "[default]" > $AWS_DIR/config
    echo "region=$variables_AWS_REGION" >> $AWS_DIR/config
    echo "output=json" >> $AWS_DIR/config

    echo "[default]" > $AWS_DIR/credentials
    echo "aws_access_key_id=$variables_AWS_ACCESS_KEY" >> $AWS_DIR/credentials
    echo "aws_secret_access_key=$variables_AWS_ACCESS_SECRET" >> $AWS_DIR/credentials

    STATE_BUCKET=$variables_K8S_STATE_STORE
    OIDC_BUCKET=$variables_K8S_OIDC_STORE

    export NAME="$variables_K8S_CLUSTER_NAME.$variables_K8S_DOMAIN"
    export KOPS_STATE_STORE=s3://$STATE_BUCKET
    export AWS_ACCESS_KEY_ID=$variables_AWS_ACCESS_KEY
    export AWS_SECRET_ACCESS_KEY=$variables_AWS_ACCESS_SECRET

    ENVIRONMENT_OPTIONS="-e NAME -e KOPS_STATE_STORE -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY"

    # Alias for executing Kops, Kubectl and aws commands
    K8S_TOOLS="docker run --rm -i -v $AWS_DIR:/root/.aws $ENVIRONMENT_OPTIONS activeeon/k8s-tools"

    # Delete Kubernetes cluster
    $K8S_TOOLS kops delete cluster --name ${NAME} --yes

    # Remove the temporary folder used by Kubernetes cluster
    sudo rm -rf /tmp/kops/$variables_K8S_CLUSTER_NAME
fi
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
//Remove the endpoint of Kubernetes Dashboard
schedulerapi.connect()
schedulerapi.removeExternalEndpointUrl(variables.get("PA_JOB_ID"), "Kubernetes Dashboard")

// Remove token in the current node
token = variables.get("K8S_CLUSTER_NAME")
nodeUrl = variables.get("PA_NODE_URL")
println("Current nodeUrl: " + nodeUrl)
println("Removing token:  " + token)
rmapi.connect()
rmapi.removeNodeToken(nodeUrl, token)
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            1184
        </positionTop>
        <positionLeft>
            679
        </positionLeft>
      </metadata>
    </task>
    <task name="Create_Kubernetes_Cluster" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A bash task that create a Kubernetes cluster using Kops. This task requires Docker to be installed in its underlying host, since the tools it uses (Kops, Kubectl and AWS CLI) are executed in a docker container (i.e., based on the Docker image activeeon/k8s-tools). ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/Kube.png"/>
        <info name="PRE_SCRIPT_AS_FILE" value="Create-Kubernetes-Cluster-With-Kops.sh"/>
      </genericInformation>
      <depends>
        <task ref="Create_AWS_Buckets"/>
      </depends>
      <pre>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/it-infrastructure-as-code/resources/Create-Kubernetes-Cluster-With-kOps/raw" language="shell"></file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
if [ ! -f "Create-Kubernetes-Cluster-With-Kops.sh" ]; then
    echo "Cluster creation script not found !!" && exit 1
fi
chmod +x Create-Kubernetes-Cluster-With-Kops.sh

AWS_DIR=$(pwd)/.aws
KUBE_DIR=/tmp/kops/$variables_K8S_CLUSTER_NAME/.kube
SSH_DIR=/tmp/kops/$variables_K8S_CLUSTER_NAME/.ssh

mkdir -p $AWS_DIR
mkdir -p $KUBE_DIR
mkdir -p $SSH_DIR

# Configure AWS credentials
echo "[default]" > $AWS_DIR/config
echo "region=$variables_AWS_REGION" >> $AWS_DIR/config
echo "output=json" >> $AWS_DIR/config

echo "[default]" > $AWS_DIR/credentials
echo "aws_access_key_id=$variables_AWS_ACCESS_KEY" >> $AWS_DIR/credentials
echo "aws_secret_access_key=$variables_AWS_ACCESS_SECRET" >> $AWS_DIR/credentials

# Create SSH keypair to be used to connect to Kubernetes cluster
ssh-keygen -t rsa -b 4096 -N '' -f $SSH_DIR/id_rsa

if [ ! -f "$SSH_DIR/id_rsa.pub" ]; then
    echo "The SSH keypair is not generated properly" && exit 1
fi

STATE_BUCKET=$variables_K8S_STATE_STORE
OIDC_BUCKET=$variables_K8S_OIDC_STORE

export SHORT_NAME="$variables_K8S_CLUSTER_NAME"
export NAME="$variables_K8S_CLUSTER_NAME.$variables_K8S_DOMAIN"
export KOPS_STATE_STORE=s3://$STATE_BUCKET

export AWS_ACCESS_KEY_ID=$variables_AWS_ACCESS_KEY
export AWS_SECRET_ACCESS_KEY=$variables_AWS_ACCESS_SECRET

export OIDC_BUCKET=$OIDC_BUCKET
export ZONES=$variables_AWS_REGION"a"
export NODE_COUNT=$variables_K8S_NODE_COUNT
export NODE_SIZE=$variables_K8S_NODE_SIZE

ENVIRONMENT_OPTIONS="-e NAME -e SHORT_NAME -e KOPS_STATE_STORE -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e OIDC_BUCKET -e ZONES -e NODE_COUNT -e NODE_SIZE"

# Alias for executing Kops, Kubectl and aws commands
K8S_TOOLS="docker run --rm -i -v $AWS_DIR:/root/.aws -v $SSH_DIR:/root/.ssh -v $KUBE_DIR:/root/.kube -v $(pwd):/scripts $ENVIRONMENT_OPTIONS activeeon/k8s-tools"

# Create Kubernetes cluster using KOPS
$K8S_TOOLS /scripts/Create-Kubernetes-Cluster-With-Kops.sh
]]>
          </code>
        </script>
      </scriptExecutable>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
// Add token to the current node
token = variables.get("K8S_CLUSTER_NAME")
nodeUrl = variables.get("PA_NODE_URL")
println("Current nodeUrl: " + nodeUrl)
println("Adding token:    " + token)
rmapi.connect()
rmapi.addNodeToken(nodeUrl, token)
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            388
        </positionTop>
        <positionLeft>
            660
        </positionLeft>
      </metadata>
    </task>
    <task name="Delete_AWS_Buckets" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A bash task that uses AWS CLI to delete S3 buckets used by the Kubernetes cluster (i.e., the state and OIDC stores), if the variable 'DELETE_AWS_BUCKETS' is set to TRUE. AWS CLI is executed in a docker container (i.e., based on the Docker image activeeon/k8s-tools). This task requires then Docker to be installed in its underlying host. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/amazon.png"/>
      </genericInformation>
      <depends>
        <task ref="Delete_Kubernetes_Cluster"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
if $variables_DELETE_AWS_BUCKETS; then
    mkdir -p .aws
    AWS_DIR=$(pwd)/.aws

    echo "[default]" > $AWS_DIR/config
    echo "region=$variables_AWS_REGION" >> $AWS_DIR/config
    echo "output=json" >> $AWS_DIR/config

    echo "[default]" > $AWS_DIR/credentials
    echo "aws_access_key_id=$variables_AWS_ACCESS_KEY" >> $AWS_DIR/credentials
    echo "aws_secret_access_key=$variables_AWS_ACCESS_SECRET" >> $AWS_DIR/credentials

    # Alias for executing Kops, Kubectl and aws commands
    K8S_TOOLS="docker run --rm -i -v $AWS_DIR:/root/.aws activeeon/k8s-tools"

    # Delete KOPS and OIDC buckets in AWS S3 
    STATE_BUCKET=$variables_K8S_STATE_STORE
    OIDC_BUCKET=$variables_K8S_OIDC_STORE
    
    $K8S_TOOLS aws s3api delete-bucket --bucket $STATE_BUCKET 
    $K8S_TOOLS aws s3api delete-bucket --bucket $OIDC_BUCKET
fi
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="end"></controlFlow>
      <metadata>
        <positionTop>
            1325
        </positionTop>
        <positionLeft>
            699.5
        </positionLeft>
      </metadata>
    </task>
    <task name="Wait_for_User_Action" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A groovy task that waits for a user action to: (i) perform a SSH connection to the Kubernetes master node, or (ii) finish the SSH connection, terminate the deployed Kubernetes cluster and eventually delete S3 buckets used by the cluster. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png"/>
        <info name="task.documentation" value="user/ProActiveUserGuide.html#_branch"/>
      </genericInformation>
      <depends>
        <task ref="Download_Kubernetes_Config"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.ow2.proactive.scheduler.common.job.JobVariable

def signals = ['Delete_Kubernetes_Cluster']

if (variables.get("SSH_ENABLED")!="TRUE"){
    signals.add("Connect_To_K8S_Master_Via_SSH")
}
    
signals.each {  signalapi.readyForSignal(it) }

println("Waiting for user action ... ")
receivedSignal = signalapi.waitForAny(signals.toSet())
println(receivedSignal)
signals.each {  signalapi.removeSignal("ready_"+it) }

if (receivedSignal.getName() == "Delete_Kubernetes_Cluster"){
    variables.put("SIGNAL_ACTION","Delete_Kubernetes_Cluster")
    println("Deleting Kubernetes Cluster ...")
} else if (receivedSignal.getName() == "Connect_To_K8S_Master_Via_SSH"){
    variables.put("SIGNAL_ACTION","Connect_To_K8S_Master_Via_SSH")
    variables.put("SSH_ENABLED","TRUE")
    println("Connectiong to Kubernetes master node via SSH ...")
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow  block="start">
        <if target="Start_SSH_Connection"
        else="Stop_SSH_Connection"
        continuation="Loop">
          <script>
            <code language="groovy">
              <![CDATA[
action = variables.get("SIGNAL_ACTION")

if ( action == "Connect_To_K8S_Master_Via_SSH" ) {
    branch = "if"
} else  if ( action == "Delete_Kubernetes_Cluster" ) {
    branch = "else"
}
]]>
            </code>
          </script>
        </if>
      </controlFlow>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
action = variables.get("SIGNAL_ACTION")

if ( action == "Connect_To_K8S_Master_Via_SSH" ) {
    jobID = variables.get("PA_JOB_ID")
    host = variables.get("K8S_MASTER_HOST")
    user = variables.get("USER_OF_AWS_AMI")
 
    variables.put("INSTANCE_NAME", "shell-terminal-${jobID}")
    variables.put("PROXYFIED", "True")
    variables.put("ENDPOINT_ID", host)
    
    variables.put("USE_MANAGED_HOST_LIST", "False")
    variables.put("SSH_TARGET_HOST", host)
    variables.put("SSH_USER", user)
    variables.put("SSH_PORT", "22")
	
    variables.put("AUTHENTICATION_METHOD", "SSH_PRIVATE_KEY")

    schedulerapi.connect() 
    schedulerapi.putThirdPartyCredential("${user}@${host}",variables.get("PRIVATE_KEY")) 
}
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            861.5
        </positionTop>
        <positionLeft>
            687
        </positionLeft>
      </metadata>
    </task>
    <task name="Download_Kubernetes_Config" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ A groovy task that allows to download the configuration file of the deployed Kubernetes cluster. The configuration file can be used by any Kubectl client to control the cluster. ]]>
      </description>
      <genericInformation>
        <info name="NODE_ACCESS_TOKEN" value="${K8S_CLUSTER_NAME}"/>
      </genericInformation>
      <depends>
        <task ref="Download_Private_Key"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def clusterName = variables.get("K8S_CLUSTER_NAME")

def kubeConfig=new File("/tmp/kops/${clusterName}/.kube/${clusterName}-config")
if (kubeConfig.exists()){
    result = kubeConfig.getBytes()
    resultMetadata.put("file.name", clusterName+"-config")
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            750.984375
        </positionTop>
        <positionLeft>
            658
        </positionLeft>
      </metadata>
    </task>
    <task name="Download_Private_Key" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ A groovy task that: (i) displays information about the deployed Kubernetes cluster, and (ii) allows to download the SSH private key needed for accessing the nodes of the cluster. ]]>
      </description>
      <genericInformation>
        <info name="NODE_ACCESS_TOKEN" value="${K8S_CLUSTER_NAME}"/>
      </genericInformation>
      <depends>
        <task ref="Kubernetes_Dashboard_Token"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def domain = variables.get("K8S_DOMAIN")
def clusterName = variables.get("K8S_CLUSTER_NAME")
def user = variables.get("USER_OF_AWS_AMI")
def kubernetesMasterHost = "api."+clusterName+"."+domain

def privateKey=new File("/tmp/kops/${clusterName}/.ssh/${clusterName}-ssh-private-key")
if (privateKey.exists()){
    result = privateKey.getBytes()
    resultMetadata.put("file.name", clusterName+"-ssh-private-key")
    
    variables.put("PRIVATE_KEY",privateKey.getText())
	println(variables.get("PRIVATE_KEY"))
}

resultMap.put("K8S cluster name",clusterName+"."+domain)
resultMap.put("K8S control plane DNS",kubernetesMasterHost)
resultMap.put("SSH to control plane","ssh -i path-to-private-key "+ user +"@"+kubernetesMasterHost)

variables.put("K8S_MASTER_HOST",kubernetesMasterHost)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            627
        </positionTop>
        <positionLeft>
            669
        </positionLeft>
      </metadata>
    </task>
    <task name="Start_SSH_Connection" 
    
    
    
    
    fork="false">
      <description>
        <![CDATA[ Start a SSH connection in the browser to the kubernetes master node. ]]>
      </description>
      <variables>
        <variable name="SSH_INSTANCE_NAME" value="ssh-via-browser-${PA_JOB_ID}" inherited="false" model="PA:NOT_EMPTY_STRING" description="Name of the SSH service instance."  advanced="false" hidden="false"/>
        <variable name="SERVICE_ACTIVATION_WORKFLOW" value="service-automation/SSH_Terminal_Via_Browser" inherited="false" model="PA:CATALOG_OBJECT(Workflow/psa,,,SSH_Terminal_Via_Browser%)" description="The SSH service activation workflow."  advanced="false" hidden="false"/>
        <variable name="INSTANCE_NAME" value="" inherited="true"  description="Instance name of RabbitMQ"  advanced="false" hidden="false"/>
        <variable name="PROXYFIED" value="" inherited="true"  description="If True, requests to RabbitMQ are sent via a proxy server."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/ssh.png"/>
        <info name="task.documentation" value="PSA/PSAUserGuide.html"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Start/raw" language="groovy">
            <arguments>
              <argument value="true"/>
              <argument value="false"/>
              <argument value="INSTANCE_NAME"/>
              <argument value="PROXYFIED"/>
              <argument value="USE_MANAGED_HOST_LIST"/>
              <argument value="SSH_TARGET_HOST"/>
              <argument value="SSH_USER"/>
              <argument value="SSH_PORT"/>
              <argument value="AUTHENTICATION_METHOD"/>
              <argument value="SSH_PRIVATE_KEY"/>
              <argument value="ENDPOINT_ID"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            1051
        </positionTop>
        <positionLeft>
            433.5
        </positionLeft>
      </metadata>
    </task>
    <task name="Stop_SSH_Connection" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A task that finishes the SSH connection to the kubernetes master node. ]]>
      </description>
      <variables>
        <variable name="INSTANCE_ID" value="" inherited="false"  description="ID of the SSH service instance to stop."  advanced="false" hidden="false"/>
        <variable name="SERVICE_ACTION_WORKFLOW" value="service-automation/Finish_SSH_Terminal_Via_Browser" inherited="false" model="PA:CATALOG_OBJECT(Workflow/psa,,,%Finish_SSH_Terminal_Via_Browser)" description="The SSH service activation workflow."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/ssh.png"/>
      </genericInformation>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.ow2.proactive.pca.service.client.ApiClient
import org.ow2.proactive.pca.service.client.api.CatalogRestApi
import org.ow2.proactive.pca.service.client.api.ServiceInstanceRestApi
import org.ow2.proactive.pca.service.client.model.CloudAutomationWorkflow
import org.ow2.proactive.pca.service.client.model.ServiceDescription
import java.util.concurrent.TimeoutException
import com.google.common.base.Strings

if (variables.get("SSH_ENABLED")=="TRUE"){

	println("BEGIN " + variables.get("PA_TASK_NAME"))

    try {
    // Get schedulerapi access
    schedulerapi.connect()

    // Acquire session id
    def sessionId = schedulerapi.getSession()

    // Define PCA URL
    def pcaUrl = variables.get('PA_CLOUD_AUTOMATION_REST_URL')

    // Connect to APIs
    def apiClient = new ApiClient()
    apiClient.setBasePath(pcaUrl)
    //apiClient.setDebugging(true)
    def serviceInstanceRestApi = new ServiceInstanceRestApi(apiClient)
    def instanceName = variables.get("INSTANCE_NAME")
    def instanceId = (!variables.get("INSTANCE_ID") && instanceName)? variables.get("INSTANCE_ID_" + instanceName) : variables.get("INSTANCE_ID")
    if (!instanceId && !instanceName){
        throw new IllegalArgumentException("You have to specify an INSTANCE_NAME or an INSTANCE_ID. Empty value for both is not allowed.");
    }

    println("INSTANCE_ID: " + instanceId)
	println(instanceName)
    println(variables.get("INSTANCE_ID_" + instanceName))

    def bucketName
    def isActionExists = false
    def catalogRestApi = new CatalogRestApi(apiClient)
    def actionVariables = new HashMap()

    def action = variables.get("ACTION")
    def serviceActionWorkflow = variables.get("SERVICE_ACTION_WORKFLOW")

    if (Strings.isNullOrEmpty(action) && Strings.isNullOrEmpty(serviceActionWorkflow)) {
        throw new IllegalArgumentException("You have to provide an ACTION value or a SERVICE_ACTION_WORKFLOW. Empty value is not allowed.");
    }

    if (!Strings.isNullOrEmpty(action)) {
        List<CloudAutomationWorkflow> listExecutableActions = catalogRestApi.listExecutableActionsByInstanceId(sessionId, instanceId.toString()).get(instanceId.toString())
        for (CloudAutomationWorkflow actionIterator : listExecutableActions) {
            if (actionIterator.getName().equals(action)){
                bucketName = actionIterator.getBucket()
                //retrieve default action variables
                actionVariables = actionIterator.getVariables().collectEntries {var -> [var.getName(), var.getValue()]}
                isActionExists = true
                break
            }
        }
    } else if (!Strings.isNullOrEmpty(serviceActionWorkflow)) {
        def serviceActionWorkflowSplits = serviceActionWorkflow.split('/')
        bucketName = serviceActionWorkflowSplits[0]
        action = serviceActionWorkflowSplits[1]
        CloudAutomationWorkflow executableAction = catalogRestApi.getExecutableActionByCatalogObject(sessionId, instanceId, bucketName, action)
        println("Action Bucket_name: " + bucketName + ", Action_workflow_name: " + action)
        if (executableAction != null) {
            actionVariables = executableAction.getVariables().collectEntries {var -> [var.getName(), var.getValue()]}
            isActionExists = true
        }
    }
    if(!isActionExists){
        throw new IllegalArgumentException("The provided ACTION: " + action + " does not belong to the existing possible actions that can be applied to the current state of the service. You have to specify a valid action.")
    }

    // Retrieve and update workflow variables
    if (binding.variables["args"]){
        for (String var: args){
            actionVariables.put(var, variables.get(var))
        }
    }

    // Execute action on service
    ServiceDescription service = new ServiceDescription()
    service.setBucketName(bucketName)
    service.setWorkflowName(action)
    if( !actionVariables.isEmpty() ){
        actionVariables.each{ k, v -> service.putVariablesItem("${k}", "${v}") }
    }
    def serviceInstanceData = serviceInstanceRestApi.launchServiceInstanceAction(sessionId, instanceId as int, service, variables.get("PA_JOB_ID"))

    if (action.toLowerCase().contains("finish")) {
        try {
            schedulerapi.waitForJob(serviceInstanceData.getJobSubmissions().get(0).getJobId().toString(), 180000)
        } catch (TimeoutException toe) {
            println("[warning] Timeout reached. Disable to wait until the PCA service " + instanceId + " finishes." )
        }
    }}
    catch (Exception ex) {
        println("[error] Unable to finalize the PCA service. It was already finished?" )
        ex.printStackTrace();
    }


	println("END " + variables.get("PA_TASK_NAME"))
}
]]>
          </code>
          <arguments>
            <argument value="INSTANCE_NAME"/>
          </arguments>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <metadata>
        <positionTop>
            1048
        </positionTop>
        <positionLeft>
            690.5
        </positionLeft>
      </metadata>
    </task>
    <task name="Loop" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A simple task to loop over user actions. ]]>
      </description>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow  block="end">
        <loop target="Wait_for_User_Action">
          <script>
            <code language="groovy">
              <![CDATA[
signalAction=variables.get("SIGNAL_ACTION")

loop = signalAction=="Delete_Kubernetes_Cluster" ? false : true

variables.put("SIGNAL_ACTION","")
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            1050.453125
        </positionTop>
        <positionLeft>
            958
        </positionLeft>
      </metadata>
    </task>
    <task name="Kubernetes_Dashboard_Token" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ A bash task that deploys the Kubernetes dashboard using kubectl. This task requires Docker to be installed in its underlying host, since Kubectl is executed in a docker container (i.e., based on the Docker image activeeon/k8s-tools). ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/Kube.png"/>
        <info name="PRE_SCRIPT_AS_FILE" value="Deploy-Kubernetes-Dashboard.sh"/>
        <info name="NODE_ACCESS_TOKEN" value="${K8S_CLUSTER_NAME}"/>
      </genericInformation>
      <depends>
        <task ref="Create_Kubernetes_Cluster"/>
      </depends>
      <pre>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/it-infrastructure-as-code/resources/Deploy-Kubernetes-Dashboard/raw" language="shell"></file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
if [ ! -f "Deploy-Kubernetes-Dashboard.sh" ]; then
    echo "Deploy-Kubernetes-Dashboard.sh script not found !!" && exit 1
fi
chmod +x Deploy-Kubernetes-Dashboard.sh

KUBE_DIR=/tmp/kops/$variables_K8S_CLUSTER_NAME/.kube
DASHBOARD_DIR=/tmp/kops/$variables_K8S_CLUSTER_NAME/dashboard
mkdir -p $DASHBOARD_DIR

# Alias for executing Kops, Kubectl and aws commands
K8S_TOOLS="docker run --rm -i -v $KUBE_DIR:/root/.kube -v $DASHBOARD_DIR:/dashboard -v $(pwd):/scripts activeeon/k8s-tools"

NAME="$variables_K8S_CLUSTER_NAME.$variables_K8S_DOMAIN"
SHORT_NAME="$variables_K8S_CLUSTER_NAME"
TOKEN_DURATION=$variables_DASHBOARD_TOKEN_DURATION

# Create kubernetes dashboard
$K8S_TOOLS /scripts/Deploy-Kubernetes-Dashboard.sh $NAME $SHORT_NAME $TOKEN_DURATION
]]>
          </code>
        </script>
      </scriptExecutable>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
def clusterName = variables.get("K8S_CLUSTER_NAME")

def tokenFile=new File("/tmp/kops/${clusterName}/dashboard/${clusterName}-dashboard-token")
def addressFile=new File("/tmp/kops/${clusterName}/dashboard/${clusterName}-dashboard-address")

if (tokenFile.exists() && addressFile.exists()){
    
    // Acquire and display the token to access kubernetes dashboard 
    result = tokenFile.getBytes()
    resultMetadata.put("file.name", clusterName+"-dashboard-token")
    
    // Display the AWS portal endpoint
    schedulerapi.connect()
    schedulerapi.addExternalEndpointUrl(variables.get("PA_JOB_ID"), "Kubernetes Dashboard", addressFile.getText(), "/automation-dashboard/styles/patterns/img/wf-icons/Kube.png")
    
} else {
    println "Kubernetes Dashboard is not deployed properly"
}
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            510
        </positionTop>
        <positionLeft>
            648.5
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2725px;
            height:3120px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-142px;left:-428.5px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_555" style="top: 262px; left: 674px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A bash task that uses AWS CLI to create S3 buckets for the Kubernetes cluster (i.e., the state and OIDC stores), if they do not exist. AWS CLI is executed in a docker container (i.e., based on the Docker image activeeon/k8s-tools). This task requires then Docker to be installed in its underlying host."><img src="/automation-dashboard/styles/patterns/img/wf-icons/amazon.png" width="20px">&nbsp;<span class="name">Create_AWS_Buckets</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_558" style="top: 147px; left: 669px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A groovy task that reads the AWS access credentials from the ProActive buit-in vault (called 3rd Party Credentials vault)"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Read_AWS_Credentials</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_ active-task" id="jsPlumb_1_561" style="top: 1184px; left: 679px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A bash task that deletes a Kubernetes cluster using Kops. This task requires Docker to be installed in its underlying host, since the tools it uses (Kops, Kubectl and AWS CLI) are executed in a docker container (i.e., based on the Docker image activeeon/k8s-tools)."><img src="/automation-dashboard/styles/patterns/img/wf-icons/Kube.png" width="20px">&nbsp;<span class="name">Delete_Kubernetes_Cluster</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_564" style="top: 388px; left: 660px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A bash task that create a Kubernetes cluster using Kops. This task requires Docker to be installed in its underlying host, since the tools it uses (Kops, Kubectl and AWS CLI) are executed in a docker container (i.e., based on the Docker image activeeon/k8s-tools)."><img src="/automation-dashboard/styles/patterns/img/wf-icons/Kube.png" width="20px">&nbsp;<span class="name">Create_Kubernetes_Cluster</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_567" style="top: 1325px; left: 699.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A bash task that uses AWS CLI to delete S3 buckets used by the Kubernetes cluster (i.e., the state and OIDC stores), if the variable 'DELETE_AWS_BUCKETS' is set to TRUE. AWS CLI is executed in a docker container (i.e., based on the Docker image activeeon/k8s-tools). This task requires then Docker to be installed in its underlying host."><img src="/automation-dashboard/styles/patterns/img/wf-icons/amazon.png" width="20px">&nbsp;<span class="name">Delete_AWS_Buckets</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_570" style="top: 861.5px; left: 687px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A groovy task that waits for a user action to: (i) perform a SSH connection to the Kubernetes master node, or (ii) finish the SSH connection, terminate the deployed Kubernetes cluster and eventually delete S3 buckets used by the cluster."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png" width="20px">&nbsp;<span class="name">Wait_for_User_Action</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_573" style="top: 750.984px; left: 658px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A groovy task that allows to download the configuration file of the deployed Kubernetes cluster. The configuration file can be used by any Kubectl client to control the cluster."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Download_Kubernetes_Config</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_576" style="top: 627px; left: 669px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A groovy task that: (i) displays information about the deployed Kubernetes cluster, and (ii) allows to download the SSH private key needed for accessing the nodes of the cluster."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Download_Private_Key</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_579" style="top: 1051px; left: 433.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start a SSH connection in the browser to the kubernetes master node."><img src="/automation-dashboard/styles/patterns/img/wf-icons/ssh.png" width="20px">&nbsp;<span class="name">Start_SSH_Connection</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon" class="glyphicon glyphicon-arrow-right"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_582" style="top: 1048px; left: 690.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A task that finishes the SSH connection to the kubernetes master node."><img src="/automation-dashboard/styles/patterns/img/wf-icons/ssh.png" width="20px">&nbsp;<span class="name">Stop_SSH_Connection</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon" class="glyphicon glyphicon-arrow-right"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_585" style="top: 1050.45px; left: 958px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A simple task to loop over user actions."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Loop</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_588" style="top: 510px; left: 648.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A bash task that deploys the Kubernetes dashboard using kubectl. This task requires Docker to be installed in its underlying host, since Kubectl is executed in a docker container (i.e., based on the Docker image activeeon/k8s-tools)."><img src="/automation-dashboard/styles/patterns/img/wf-icons/Kube.png" width="20px">&nbsp;<span class="name">Kubernetes_Dashboard_Token</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><svg style="position:absolute;left:732.5px;top:186.5px" width="21.5" height="76" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0.5 75 C 10.5 25 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.178868874999999,56.597043750000005 L9.663377820016173,36.424013641907536 L2.819638483043355,42.6016533115201 L-4.33201261846373,36.78324403386418 L3.178868874999999,56.597043750000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.178868874999999,56.597043750000005 L9.663377820016173,36.424013641907536 L2.819638483043355,42.6016533115201 L-4.33201261846373,36.78324403386418 L3.178868874999999,56.597043750000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:750px;top:1087.5px" width="23" height="97" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 96 C -10 46 12 50 2 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.669624,73.1106345 L5.431344673143837,53.53068795878743 L-1.8913690613776342,59.132282692633375 L-8.547007134222792,52.752433020165064 L-2.669624,73.1106345" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.669624,73.1106345 L5.431344673143837,53.53068795878743 L-1.8913690613776342,59.132282692633375 L-8.547007134222792,52.752433020165064 L-2.669624,73.1106345" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:731.5px;top:301.5px" width="22.5" height="87" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 86 C -10 36 11.5 50 1.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.6935781249999997,64.94400000000002 L5.280145542563307,45.311890310174505 L-2.006059467283238,50.96089168692129 L-8.702962770515416,44.62437165245774 L-2.6935781249999997,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.6935781249999997,64.94400000000002 L5.280145542563307,45.311890310174505 L-2.006059467283238,50.96089168692129 L-8.702962770515416,44.62437165245774 L-2.6935781249999997,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:750px;top:1223.5px" width="29.5" height="102" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 8.5 101 C 18.5 51 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M10.529057875000001,76.61301725 L14.808410119130919,55.86001398852838 L8.668087515829484,62.73725459267955 L0.9326474618104648,57.7209843476989 L10.529057875000001,76.61301725" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M10.529057875000001,76.61301725 L14.808410119130919,55.86001398852838 L8.668087515829484,62.73725459267955 L0.9326474618104648,57.7209843476989 L10.529057875000001,76.61301725" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:735.5px;top:790.5px" width="30.5" height="72" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 9.5 71 C 19.5 21 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M11.600375000000001,53.299250000000015 L15.363109650141439,32.446388614745835 L9.395442452749872,39.47397342185963 L1.5378330720010558,34.65132116199596 L11.600375000000001,53.299250000000015" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M11.600375000000001,53.299250000000015 L15.363109650141439,32.446388614745835 L9.395442452749872,39.47397342185963 L1.5378330720010558,34.65132116199596 L11.600375000000001,53.299250000000015" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:423.5px;top:901.5px" width="274" height="150" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 149 C -10 99 263 50 253 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M42.651522,108.679334 L63.72775504754972,106.4901787918494 L55.31701875482219,102.71400149010681 L57.76242253765655,93.82468203702722 L42.651522,108.679334" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M42.651522,108.679334 L63.72775504754972,106.4901787918494 L55.31701875482219,102.71400149010681 L57.76242253765655,93.82468203702722 L42.651522,108.679334" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_611" style="position: absolute; transform: translate(-50%, -50%); left: 560px; top: 976px;">if</div><svg style="position:absolute;left:676.5px;top:901.5px" width="25" height="147" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 4 146 C 14 96 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M6.331556,112.037464 L11.991017466360072,91.61760856684901 L5.403946597176001,98.06822848778272 L-1.9782180458572132,92.54521796967302 L6.331556,112.037464" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M6.331556,112.037464 L11.991017466360072,91.61760856684901 L5.403946597176001,98.06822848778272 L-1.9782180458572132,92.54521796967302 L6.331556,112.037464" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_615" style="position: absolute; transform: translate(-50%, -50%); left: 688.5px; top: 974.5px;">else</div><svg style="position:absolute;left:676.5px;top:901.5px" width="292" height="149" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 271 148 C 281 98 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M225.120466,107.858668 L209.59345032191112,93.4395215574264 L212.29053116428264,102.25574268269956 L203.99052500461067,106.26945639314376 L225.120466,107.858668" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M225.120466,107.858668 L209.59345032191112,93.4395215574264 L212.29053116428264,102.25574268269956 L203.99052500461067,106.26945639314376 L225.120466,107.858668" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_619" style="position: absolute; transform: translate(-50%, -50%); left: 822px; top: 975.5px;">continuation</div><svg style="position:absolute;left:730.5px;top:666.5px" width="26" height="85" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 5 84 C 15 34 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M7.409409999999999,63.573684000000014 L12.507832360034492,43.00657216000896 L6.099791515569118,49.635072181557085 L-1.4307794584084395,44.31619064443984 L7.409409999999999,63.573684000000014" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M7.409409999999999,63.573684000000014 L12.507832360034492,43.00657216000896 L6.099791515569118,49.635072181557085 L-1.4307794584084395,44.31619064443984 L7.409409999999999,63.573684000000014" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:727.5px;top:549.5px" width="24" height="78" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 3 77 C 13 27 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.535935999999999,58.00838400000001 L11.227285132672309,37.597393209496225 L4.6301468233382534,44.03771665847897 L-2.743382208848727,38.50318238615797 L5.535935999999999,58.00838400000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.535935999999999,58.00838400000001 L11.227285132672309,37.597393209496225 L4.6301468233382534,44.03771665847897 L-2.743382208848727,38.50318238615797 L5.535935999999999,58.00838400000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:823.5px;top:851.5px" width="235" height="249" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 0 C 50 -50 224 198 234 148 " transform="translate(0.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M61.95009600000001,12.941532000000002 L82.2145535045898,19.134411947542542 L73.23549882054783,21.22643895047152 L73.92964655411829,30.419814768090365 L61.95009600000001,12.941532000000002" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M61.95009600000001,12.941532000000002 L82.2145535045898,19.134411947542542 L73.23549882054783,21.22643895047152 L73.92964655411829,30.419814768090365 L61.95009600000001,12.941532000000002" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_631" style="position: absolute; transform: translate(-50%, -50%); left: 955.5px; top: 975.5px;">loop</div><svg style="position:absolute;left:727.5px;top:427.5px" width="25" height="83" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 82 C -10 32 14 50 4 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.486284,61.72743200000001 L6.138317321521514,42.37242613472553 L-1.3323913602914803,47.77506547040989 L-7.814049208068601,41.21853349501701 L-2.486284,61.72743200000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.486284,61.72743200000001 L6.138317321521514,42.37242613472553 L-1.3323913602914803,47.77506547040989 L-7.814049208068601,41.21853349501701 L-2.486284,61.72743200000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 733.5px; top: 292px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 733.5px; top: 252px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 733px; top: 177px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 750.5px; top: 1214px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 750.5px; top: 1174px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 732px; top: 418px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 732px; top: 378px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 759px; top: 1355px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 759px; top: 1315px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 745.5px; top: 892px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 745.5px; top: 852px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint if-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 677px; top: 892px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 814px; top: 892px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 736px; top: 781px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 736px; top: 741px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 731px; top: 657px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 731px; top: 617px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 496px; top: 1081px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 424px; top: 1041px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 752.5px; top: 1078px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 681px; top: 1038px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 998px; top: 1080px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 948px; top: 1040px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 1048px; top: 1040px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 728px; top: 540px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 728px; top: 500px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
