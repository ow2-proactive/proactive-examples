<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.14" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="2" name="Finish_SSH_Terminal_For_Distributed_Nodes" onTaskError="continueJobExecution" priority="normal" tags="Data Connectors,Wetty,SSH,Terminal,Web Browser" projectName="7. Lifecycle workflows" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd">
  <description>
    <![CDATA[ Removes a running instance of the service  SSH_Terminal_For_Distributed_Nodes. ]]>
  </description>
  <genericInformation>
<info name="bucketName" value="service-automation"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/ssh.png"/>
<info name="pca.states" value="(RUNNING,FINISHED)(ERROR,FINISHED)"/>
<info name="Documentation" value="PSA/PSAUserGuide.html"/>
<info name="pca.service.id" value="SSH_Terminal_For_Distributed_Nodes"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task fork="true" name="Finish_Distributed_ML_Terminal">
      <description>
        <![CDATA[ Finish Shell_Terminal_via_Browser instance and remove its docker container ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/ssh.png"/>
        <info name="Documentation" value="PSA/PSAUserGuide.html"/>
        <info name="NODE_ACCESS_TOKEN" value="PSA_$INSTANCE_NAME"/>
      </genericInformation>
      <depends>
        <task ref="Pre_Finish"/>
      </depends>
      <selection>
        <script type="static">
          <code language="groovy">
            <![CDATA[
/**
 * Script which verifies that the current node runs on the given machine (defined by its hostname)
 *
 * Arguments:
 * machine host name
 */

import com.google.common.base.Strings;

if (args.length != 1) {
    println "Incorrect number of arguments, expected 1, received " + args.length;
    selected = false;
    return;
}

machineName = args[0]

if (Strings.isNullOrEmpty(machineName)) {
    println "Given host name was empty";
    selected = false;
    return;
}

machineName = machineName.trim().toLowerCase()

println "Hostname " + nodehost.toLowerCase() + " (expected :  " + machineName + ")";

selected = (nodehost.toLowerCase() == machineName)
]]>
          </code>
          <arguments>
            <argument value="${MASTER_HOST}"/>
          </arguments>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <file language="bash" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Finish_Action/raw"/>
        </script>
      </scriptExecutable>
      <post>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Post_Trigger_Action/raw">
            <arguments>
              <argument value="FINISHED"/>
            </arguments>
          </file>
        </script>
      </post>
      <cleaning>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Clean_Trigger_Action/raw"/>
        </script>
      </cleaning>
      <metadata>
        <positionTop>
            313.4658966064453
        </positionTop>
        <positionLeft>
            614.7017517089844
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Pre_Finish">
      <genericInformation>
        <info name="NODE_ACCESS_TOKEN" value="PSA_$INSTANCE_NAME"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
/*********************************************************************************
 * THIS PRESCRIPT INFORMS PLATFORM THAT PCA SERVICE ACTION IS TRIGGERED                   *
 *********************************************************************************/

println("BEGIN " + variables.get("PA_TASK_NAME"))

action = args[0]

// Acquire service instance id and instance name from synchro channel
def instanceId = variables.get("PCA_INSTANCE_ID") as long
def channel = "Service_Instance_" + instanceId
def instanceName = synchronizationapi.get(channel, "INSTANCE_NAME")
variables.put("INSTANCE_NAME", instanceName)
def credentialsKey = synchronizationapi.get(channel, "CREDENTIALS_KEY")
variables.put("CREDENTIALS_KEY", credentialsKey)
def masterHost = synchronizationapi.get(channel, "MASTER_HOST")
variables.put("MASTER_HOST", masterHost)

println(masterHost)
println(variables.get("MASTER_HOST"))

// Inform other platforms that service is running through Synchronization API
if(action.equals("RESUME_LAUNCHED")){
    synchronizationapi.put(channel, "RUNNING_STATE", 1)
    synchronizationapi.put(channel, "RESUMED", true)
    synchronizationapi.put(channel, "PAUSE_LAUNCHED", false)
}
else{
    synchronizationapi.put(channel, action, true)
}
]]>
          </code>
          <arguments>
            <argument value="FINISH_LAUNCHED"/>
          </arguments>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            213.4232940673828
        </positionTop>
        <positionLeft>
            637.3295593261719
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2483px;
            height:2810px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-208.4232940673828px;left:-609.7017517089844px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_660" style="top: 313.466px; left: 614.716px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Finish Shell_Terminal_via_Browser instance and remove its docker container"><img src="/automation-dashboard/styles/patterns/img/wf-icons/ssh.png" width="20px">&nbsp;<span class="name">Finish_Distributed_ML_Terminal</span></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_663" style="top: 213.424px; left: 637.344px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Pre_Finish</span></a></div><svg style="position:absolute;left:676.5px;top:253.5px" width="38" height="61" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 17 60 C 27 10 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M18.71155025,44.2278825 L19.81411848627273,23.06696703576825 L14.780479850582743,30.791116314833815 L6.377352301106542,26.998037435185502 L18.71155025,44.2278825" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M18.71155025,44.2278825 L19.81411848627273,23.06696703576825 L14.780479850582743,30.791116314833815 L6.377352301106542,26.998037435185502 L18.71155025,44.2278825" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 694px; top: 344px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 694px; top: 304px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 677px; top: 244px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
