<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.14" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="2" name="Fetch_Images_From_Satellite_Platforms" onTaskError="continueJobExecution" priority="normal" projectName="Satellite Imagery" tags="imagery,satellite" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd">
  <variables>
    <variable advanced="false" description="Defines an engine to search and download satellite images." hidden="false" model="PA:LIST(Copernicus,Creodias,Mundi,Onda,Peps,Sobloo,Wekeo,All)" name="SEARCH_ENGINE" value="Peps"/>
    <variable advanced="false" description="Selects the type of data source." hidden="false" model="PA:LIST(PA:URL,PA:URI,PA:USER_FILE,PA:GLOBAL_FILE)" name="IMPORT_FROM" value="PA:GLOBAL_FILE"/>
    <variable advanced="false" description="Path or name of the file that contains the dataset." hidden="false" model="PA:GLOBAL_FILE" name="FILE_PATH" value="geojson_example.json"/>
    <variable advanced="false" description="Defines time in seconds to request an offline product from the Long Term Archive (LTA) in the Copernicus Open Access Hub’s." hidden="false" name="TIME_TO_RETRIEVE_IN_SECONDS" value="900"/>
    <variable advanced="false" description="Defines time in seconds to check if a product is online." hidden="false" name="TIME_TO_CHECK_ONLINE_IN_SECONDS" value="1800"/>
    <variable advanced="false" description="Defines the maximum execution time of a task." hidden="false" name="WALLTIME" value="24:00:00"/>
    <variable advanced="false" description="Specifies the path where the data should be downloaded." hidden="false" name="OUTPUT_PATH" value="/tmp/"/>
    <variable advanced="false" description="Determines the policy used by the ProActive Scheduler to determine how Jobs and Tasks are scheduled." hidden="false" name="REQUIRED_LICENSES" value="software_A"/>
  </variables>
  <description>
    <![CDATA[ Search and download Earth Observation products from different providers, such as Copernicus, Creodias, Mundi, Onda, Peps, Sobloo and Wekeo. Find more information about the EODAG  and Copernicus Open Access Hub can be found at https://eodag.readthedocs.io and https://scihub.copernicus.eu

Requirememts:
sentinelsat==1.2.1
psutil==5.9.4
eodag==2.9.2 ]]>
  </description>
  <genericInformation>
<info name="bucketName" value="hpc-satellite-imagery"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/sentinel_image.jpg"/>
<info name="Documentation" value="PAIO/PAIOUserGuide.html#_satellite_imagery_bucket"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task fork="false" name="Condition">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <depends>
        <task ref="Import_GeoData"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
print('Checking platform...')
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow>
        <if continuation="Continuation" else="Else" target="Fetch_Satellite_Images_From_EODAG">
          <script>
            <code language="cpython">
              <![CDATA[
SEARCH_ENGINE  = variables.get("SEARCH_ENGINE") 		 # Option host sites

if SEARCH_ENGINE.lower() == "creodias" or SEARCH_ENGINE.lower() == "mundi" or SEARCH_ENGINE.lower() == "peps" or SEARCH_ENGINE.lower() == "sobloo" or SEARCH_ENGINE.lower() == "onda" or SEARCH_ENGINE.lower() == "wekeo" or SEARCH_ENGINE.lower() == "all":
    branch = "if"
else:
    branch = "else"
]]>
            </code>
          </script>
        </if>
      </controlFlow>
      <metadata>
        <positionTop>
            154.54998779296875
        </positionTop>
        <positionLeft>
            314.11669921875
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Fetch_Satellite_Images_From_EODAG">
      <description>
        <![CDATA[ Load and return a dataset including a
'metadata folder' with metadata files and 'images folder' containing satellite images.

Please access: https://eodag.readthedocs.io/en/stable/ ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/eodag.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_satellite_imagery_bucket"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
__file__ = variables.get("PA_TASK_NAME")

print('Starting download....')
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"/>
      <metadata>
        <positionTop>
            283.45001220703125
        </positionTop>
        <positionLeft>
            117.73333740234375
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Else">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[

]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            283.45001220703125
        </positionTop>
        <positionLeft>
            338.11669921875
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Continuation">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[

]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            283.45001220703125
        </positionTop>
        <positionLeft>
            453.01666259765625
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Condition2">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <depends>
        <task ref="Import_GeoData"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
print('Searching satellite images...')
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow>
        <if continuation="Continuation2" else="Else2" target="Fetch_Satellite_Images_From_Copernicus">
          <script>
            <code language="cpython">
              <![CDATA[
SEARCH_ENGINE  = variables.get("SEARCH_ENGINE") 		 # Option host sites

if SEARCH_ENGINE.lower() == "copernicus" or SEARCH_ENGINE.lower() == "all":
    branch = "if"
else:
    branch = "else"
]]>
            </code>
          </script>
        </if>
      </controlFlow>
      <metadata>
        <positionTop>
            154.54998779296875
        </positionTop>
        <positionLeft>
            859.800048828125
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Fetch_Satellite_Images_From_Copernicus">
      <description>
        <![CDATA[ Load and return a Copernicus dataset including a 'metadata folder' with metadata files and 'images folder' containing satellite images according to the resolution & image band selected by user.

Please access:
https://peps.cnes.fr/rocket/#/register to create a new user account from Copernicus website.

Please add third party credentials (USER_NAME_COP and USER_PASS_COP) in the Scheduling & Orchestration interface → Manage Third-Party Credentials to connect to Copernicus. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/copernicus.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_satellite_imagery_bucket"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
__file__ = variables.get("PA_TASK_NAME")

print('Starting download....')
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"/>
      <metadata>
        <positionTop>
            283.45001220703125
        </positionTop>
        <positionLeft>
            656.4000244140625
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Else2">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[

]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            282.433349609375
        </positionTop>
        <positionLeft>
            888.7833251953125
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Continuation2">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[

]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            283.45001220703125
        </positionTop>
        <positionLeft>
            999.183349609375
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Import_GeoData">
      <description>
        <![CDATA[ Import geo dataset. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/geodata.jpg"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_satellite_imagery_bucket"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
__file__ = variables.get("PA_TASK_NAME")

import json
import uuid
from os.path import join, os

from sentinelsat.sentinel import read_geojson

if 'variables' in locals():
    IMPORT_FROM = variables.get("IMPORT_FROM")
    FILE_PATH = variables.get("FILE_PATH")  # Geojson file search_footprints.geojson with footprints of the query result
    OUTPUT_PATH = variables.get("OUTPUT_PATH")  # Folder output path
    SEARCH_ENGINE = variables.get("SEARCH_ENGINE")  # search engine

# Get an unique ID
ID = str(uuid.uuid4())

# Get current job ID
PA_JOB_ID = variables.get("PA_JOB_ID")

# Get an unique ID
#ID = str(uuid.uuid4())
ID_JOB = 'Job_' + str(PA_JOB_ID)

# Define the current 'dataset_path'
os.chdir(OUTPUT_PATH)
dataset_path = join(OUTPUT_PATH, ID, ID_JOB)

# Create the folders tmp
os.makedirs(dataset_path, exist_ok = True)
os.chmod(dataset_path, mode=0o770)

# Define path to download the dataset
os.chdir(dataset_path)

print('The path input dataset:', dataset_path)

# -------------------------------------------------------------
# Load file
#
if IMPORT_FROM.upper() == "PA:USER_FILE":
    print("Importing file from the user space")
    userspaceapi.connect()
    out_file = gateway.jvm.java.io.File(os.path.join(dataset_path, FILE_PATH))
    userspaceapi.pullFile(FILE_PATH, out_file)

if IMPORT_FROM.upper() == "PA:GLOBAL_FILE":
    print("Importing file from the global space")
    globalspaceapi.connect()
    out_file = gateway.jvm.java.io.File(os.path.join(dataset_path, FILE_PATH))
    globalspaceapi.pullFile(FILE_PATH, out_file)

gjson = read_geojson(os.path.join(dataset_path, FILE_PATH))
n_acq = len(gjson.features)
print('{s:{c}^{n}}'.format(s=' GEOJSON DATA ', n=75, c='#'))
print('{s:{c}^{n}}'.format(s='#', n=75, c='#'))
print(gjson)

gjson_data = json.dumps(gjson).encode('utf-8')

if 'variables' in locals():
    variables.put("DATASET_PATH", dataset_path)
    variables.put("GJSON_DATA", gjson_data)
    variables.put("N_acq", n_acq)

print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            25.666671752929688
        </positionTop>
        <positionLeft>
            586.9666748046875
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Split">
      <description>
        <![CDATA[ This task defines some input, here strings to be processed. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
        <info name="Documentation" value="user/ProActiveUserGuide.html#_replicate"/>
      </genericInformation>
      <depends>
        <task ref="Fetch_Satellite_Images_From_EODAG"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
__file__ = variables.get("PA_TASK_NAME")

import os
import sys
import json
import time
import shutil
import subprocess
import random as r
from zipfile import ZipFile
from os.path import join, os
from collections import OrderedDict
from ast import literal_eval as make_tuple

from distutils.dir_util import copy_tree
from geojson import FeatureCollection

try:
    from sentinelsat.sentinel import SentinelAPI, read_geojson, geojson_to_wkt
except ImportError:
    subprocess.call([sys.executable, "-m", "pip", "install", 'sentinelsat'])
finally:
    from sentinelsat.sentinel import SentinelAPI, read_geojson, geojson_to_wkt


if 'variables' in locals():
    DATASET_PATH = variables.get("DATASET_PATH")  # folder dataset path
    GJSON_DATA = variables.get("GJSON_DATA")  # gson data
    N_acq = variables.get("N_acq")  # number of features
    SEARCH_ENGINE = variables.get("SEARCH_ENGINE")  # gson data

if SEARCH_ENGINE.lower() == 'peps' or SEARCH_ENGINE.lower() == 'all':
    provider = 'peps'

if SEARCH_ENGINE.lower() == 'creodias':
    provider = 'creodias'

if SEARCH_ENGINE.lower() == 'sobloo':
    provider = 'sobloo'

if SEARCH_ENGINE.lower() == 'onda':
    provider = 'onda'

if SEARCH_ENGINE.lower() == 'mundi':
    provider = 'mundi'

if SEARCH_ENGINE.lower() == 'wekeo':
    provider = 'wekeo'

gjson_dec = json.loads(GJSON_DATA.decode('utf-8'))
gjson = FeatureCollection(gjson_dec)
gjson['features'] = list(gjson['features'])

# Loop for each trial
result = {}
for i in range(N_acq):
    result[i] =  json.dumps(gjson[i])
    print(result[i])

variables.put("PROVIDER", provider)

print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow>
        <replicate>
          <script>
            <code language="groovy">
              <![CDATA[
runs=result.size()
]]>
            </code>
          </script>
        </replicate>
      </controlFlow>
      <metadata>
        <positionTop>
            412.33331298828125
        </positionTop>
        <positionLeft>
            117.73333740234375
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" maxNumberOfExecution="2" name="Process" taskRetryDelay="1:00">
      <description>
        <![CDATA[ This task will be replicated according to the 'runs' value specified in the replication script. The replication index is used in each task's instance to select the input. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
      </genericInformation>
      <depends>
        <task ref="Split"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
__file__ = variables.get("PA_TASK_NAME")

import os
import sys
import json
import time
import copy
import shutil
import psutil
import pickle
import subprocess
import random as r
from pathlib import Path
from zipfile import ZipFile
from os.path import join, os
from collections import OrderedDict
from geojson import FeatureCollection

import eodag
import geojson
from pprint import pprint
from eodag.utils import ProgressCallback
from eodag.utils.logging import setup_logging
from eodag.api.core import EODataAccessGateway

from distutils.dir_util import copy_tree
from ast import literal_eval as make_tuple

try:
    from sentinelsat.sentinel import SentinelAPI, read_geojson, geojson_to_wkt
except ImportError:
    subprocess.call([sys.executable, "-m", "pip", "install", 'sentinelsat'])
finally:
    from sentinelsat.sentinel import SentinelAPI, read_geojson, geojson_to_wkt


USER_NAME_PEPS = credentials.get("USER_NAME_PEPS")  # user email
USER_PASS_PEPS = credentials.get("USER_PASS_PEPS")  # user password
USER_NAME_CREODIAS = credentials.get("USER_NAME_CREODIAS")  # user email
USER_PASS_CREODIAS = credentials.get("USER_PASS_CREODIAS")  # user password
USER_NAME_SOBLOO = credentials.get("USER_NAME_SOBLOO")  # user email
USER_PASS_SOBLOO = credentials.get("USER_PASS_SOBLOO")  # user password
APIKEY_SOBLOO = credentials.get("APIKEY_SOBLOO")  # user key
USER_NAME_ONDA = credentials.get("USER_NAME_ONDA")  # user email
USER_PASS_ONDA = credentials.get("USER_PASS_ONDA")  # user password
USER_NAME_MUNDI = credentials.get("USER_NAME_MUNDI")  # user email
USER_PASS_MUNDI = credentials.get("USER_PASS_MUNDI")  # user password
APIKEY_MUNDI = credentials.get("APIKEY_MUNDI")  # user key
USER_NAME_WEKEO = credentials.get("USER_NAME_WEKEO")  # user name
USER_PASS_WEKEO = credentials.get("USER_PASS_WEKEO")  # user password
DATASET_PATH = variables.get("DATASET_PATH")  # folder dataset path
PROVIDER = variables.get("PROVIDER")
TIME_TO_RETRIEVE_IN_SECONDS = int(variables.get("TIME_TO_RETRIEVE_IN_SECONDS"))   # try product download in seconds
TIME_TO_CHECK_IN_SECONDS = int(variables.get("TIME_TO_CHECK_ONLINE_IN_SECONDS"))  # check online product download in seconds

# PEPS
if PROVIDER.lower() == "peps" or PROVIDER.lower() == "all":
    os.environ["EODAG__PEPS__AUTH__CREDENTIALS__USERNAME"] = USER_NAME_PEPS
    os.environ["EODAG__PEPS__AUTH__CREDENTIALS__PASSWORD"] = USER_PASS_PEPS

# CREODIAS
if PROVIDER.lower() == "creodias":
    os.environ["EODAG__CREODIAS__AUTH__CREDENTIALS__USERNAME"] = USER_NAME_CREODIAS
    os.environ["EODAG__CREODIAS__AUTH__CREDENTIALS__PASSWORD"] = USER_PASS_CREODIAS

# SOBLOO
if PROVIDER.lower() == "sobloo":
    os.environ["EODAG__SOBLOO__AUTH__CREDENTIALS__APIKEY"] = APIKEY_SOBLOO
    os.environ["EODAG__SOBLOO__AUTH__CREDENTIALS__USERNAME"] = USER_NAME_SOBLOO
    os.environ["EODAG__SOBLOO__AUTH__CREDENTIALS__PASSWORD"] = USER_PASS_SOBLOO

# ONDA
if PROVIDER.lower() == "onda":
    os.environ["EODAG__ONDA__AUTH__CREDENTIALS__USERNAME"] = USER_NAME_ONDA
    os.environ["EODAG__ONDA__AUTH__CREDENTIALS__PASSWORD"] = USER_PASS_ONDA

# MUNDI
if PROVIDER.lower() == "mundi":
    os.environ["EODAG__MUNDI__AUTH__CREDENTIALS__APIKEY"] = APIKEY_MUNDI
    os.environ["EODAG__MUNDI__AUTH__CREDENTIALS__USERNAME"] = USER_NAME_MUNDI
    os.environ["EODAG__MUNDI__AUTH__CREDENTIALS__PASSWORD"] = USER_PASS_MUNDI

# WEKEO
if PROVIDER.lower() == "wekeo":
    os.environ["EODAG__WEKEO__AUTH__CREDENTIALS__USERNAME"] =  USER_NAME_WEKEO
    os.environ["EODAG__WEKEO__AUTH__CREDENTIALS__PASSWORD"] =  USER_PASS_WEKEO

# Get current job ID
PA_JOB_ID = variables.get("PA_JOB_ID")

# Print task replication number
i = int(variables.get('PA_TASK_REPLICATION'))

# Get data from the split task
features_dec = json.loads(str(results[0].value()[i]))
print("Task id: ", i, " ", features_dec)
features = FeatureCollection(features_dec)

# Define the current 'dataset_path'
os.chdir(DATASET_PATH)

TASK_NUMBER = 'Process_' + str(i)
output_path = join(DATASET_PATH, TASK_NUMBER, PROVIDER)

# Create the folders
os.makedirs(output_path, exist_ok=True)
# Change the permission
os.chmod(output_path, mode=0o770)

filename = os.path.join(output_path, 'output.json')
json_object = json.dumps(features, sort_keys=True, indent=4)
# writing to filename.json
with open(filename, "w") as outfile:
    outfile.write(json_object)

dicfile = {}
def get_info_json(features, cont, product_tmp, filename):
    ditc = {"Folder_" + str(cont): output_path + '/' + product_tmp}
    dicfile.update(ditc)
    features['features'].update({'output_path': dicfile})


print('The path output dataset:', output_path)

# -------------------------------------------------------------

try:
    footprint = features['geometry']
    product_type = features['properties']["producttype"]
    start_date = features['properties']["beginposition"]
    end_date = features['properties']["endposition"]
except:
    footprint = features['geometry']
    product_type = 'S2_MSI_L1C'
    start_date = None
    end_date = None
    print('The latformname is defined by Sentinel-2!')
    print('The producttype is defined by S2_MSI_L1C!')
    print('The beginposition and endposition are defined by None!')

try:
    cloud_cover_percentage = features['properties']["cloudcoverpercentage"]
    cloud_cover_percentage =  make_tuple(cloud_cover_percentage)
except:
    cloud_cover_percentage = None

print('{s:{c}^{n}}'.format(s=' GEOJSON SETTINGS ', n=75, c='#'))
print('{s:{c}^{n}}'.format(s='#', n=75, c='#'))
print("Footprint:", footprint)
print("Product Type:", product_type)
print("Start Date:", start_date)
print("End Date:", end_date)
print("Cloud Cover Percentage:", cloud_cover_percentage)

# To have some basic feedback on what eodag is doing, we configure logging to output minimum information
setup_logging(verbose=3)
dag = EODataAccessGateway()

print(dag.available_providers())
dag.set_preferred_provider(PROVIDER.lower())
curr_prov, _ = dag.get_preferred_provider()
print("Current provider:", curr_prov)

def bbox(coord_list):
    box = []
    for i in (0,1):
        res = sorted(coord_list, key=lambda x:x[i])
        box.append((res[0][i],res[-1][i]))
    extent =  {
        'lonmin': box[0][1],
        'lonmax': box[0][0],
        'latmin':  box[1][0],
        'latmax': box[1][1]
    }
    return extent

# you need to parse your json here
poly= footprint
extent= bbox(list(geojson.utils.coords(poly)))
print('Bounding box:', extent)

footbox = dict()
for key in extent:
    # rounding to K using round()
    footbox[key] = round(extent[key], 6)

if product_type =='S2MSI1C':
    product_type = 'S2_MSI_L1C'

# get data %Y - year %m - month %d - day
if PROVIDER.lower() == "sobloo" or PROVIDER.lower() == "onda" or PROVIDER.lower() == "mundi":
    start = start_date.split("T")[0]
    end = end_date.split("T")[0]
else:
    start = start_date
    end = end_date

products, estimated_total_nbr_of_results = dag.search(productType=product_type, start=start,end=end, geom=footbox, cloudCover=cloud_cover_percentage)
pprint(products)

# Checking if the list is empty or not
if len(products) == 0:
	raise SystemExit('Unexpected error occurred! No online products were download!')

def request_analysis(products):
    requests_online = []
    requests_offline = []

    if len(products) > 0:
        cont = 0
        print("Total products:", len(products))
        for p in products:
            if p.properties["storageStatus"] == "ONLINE":
                requests_online.append(products[cont])
            else:
                requests_offline.append(products[cont])
            cont +=1
    else:
        print('No products were found')
    return requests_online, requests_offline


# list of the online and offline products
requests_online, requests_offline = request_analysis(products)

if len(requests_online) > 0:
    print("Total online products:", len(requests_online))
    path_on = dag.download_all(requests_online, wait=0.1, timeout=1, outputs_prefix=output_path,progress_callback=ProgressCallback())

if len(requests_offline) > 0:
    print("Total offline products:", len(requests_offline))
    path_off = dag.download_all(requests_offline, wait=(TIME_TO_RETRIEVE_IN_SECONDS/60), timeout=(TIME_TO_CHECK_IN_SECONDS/60), outputs_prefix=output_path,progress_callback=ProgressCallback())


def check_online(products):
    requests_online, requests_offline = request_analysis(products)
    total_prod_size = 0
    cont = 0
    if len(requests_online) > 0:
        for p in requests_online:
            if p.properties["storageStatus"] == "ONLINE":
                get_info_json(features, cont+1, p.properties["id"], filename)
                # in bytes
                try:
                    total_prod_size += p.properties["resourceSize"]
                except:
                    total_prod_size += 0
            cont +=1
    return total_prod_size


print('{s:{c}^{n}}'.format(s='CHECK DISC SPACE ', n=75, c='#'))
total, used, free, percent = psutil.disk_usage(DATASET_PATH)
print('Total: {}B'.format(round(total)))
print('Used: {}B'.format((round(used))))
print('Free: {}B'.format((round(free))))
print('Total used (%): {}%'.format(round(percent)))
print('{s:{c}^{n}}'.format(s='', n=75, c='#'))


# check if there is enough disk space (bytes)
total_prod_size  = check_online(products)
if free < total_prod_size:
    print('Disk space available: {}B'.format(free))
    print('Total products size: {}B'.format(total_prod_size))
    raise SystemExit('No space left on device: %s' % DATASET_PATH)


# List all .zip folders
folder_zip = [i for i in [os.path.relpath(os.path.join(output_path, p)) for p in os.listdir(output_path)] if i.endswith('.zip')]

# remove all .zip files
for file_name in folder_zip:
	print('Deleting the file: {}.'.format(join(output_path, file_name)))
	os.remove(file_name)

print('All zip file names: {} '.format(folder_zip))


# Checking if online products downloaded
if len(path_on) == 0:
	feature_data =  json.dumps(features).encode('utf-8')
	raise SystemExit('Unexpected error occurred! No online products were download!')
else:
	feature_data =  json.dumps(features).encode('utf-8')
	variables.put("FEATURE_DATA"+str(i), feature_data)


print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"/>
      <metadata>
        <positionTop>
            539
        </positionTop>
        <positionLeft>
            117.73333740234375
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Merge">
      <description>
        <![CDATA[ As a merge operation, we simply print the results from previous tasks. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
      </genericInformation>
      <depends>
        <task ref="PostProcess"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
__file__ = variables.get("PA_TASK_NAME")

import json
import shutil
import pickle
from os.path import join, os
from geojson import FeatureCollection

i = int(variables.get('PA_TASK_REPLICATION'))    # task replication number
TASK_NUMBER = 'Process_' + str(i)
DATASET_PATH = variables.get("DATASET_PATH")  # folder dataset path
PROVIDER = variables.get('PROVIDER')          # provider name
output_path_corrupted_files = join(DATASET_PATH, 'corrupted_files', PROVIDER)
output_path_suc_files = join(DATASET_PATH, 'suc_files', PROVIDER)

# add info json
def create_json(features, filename):
    json_object = json.dumps(features, sort_keys=True, indent=4)
    # writing to filename.json
    with open(filename, "w") as outfile:
        outfile.write(json_object)

def read_files(output_path_files):
    features = []
    corrupted_files = os.listdir(output_path_files)
    for f in corrupted_files:
        fp = os.path.join(output_path_files, f)
        content = pickle.load(open(fp,'rb'))
        features.append(content)
    return features


if  os.path.isdir(output_path_corrupted_files):
    features = read_files(output_path_corrupted_files)
    feature_collection = FeatureCollection(features)
    filename = os.path.join(DATASET_PATH, PROVIDER+'_output_error.json')
    create_json(feature_collection, filename)
    shutil.rmtree(output_path_corrupted_files)


if os.path.isdir(output_path_suc_files):
    features2 = read_files(output_path_suc_files)
    feature_collection2 = FeatureCollection(features2)
    filename = os.path.join(DATASET_PATH, PROVIDER+'_output.json')
    create_json(feature_collection2, filename)
    shutil.rmtree(output_path_suc_files)

print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="end"/>
      <metadata>
        <positionTop>
            787.88330078125
        </positionTop>
        <positionLeft>
            117.73333740234375
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Split2">
      <description>
        <![CDATA[ This task defines some input, here strings to be processed. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
        <info name="Documentation" value="user/ProActiveUserGuide.html#_replicate"/>
      </genericInformation>
      <depends>
        <task ref="Fetch_Satellite_Images_From_Copernicus"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
__file__ = variables.get("PA_TASK_NAME")

import os
import sys
import json
import time
import shutil
import subprocess
import random as r
from zipfile import ZipFile
from os.path import join, os
from collections import OrderedDict
from ast import literal_eval as make_tuple

from distutils.dir_util import copy_tree
from geojson import FeatureCollection

try:
    from sentinelsat.sentinel import SentinelAPI, read_geojson, geojson_to_wkt
except ImportError:
    subprocess.call([sys.executable, "-m", "pip", "install", 'sentinelsat'])
finally:
    from sentinelsat.sentinel import SentinelAPI, read_geojson, geojson_to_wkt


if 'variables' in locals():
    DATASET_PATH = variables.get("DATASET_PATH")  # folder dataset path
    GJSON_DATA = variables.get("GJSON_DATA")  # gson data
    N_acq = variables.get("N_acq")  # number of features
    SEARCH_ENGINE = variables.get("SEARCH_ENGINE")  # search provider

if SEARCH_ENGINE.lower() == 'copernicus' or SEARCH_ENGINE.lower() == 'all':
    provider = 'copernicus'

gjson_dec = json.loads(GJSON_DATA.decode('utf-8'))
gjson = FeatureCollection(gjson_dec)
gjson['features'] = list(gjson['features'])

# Loop for each trial
result = {}
for i in range(N_acq):
    result[i] =  json.dumps(gjson[i])
    print(result[i])

variables.put("PROVIDER", provider)

print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow>
        <replicate>
          <script>
            <code language="groovy">
              <![CDATA[
runs=result.size()
]]>
            </code>
          </script>
        </replicate>
      </controlFlow>
      <metadata>
        <positionTop>
            412.33331298828125
        </positionTop>
        <positionLeft>
            656.4000244140625
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" maxNumberOfExecution="2" name="Process2" taskRetryDelay="1:00">
      <description>
        <![CDATA[ This task will be replicated according to the 'runs' value specified in the replication script. The replication index is used in each task's instance to select the input. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
        <info name="REQUIRED_LICENSES" value="$REQUIRED_LICENSES"/>
        <info name="WALLTIME" value="$WALLTIME"/>
      </genericInformation>
      <depends>
        <task ref="Split2"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
__file__ = variables.get("PA_TASK_NAME")

import os
import sys
import json
import time
import copy
import shutil
import psutil
import pickle
import subprocess
import random as r
from pathlib import Path
from zipfile import ZipFile
from os.path import join, os
from collections import OrderedDict
from geojson import FeatureCollection

from distutils.dir_util import copy_tree
from ast import literal_eval as make_tuple

try:
    from sentinelsat.sentinel import SentinelAPI, read_geojson, geojson_to_wkt
except ImportError:
    subprocess.call([sys.executable, "-m", "pip", "install", 'sentinelsat'])
finally:
    from sentinelsat.sentinel import SentinelAPI, read_geojson, geojson_to_wkt

USER_NAME = credentials.get("USER_NAME_COP")  # user email
USER_PASS = credentials.get("USER_PASS_COP")  # user password
DATASET_PATH = variables.get("DATASET_PATH")  # folder dataset path
PROVIDER = variables.get("PROVIDER")
TIME_TO_RETRIEVE_IN_SECONDS = int(variables.get("TIME_TO_RETRIEVE_IN_SECONDS"))   # try product download in seconds
TIME_TO_CHECK_IN_SECONDS = int(variables.get("TIME_TO_CHECK_ONLINE_IN_SECONDS"))  # check online product download in seconds

# Get current job ID
PA_JOB_ID = variables.get("PA_JOB_ID")

# Print task replication number
i = int(variables.get('PA_TASK_REPLICATION'))

# Get data from the split task
features_dec = json.loads(str(results[0].value()[i]))
print("Task id: ", i, " ", features_dec)
features = FeatureCollection(features_dec)

# Define the current 'dataset_path'
os.chdir(DATASET_PATH)

TASK_NUMBER = 'Process_' + str(i)
output_path = join(DATASET_PATH, TASK_NUMBER, PROVIDER)

# Create the folders
os.makedirs(output_path, exist_ok=True)
# Change the permission
os.chmod(output_path, mode=0o770)

print('The path output Copernicus dataset:', output_path)

# -------------------------------------------------------------

#  SentinelAPI
api = SentinelAPI(USER_NAME, USER_PASS, 'https://scihub.copernicus.eu/dhus')
# get dic with product filenames
def get_filename(product):
    dicfile = {}
    cont = 1
    query_id = list(product.keys())
    for i in query_id:
        ditc = {"Folder_" + str(cont): output_path + '/' + product[i]['filename']}
        dicfile.update(ditc)
        cont += 1
    return dicfile

filename = os.path.join(output_path, 'output.json')

def add_info_json(features, filename):
    json_object = json.dumps(features, sort_keys=True, indent=4)
    # writing to filename.json
    with open(filename, "w") as outfile:
        outfile.write(json_object)

    with open(filename, 'a+') as f:
        print('Creating output.json file!')

# Create .json for each query
add_info_json(features, filename)

def get_info_json(features, product_tmp):
    dicfile = get_filename(product_tmp)
    features['features'].update({'output_path': dicfile})

# list of the online and offline products
def request_analysis(product):
    requests_online = OrderedDict()
    requests_offline = OrderedDict()
    for k in product.keys():  # print all keys
        product_info = api.get_product_odata(k)
        if product_info['Online']:
            requests_online[k] = product[k]
        else:
            requests_offline[k] = product[k]
    return requests_online, requests_offline

# download the online
def download_daemon(requests_online):
    if len(requests_online) > 0:
        for i in requests_online:
            print('Product {} is online. Starting download.'.format(i))
            api.download(i, directory_path=output_path, checksum=True)
    else:
        print('There are no products online.')

# retrieve the products from LTA
from sentinelsat.exceptions import LTATriggered

def retrieve_from_lta(requests_offline):
    requests_pending = OrderedDict()
    for k in requests_offline:
        try:
            req_pend = api.download(k, directory_path=output_path, checksum=True)  # download or retrieve product from LTA
            requests_pending[k] = req_pend
        except LTATriggered:
            print(f"Product {k} is not online. Triggered retrieval from the Long Term Archive.")
            requests_pending[k] = requests_offline[k]
        except Exception as e:
            print(f"An unexpected error occurred while trying to download product {k}: {e}")
    if len(requests_pending) > 0:
        print("%d Retreiving offline product, lets's wait {} seconds before trying again".format(TIME_TO_RETRIEVE_IN_SECONDS))
        time.sleep(TIME_TO_RETRIEVE_IN_SECONDS)  # Delay in seconds
    return requests_pending

# check the online products regularly every time
def check_online(requests_pending):
    requests_online_pending, requests_offline_pending = request_analysis(requests_pending)
    if len(requests_online_pending) > 0:
        download_daemon(requests_online_pending)

    if len(requests_offline_pending) > 0:
        print("%d Check status product, lets's wait {} seconds.".format(TIME_TO_CHECK_IN_SECONDS))
        time.sleep(TIME_TO_CHECK_IN_SECONDS)
        check_online(requests_offline_pending)
    else:
        print('All products were downloaded')


queries = []
Nprods = []
queries_json = []
total_prod_size = 0
product = OrderedDict()
product_tmp = OrderedDict()

try:
    footprint = geojson_to_wkt(features['geometry'], decimals=6)
    platform_name = features['properties']["platformname"]
    product_type = features['properties']["producttype"]
    start_date = features['properties']["beginposition"]
    end_date = features['properties']["endposition"]
except:
    footprint = geojson_to_wkt(features['geometry'], decimals=6)
    platform_name = 'Sentinel-2'
    product_type = 'S2MSI1C'
    start_date = None
    end_date = None
    print('The latformname is defined by Sentinel-2!')
    print('The producttype is defined by S2MSI1C!')
    print('The beginposition and endposition are defined by None!')

try:
    cloud_cover_percentage = features['properties']["cloudcoverpercentage"]
    cloud_cover_percentage =  make_tuple(cloud_cover_percentage)
except:
    cloud_cover_percentage =  (None, None)

print('{s:{c}^{n}}'.format(s=' GEOJSON SETTINGS ', n=75, c='#'))
print('{s:{c}^{n}}'.format(s='#', n=75, c='#'))
print("Footprint:", footprint)
print("Platform Name:", platform_name)
print("Product Type:", product_type)
print("Start Date:", start_date)
print("End Date:", end_date)
print("Cloud Cover Percentage:", cloud_cover_percentage)

# query the OpenSearch API with the coordinates of an area, a date interval and any other search keywords accepted by the API.
query_ac = api.query(area=footprint, producttype=product_type, date=(start_date, end_date),
                         platformname=platform_name, cloudcoverpercentage=cloud_cover_percentage)
queries.append(query_ac)
# save the query results in an orderedDict
product.update(query_ac)

# api.count get the number of products matching a query
Nprods.append(api.count(area=footprint, producttype=product_type, date=(start_date, end_date), platformname=platform_name))
# geoJSON FeatureCollection containing footprints and metadata of the scenes
queries_json.append(api.to_geojson(query_ac))

# return the total file size in GB of all products in the OpenSearch response.
total_prod_size += api.get_products_size(query_ac)


# convert bytes to gigabytes
print('{s:{c}^{n}}'.format(s=' CHECK DISC SPACE ', n=75, c='#'))
total, used, free, percent = psutil.disk_usage(DATASET_PATH)
print('Total: {}GB'.format(round(total/1024.0/1024.0/1024.0,1)))
print('Used: {}GB'.format((round(used/1024.0/1024.0/1024.0,1))))
print('Free: {}GB'.format((round(free/1024.0/1024.0/1024.0,1))))
print('Total used (%): {}%'.format(round(percent)))
print('{s:{c}^{n}}'.format(s='', n=75, c='#'))


# check if there is enough disk space
if free < total_prod_size:
    print('Disk space available: {}B'.format(free))
    print('Total products size: {}B'.format(total_prod_size))
    raise SystemExit('No space left on device: %s' % DATASET_PATH)

# Number of product(s)
print('Total number of products available: {} '.format(len(product)))

# list of the online and offline products
requests_online, requests_offline = request_analysis(product)

# Number of on versus off product(s)
print('Online numnber of product(s): {} '.format(len(requests_online)))
print('Offline numnber of product(s): {} '.format(len(requests_offline)))

if requests_online:
    try:
        download_daemon(requests_online)
        print('Download finished!')
    except Exception as err:
        print("Unexpected error:", err, sys.exc_info()[0])
        raise
else:
    print("There no online product!")

if requests_offline:
    try:
        # retrieve the products from LTA
        requests_pending = retrieve_from_lta(requests_offline)
        # check the online products regularly every time
        check_online(requests_pending)
        print('Download finished!')
    except Exception as err:
        print("Unexpected error:", err, sys.exc_info()[0])
        raise
else:
    print("There no offline product!")

# List all .zip folders
folder_zip = [i for i in [os.path.relpath(os.path.join(output_path, p)) for p in os.listdir(output_path)] if
              i.endswith('.zip')]

# Unzip folders
print('**********************************************************************************************************')
print('Extracting all the files...')
print('**********************************************************************************************************')

def unzip_files(folder_zip, output_path):
    corrupted_file = []
    for file_name in folder_zip:
        try:
            shutil.unpack_archive(file_name, output_path)
            print('Unzip file name: {} '.format(file_name))
            # remove each successful zip file
            os.remove(file_name)
        except:
            corrupted_file.append(file_name)
            print('Error while unzip file name: {}. Try to unzip it manually...'.format(file_name))
            # remove each corrupted zip file
            os.remove(file_name)
    return corrupted_file


# call unzip_files function
corrupted_file = unzip_files(folder_zip, output_path)


if len(corrupted_file) > 0:
    feature_data =  json.dumps(features).encode('utf-8')

    print('Deleting the folder: {}.'.format(join(DATASET_PATH, TASK_NUMBER)))
    # Remove the "dataset_path" directory
    shutil.rmtree(join(DATASET_PATH, TASK_NUMBER))
    raise SystemExit('Error caused by corrupted or incomplete products: {}'.format(corrupted_file))

else:
	# add info filename and save output json file
    product_tmp.update(query_ac)
    get_info_json(features, product_tmp)
    product_tmp = OrderedDict()

    feature_data =  json.dumps(features).encode('utf-8')
    variables.put("FEATURE_DATA"+str(i), feature_data)

    print('All files were successfully unzipped')
    # List all .safe folders
    folder_safe = [i for i in [os.path.relpath(os.path.join(output_path, p)) for p in os.listdir(output_path)] if
               i.endswith('.SAFE')]

    print('All zip file names: {} '.format( folder_zip))
    print('All safe file names: {} '.format(folder_safe))

    # call again to save the outuput path in the json file

print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"/>
      <metadata>
        <positionTop>
            539
        </positionTop>
        <positionLeft>
            656.4000244140625
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="Merge2">
      <description>
        <![CDATA[ As a merge operation, we simply print the results from previous tasks. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
      </genericInformation>
      <depends>
        <task ref="PostProcess2"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
__file__ = variables.get("PA_TASK_NAME")

import json
import shutil
import pickle
from os.path import join, os
from geojson import FeatureCollection

i = int(variables.get('PA_TASK_REPLICATION'))    # task replication number
TASK_NUMBER = 'Process_' + str(i)
DATASET_PATH = variables.get("DATASET_PATH")  # folder dataset path
PROVIDER = variables.get('PROVIDER')          # provider name
output_path_corrupted_files = join(DATASET_PATH, 'corrupted_files', PROVIDER)
output_path_suc_files = join(DATASET_PATH, 'suc_files', PROVIDER)

# add info json
def create_json(features, filename):
    json_object = json.dumps(features, sort_keys=True, indent=4)
    # writing to filename.json
    with open(filename, "w") as outfile:
        outfile.write(json_object)

def read_files(output_path_files):
    features = []
    corrupted_files = os.listdir(output_path_files)
    for f in corrupted_files:
        fp = os.path.join(output_path_files, f)
        content = pickle.load(open(fp,'rb'))
        features.append(content)
    return features


if  os.path.isdir(output_path_corrupted_files):
    features = read_files(output_path_corrupted_files)
    feature_collection = FeatureCollection(features)
    filename = os.path.join(DATASET_PATH, PROVIDER+'_output_error.json')
    create_json(feature_collection, filename)
    shutil.rmtree(output_path_corrupted_files)


if os.path.isdir(output_path_suc_files):
    features2 = read_files(output_path_suc_files)
    feature_collection2 = FeatureCollection(features2)
    filename = os.path.join(DATASET_PATH, PROVIDER+'_output.json')
    create_json(feature_collection2, filename)
    shutil.rmtree(output_path_suc_files)

print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="end"/>
      <metadata>
        <positionTop>
            787.88330078125
        </positionTop>
        <positionLeft>
            656.4000244140625
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="PostProcess2">
      <description>
        <![CDATA[ The simplest task, ran by a Python engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/postprocess.png"/>
      </genericInformation>
      <depends>
        <task ref="Process2"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
__file__ = variables.get("PA_TASK_NAME")

import os
import sys
import json
import time
import copy
import shutil
import psutil
import pickle
import subprocess
import random as r
from pathlib import Path
from zipfile import ZipFile
from os.path import join, os
from collections import OrderedDict
from geojson import FeatureCollection


i = int(variables.get('PA_TASK_REPLICATION'))    # task replication number
DATASET_PATH = variables.get("DATASET_PATH")     # folder dataset path
TASK_NUMBER = 'Process_' + str(i)
PROVIDER = variables.get("PROVIDER")

task_exception = results[0].hadException()
print("task_exception: ", task_exception)

if task_exception == True:
    GJSON_DATA = variables.get("GJSON_DATA")      # gson data
    gjson_dec = json.loads(GJSON_DATA.decode('utf-8'))
    gjson = FeatureCollection(gjson_dec)
    gjson['features'] = list(gjson['features'])
    feature = gjson[int(i)]
    corrup_features = copy.deepcopy(feature)

    output_path_corrupted_files = join(DATASET_PATH, 'corrupted_files', PROVIDER)
    os.makedirs(output_path_corrupted_files, exist_ok=True)
    os.chmod(output_path_corrupted_files, mode=0o770)

    # generate error file
    name_error =  TASK_NUMBER + '_output_error.ob'
    filename_error = os.path.join(output_path_corrupted_files, name_error)

    with open(filename_error, 'wb') as fp:
        pickle.dump(corrup_features, fp)

    output_path = join(DATASET_PATH, TASK_NUMBER, PROVIDER)
    shutil.rmtree(output_path)
else:
    FEATURE_DATA = variables.get("FEATURE_DATA"+str(i))  # gson data
    feature = json.loads(FEATURE_DATA.decode('utf-8'))
    succ_features = copy.deepcopy(feature)

    output_path_suc_files = join(DATASET_PATH, 'suc_files', PROVIDER)
    os.makedirs(output_path_suc_files, exist_ok=True)
    os.chmod(output_path_suc_files, mode=0o770)

    name_suc =  TASK_NUMBER + '_output.ob'
    filename_suc = os.path.join(output_path_suc_files, name_suc)

    with open(filename_suc, 'wb') as fp:
        pickle.dump(succ_features['features'], fp)

print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="end"/>
      <metadata>
        <positionTop>
            663.4500122070312
        </positionTop>
        <positionLeft>
            656.4000244140625
        </positionLeft>
      </metadata>
    </task>
    <task fork="false" name="PostProcess">
      <description>
        <![CDATA[ The simplest task, ran by a Python engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/postprocess.png"/>
      </genericInformation>
      <depends>
        <task ref="Process"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
__file__ = variables.get("PA_TASK_NAME")

import os
import sys
import json
import time
import copy
import shutil
import psutil
import pickle
import subprocess
import random as r
from pathlib import Path
from zipfile import ZipFile
from os.path import join, os
from collections import OrderedDict
from geojson import FeatureCollection


i = int(variables.get('PA_TASK_REPLICATION'))    # task replication number
DATASET_PATH = variables.get("DATASET_PATH")     # folder dataset path
TASK_NUMBER = 'Process_' + str(i)
PROVIDER = variables.get("PROVIDER")

task_exception = results[0].hadException()
print("task_exception: ", task_exception)

if task_exception == True:
    GJSON_DATA = variables.get("GJSON_DATA")      # gson data
    gjson_dec = json.loads(GJSON_DATA.decode('utf-8'))
    gjson = FeatureCollection(gjson_dec)
    gjson['features'] = list(gjson['features'])
    feature = gjson[int(i)]
    corrup_features = copy.deepcopy(feature)

    output_path_corrupted_files = join(DATASET_PATH, 'corrupted_files', PROVIDER)
    os.makedirs(output_path_corrupted_files, exist_ok=True)
    os.chmod(output_path_corrupted_files, mode=0o770)

    # generate error file
    name_error =  TASK_NUMBER + '_output_error.ob'
    filename_error = os.path.join(output_path_corrupted_files, name_error)

    with open(filename_error, 'wb') as fp:
        pickle.dump(corrup_features, fp)

    output_path = join(DATASET_PATH, TASK_NUMBER, PROVIDER)
    shutil.rmtree(output_path)
else:
    FEATURE_DATA = variables.get("FEATURE_DATA"+str(i))  # gson data
    feature = json.loads(FEATURE_DATA.decode('utf-8'))
    succ_features = copy.deepcopy(feature)

    output_path_suc_files = join(DATASET_PATH, 'suc_files', PROVIDER)
    os.makedirs(output_path_suc_files, exist_ok=True)
    os.chmod(output_path_suc_files, mode=0o770)

    name_suc =  TASK_NUMBER + '_output.ob'
    filename_suc = os.path.join(output_path_suc_files, name_suc)

    with open(filename_suc, 'wb') as fp:
        pickle.dump(succ_features['features'], fp)

print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="end"/>
      <metadata>
        <positionTop>
            662.433349609375
        </positionTop>
        <positionLeft>
            117.73333740234375
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Final_Merge">
      <description>
        <![CDATA[ The simplest task, ran by a Python engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
      </genericInformation>
      <depends>
        <task ref="Continuation"/>
        <task ref="Continuation2"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
__file__ = variables.get("PA_TASK_NAME")

import os
import json
import shutil
import pickle
from pathlib import Path
from os.path import join, os
from geojson import FeatureCollection

i = int(variables.get('PA_TASK_REPLICATION'))    # task replication number
TASK_NUMBER = 'Process_' + str(i)
DATASET_PATH = variables.get("DATASET_PATH")  # folder dataset path
output_path_corrupted_files = join(DATASET_PATH, 'corrupted_files')
output_path_suc_files = join(DATASET_PATH, 'suc_files')

if  os.path.isdir(output_path_corrupted_files):
    shutil.rmtree(output_path_corrupted_files)

if os.path.isdir(output_path_suc_files):
    shutil.rmtree(output_path_suc_files)

# delete emppty directory
os.chdir(DATASET_PATH)
directory_contents = os.listdir(DATASET_PATH)

for item in directory_contents:
    if os.path.isdir(item):
        if len(os.listdir(item)) == 0:
            shutil.rmtree(item)

print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            412.33331298828125
        </positionTop>
        <positionLeft>
            999.183349609375
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:3178px;
            height:4892px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-20.666671752929688px;left:-112.73333740234375px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" style="top: 154.557px; left: 314.123px;" id="jsPlumb_1_153"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Condition</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" style="top: 283.446px; left: 117.734px;" id="jsPlumb_1_156"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Load and return a dataset including a
'metadata folder' with metadata files and 'images folder' containing satellite images.

Please access: https://eodag.readthedocs.io/en/stable/"><img src="/automation-dashboard/styles/patterns/img/wf-icons/eodag.png" width="20px">&nbsp;<span class="name">Fetch_Satellite_Images_From_EODAG</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" style="top: 283.446px; left: 338.116px;" id="jsPlumb_1_159"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Else</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" style="top: 283.446px; left: 453.012px;" id="jsPlumb_1_162"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Continuation</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" style="top: 154.557px; left: 859.792px;" id="jsPlumb_1_165"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Condition2</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" style="top: 283.446px; left: 656.406px;" id="jsPlumb_1_168"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Load and return a Copernicus dataset including a 'metadata folder' with metadata files and 'images folder' containing satellite images according to the resolution &amp; image band selected by user.

Please access:
https://peps.cnes.fr/rocket/#/register to create a new user account from Copernicus website.

Please add third party credentials (USER_NAME_COP and USER_PASS_COP) in the Scheduling &amp; Orchestration interface → Manage Third-Party Credentials to connect to Copernicus."><img src="/automation-dashboard/styles/patterns/img/wf-icons/copernicus.png" width="20px">&nbsp;<span class="name">Fetch_Satellite_Images_From_Copernicus</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" style="top: 282.439px; left: 888.785px;" id="jsPlumb_1_171"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Else2</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" style="top: 283.446px; left: 999.184px;" id="jsPlumb_1_174"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Continuation2</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" style="top: 25.6684px; left: 586.962px;" id="jsPlumb_1_177"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Import geo dataset."><img src="/automation-dashboard/styles/patterns/img/wf-icons/geodata.jpg" width="20px">&nbsp;<span class="name">Import_GeoData</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" style="top: 412.335px; left: 117.734px;" id="jsPlumb_1_180"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task defines some input, here strings to be processed."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">Split</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" style="top: 539.002px; left: 117.734px;" id="jsPlumb_1_183"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task will be replicated according to the 'runs' value specified in the replication script. The replication index is used in each task's instance to select the input."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">Process</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" style="top: 787.891px; left: 117.734px;" id="jsPlumb_1_186"><a class="task-name" data-toggle="tooltip" data-placement="right" title="As a merge operation, we simply print the results from previous tasks."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">Merge</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" style="top: 412.335px; left: 656.406px;" id="jsPlumb_1_189"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task defines some input, here strings to be processed."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">Split2</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" style="top: 539.002px; left: 656.406px;" id="jsPlumb_1_192"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task will be replicated according to the 'runs' value specified in the replication script. The replication index is used in each task's instance to select the input."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">Process2</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" style="top: 787.891px; left: 656.406px;" id="jsPlumb_1_195"><a class="task-name" data-toggle="tooltip" data-placement="right" title="As a merge operation, we simply print the results from previous tasks."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">Merge2</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" style="top: 663.446px; left: 656.406px;" id="jsPlumb_1_198"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Python engine."><img src="/automation-dashboard/styles/patterns/img/wf-icons/postprocess.png" width="20px">&nbsp;<span class="name">PostProcess2</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" style="top: 662.439px; left: 117.734px;" id="jsPlumb_1_201"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Python engine."><img src="/automation-dashboard/styles/patterns/img/wf-icons/postprocess.png" width="20px">&nbsp;<span class="name">PostProcess</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" style="top: 412.335px; left: 999.184px;" id="jsPlumb_1_204"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Python engine."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">Final_Merge</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><svg style="position:absolute;left:353.5px;top:65.5px" width="301" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 89 C -10 39 290 50 280 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M47.49354,59.439374 L68.52123773504412,62.05393475921365 L61.17724227219442,56.4802707361815 L65.56213447122563,48.37023248701922 L47.49354,59.439374" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M47.49354,59.439374 L68.52123773504412,62.05393475921365 L61.17724227219442,56.4802707361815 L65.56213447122563,48.37023248701922 L47.49354,59.439374" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><svg style="position:absolute;left:107.5px;top:194.5px" width="217" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 206 50 196 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-stroke: #337dff;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M30.088448,59.394175999999995 L51.26331108052566,60.184855151736926 L43.46583824369132,55.265564820923885 L47.134699901449544,46.8074649080456 L30.088448,59.394175999999995" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M30.088448,59.394175999999995 L51.26331108052566,60.184855151736926 L43.46583824369132,55.265564820923885 L47.134699901449544,46.8074649080456 L30.088448,59.394175999999995" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><div style="position: absolute; transform: translate(-50%, -50%); left: 215.5px; top: 238.5px;" class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_215">if</div><svg style="position:absolute;left:303.5px;top:194.5px" width="45" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 24 88 C 34 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-stroke: #337dff;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M24.6893655,65.8307285 L24.589910726622776,44.641341799388485 L20.002489702214802,52.638564338796755 L11.397746565419526,49.328217597173676 L24.6893655,65.8307285" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M24.6893655,65.8307285 L24.589910726622776,44.641341799388485 L20.002489702214802,52.638564338796755 L11.397746565419526,49.328217597173676 L24.6893655,65.8307285" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><div style="position: absolute; transform: translate(-50%, -50%); left: 325.5px; top: 238.5px;" class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_219">else</div><svg style="position:absolute;left:303.5px;top:194.5px" width="160" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 139 88 C 149 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-stroke: #337dff;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M120.88799524999999,60.59109050000001 L105.48684574205345,46.037582543707195 L108.10722544612086,54.87690436195273 L99.77265960400618,58.81835234758632 L120.88799524999999,60.59109050000001" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M120.88799524999999,60.59109050000001 L105.48684574205345,46.037582543707195 L108.10722544612086,54.87690436195273 L99.77265960400618,58.81835234758632 L120.88799524999999,60.59109050000001" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><div style="position: absolute; transform: translate(-50%, -50%); left: 383px; top: 238.5px;" class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_223">continuation</div><svg style="position:absolute;left:633.5px;top:65.5px" width="287" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 266 89 C 276 39 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M221.017136,59.439374 L203.06722241880837,48.1787966423441 L207.36566075771952,56.33498618443904 L199.9628346032474,61.83027188462457 L221.017136,59.439374" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M221.017136,59.439374 L203.06722241880837,48.1787966423441 L207.36566075771952,56.33498618443904 L199.9628346032474,61.83027188462457 L221.017136,59.439374" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><svg style="position:absolute;left:645.5px;top:194.5px" width="225" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 214 50 204 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-stroke: #337dff;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M31.429631999999998,59.394175999999995 L52.594708546890494,60.413751776617886 L44.85087890253428,55.410442627745525 L48.61097517463602,46.99250487408361 L31.429631999999998,59.394175999999995" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M31.429631999999998,59.394175999999995 L52.594708546890494,60.413751776617886 L44.85087890253428,55.410442627745525 L48.61097517463602,46.99250487408361 L31.429631999999998,59.394175999999995" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><div style="position: absolute; transform: translate(-50%, -50%); left: 757.5px; top: 238.5px;" class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_232">if</div><svg style="position:absolute;left:849.5px;top:194.5px" width="50" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 29 87 C 39 37 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-stroke: #337dff;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M29.23930675,64.92074025000001 L27.81002950592749,43.77937873850845 L23.733625109762862,52.048775766038915 L14.9380650219664,49.28506037874559 L29.23930675,64.92074025000001" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M29.23930675,64.92074025000001 L27.81002950592749,43.77937873850845 L23.733625109762862,52.048775766038915 L14.9380650219664,49.28506037874559 L29.23930675,64.92074025000001" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><div style="position: absolute; transform: translate(-50%, -50%); left: 874px; top: 238px;" class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_236">else</div><svg style="position:absolute;left:849.5px;top:194.5px" width="160" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 139 88 C 149 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-stroke: #337dff;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M120.88799524999999,60.59109050000001 L105.48684574205345,46.037582543707195 L108.10722544612086,54.87690436195273 L99.77265960400618,58.81835234758632 L120.88799524999999,60.59109050000001" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M120.88799524999999,60.59109050000001 L105.48684574205345,46.037582543707195 L108.10722544612086,54.87690436195273 L99.77265960400618,58.81835234758632 L120.88799524999999,60.59109050000001" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><div style="position: absolute; transform: translate(-50%, -50%); left: 929px; top: 238.5px;" class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_240">continuation</div><svg style="position:absolute;left:157.5px;top:322.5px" width="79" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 89 C -10 39 68 50 58 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.4283379999999983,64.88952975000001 L21.733488145810448,54.21612925440651 L12.513970054028428,54.238178184174615 L11.082136579985052,45.13049720037809 L3.4283379999999983,64.88952975000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.4283379999999983,64.88952975000001 L21.733488145810448,54.21612925440651 L12.513970054028428,54.238178184174615 L11.082136579985052,45.13049720037809 L3.4283379999999983,64.88952975000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><svg style="position:absolute;left:183.43922331190683px;top:441.5px" width="15.06077668809317" height="98" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 87 C -10 87 -10 -10 0 0 " transform="translate(14.56077668809317,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#e5db3d" style="--darkreader-inline-stroke: #e7dd4a;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.889249999999999,76.5282105 L-0.6925307942790297,55.758339342278944 L-6.80543261883027,62.65996460618586 L-14.56077668809317,57.67452196110922 L-4.889249999999999,76.5282105" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(14.56077668809317,10.5)" style="--darkreader-inline-fill: rgba(231, 221, 74, 0.5); --darkreader-inline-stroke: rgba(231, 221, 74, 0.5);" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.889249999999999,76.5282105 L-0.6925307942790297,55.758339342278944 L-6.80543261883027,62.65996460618586 L-14.56077668809317,57.67452196110922 L-4.889249999999999,76.5282105" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(14.56077668809317,10.5)" style="--darkreader-inline-fill: rgba(231, 221, 74, 0.5); --darkreader-inline-stroke: rgba(231, 221, 74, 0.5);" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><div style="position: absolute; transform: translate(-50%, -50%); left: 190px; top: 491.25px;" class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_249">replicate</div><svg style="position:absolute;left:153.02350329153307px;top:451.5px" width="15.47649670846693" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 87 C -10 37 -10 50 0 0 " transform="translate(14.97649670846693,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><svg style="position:absolute;left:152.97835549527008px;top:701.5px" width="15.521644504729927" height="87" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 86 C -10 36 -10 50 0 0 " transform="translate(15.021644504729927,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,64.94400000000002 L-1.2792764656232984,43.975321988607305 L-7.004697339623629,51.20163196089339 L-15.021644504729927,46.64876932823094 L-4.331249999999999,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(15.021644504729927,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,64.94400000000002 L-1.2792764656232984,43.975321988607305 L-7.004697339623629,51.20163196089339 L-15.021644504729927,46.64876932823094 L-4.331249999999999,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(15.021644504729927,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><svg style="position:absolute;left:695.5px;top:322.5px" width="86" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 89 C -10 39 75 50 65 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M4.508909999999998,64.440458 L23.434662375702892,54.910720489786186 L14.231173673041992,54.36684945728563 L13.361053832988517,45.18845681674419 L4.508909999999998,64.440458" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M4.508909999999998,64.440458 L23.434662375702892,54.910720489786186 L14.231173673041992,54.36684945728563 L13.361053832988517,45.18845681674419 L4.508909999999998,64.440458" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><svg style="position:absolute;left:721.4392233119069px;top:441.5px" width="15.06077668809317" height="98" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 87 C -10 87 -10 -10 0 0 " transform="translate(14.56077668809317,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#e5db3d" style="--darkreader-inline-stroke: #e7dd4a;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.889249999999999,76.5282105 L-0.6925307942790297,55.758339342278944 L-6.80543261883027,62.65996460618586 L-14.56077668809317,57.67452196110922 L-4.889249999999999,76.5282105" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(14.56077668809317,10.5)" style="--darkreader-inline-fill: rgba(231, 221, 74, 0.5); --darkreader-inline-stroke: rgba(231, 221, 74, 0.5);" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.889249999999999,76.5282105 L-0.6925307942790297,55.758339342278944 L-6.80543261883027,62.65996460618586 L-14.56077668809317,57.67452196110922 L-4.889249999999999,76.5282105" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(14.56077668809317,10.5)" style="--darkreader-inline-fill: rgba(231, 221, 74, 0.5); --darkreader-inline-stroke: rgba(231, 221, 74, 0.5);" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><div style="position: absolute; transform: translate(-50%, -50%); left: 728px; top: 491.25px;" class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_264">replicate</div><svg style="position:absolute;left:691.0235032915331px;top:451.5px" width="15.47649670846693" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 87 C -10 37 -10 50 0 0 " transform="translate(14.97649670846693,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><svg style="position:absolute;left:695.5px;top:702.5px" width="22" height="86" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 85 C -10 35 11 50 1 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.73415625,64.02515625000001 L5.120150347768417,44.3449665184895 L-2.1316011192937028,50.03812914219545 L-8.86687676003614,43.74241138778321 L-2.73415625,64.02515625000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.73415625,64.02515625000001 L5.120150347768417,44.3449665184895 L-2.1316011192937028,50.03812914219545 L-8.86687676003614,43.74241138778321 L-2.73415625,64.02515625000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><svg style="position:absolute;left:695.5px;top:578.5px" width="22" height="85" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 1 84 C 11 34 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.716906,63.573684000000014 L9.911562440092256,43.309769482088534 L3.157084575658144,49.58488133598163 L-4.077240223926129,43.869590906430396 L3.716906,63.573684000000014" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.716906,63.573684000000014 L9.911562440092256,43.309769482088534 L3.157084575658144,49.58488133598163 L-4.077240223926129,43.869590906430396 L3.716906,63.573684000000014" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><svg style="position:absolute;left:152.92678286621612px;top:578.5px" width="15.57321713378389" height="84" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 83 C -10 33 -10 50 0 0 " transform="translate(15.07321713378389,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.232999999999999,62.650558000000004 L-1.3532580496775122,41.65753329417086 L-7.019166314211491,48.930598915893626 L-15.07321713378389,44.443699608382346 L-4.232999999999999,62.650558000000004" class="" stroke="#666" fill="#666" transform="translate(15.07321713378389,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.232999999999999,62.650558000000004 L-1.3532580496775122,41.65753329417086 L-7.019166314211491,48.930598915893626 L-15.07321713378389,44.443699608382346 L-4.232999999999999,62.650558000000004" class="" stroke="#666" fill="#666" transform="translate(15.07321713378389,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><svg style="position:absolute;left:492.5px;top:322.5px" width="567" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 546 89 C 556 39 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M440.86099199999995,58.289981749999995 L421.7318140857293,49.17545749888406 L426.9425216378504,56.78127940097118 L420.2231117367005,63.09392786103359 L440.86099199999995,58.289981749999995" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M440.86099199999995,58.289981749999995 L421.7318140857293,49.17545749888406 L426.9425216378504,56.78127940097118 L420.2231117367005,63.09392786103359 L440.86099199999995,58.289981749999995" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><svg style="position:absolute;left:1038.5px;top:322.5px" width="22" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 89 C -10 39 11 50 1 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.7483839999999997,67.21769599999999 L5.128983811947176,47.54672560311061 L-2.1294354733851906,53.231384737862236 L-8.857327450190578,46.92777707649579 L-2.7483839999999997,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.7483839999999997,67.21769599999999 L5.128983811947176,47.54672560311061 L-2.1294354733851906,53.231384737862236 L-8.857327450190578,46.92777707649579 L-2.7483839999999997,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></path></svg><div style="position: absolute; height: 20px; width: 20px; left: 354px; top: 185px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 354px; top: 145px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 304px; top: 185px;" class="_jsPlumb_endpoint source-endpoint if-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 216px; top: 313px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 108px; top: 273px;" class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 378px; top: 313px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 328px; top: 273px;" class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 493px; top: 313px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 443px; top: 273px;" class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 900px; top: 185px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 900px; top: 145px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 850px; top: 185px;" class="_jsPlumb_endpoint source-endpoint if-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 761px; top: 313px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 646px; top: 273px;" class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 929px; top: 312px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 879px; top: 272px;" class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 1040px; top: 313px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 989px; top: 273px;" class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 634px; top: 56px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 158px; top: 442px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 158px; top: 402px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 188px; top: 442px;" class="_jsPlumb_endpoint source-endpoint replicate-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style="--darkreader-inline-fill: #e7dd4a; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 158px; top: 569px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 188px; top: 529px;" class="_jsPlumb_endpoint target-endpoint replicate-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style="--darkreader-inline-fill: #e7dd4a; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 158px; top: 529px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 158px; top: 818px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 158px; top: 778px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 696px; top: 442px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 696px; top: 402px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 726px; top: 442px;" class="_jsPlumb_endpoint source-endpoint replicate-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style="--darkreader-inline-fill: #e7dd4a; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 696px; top: 569px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 726px; top: 529px;" class="_jsPlumb_endpoint target-endpoint replicate-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style="--darkreader-inline-fill: #e7dd4a; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 696px; top: 529px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 696px; top: 818px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 696px; top: 778px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 697px; top: 693px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 697px; top: 653px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 158px; top: 692px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 158px; top: 652px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 1039px; top: 442px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 1039px; top: 402px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
