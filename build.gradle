import com.github.jk1.license.render.*
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.github.jk1:gradle-license-report:1.7'
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
    }

}

repositories {
    jcenter()
    maven {
        url "http://repository.activeeon.com/content/groups/proactive/"
    }
}


group 'org.ow2.proactive'
version projectVersion

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.github.jk1.dependency-license-report'
apply plugin: "io.spring.dependency-management"
apply plugin: "com.github.johnrengelman.shadow"


licenseReport {
    configurations = ['runtime']
    renderers = [new InventoryHtmlReportRenderer()]
}


task zip (type: Zip){
    archiveName="proactive-examples.zip"
    destinationDir = file('build/')
    from '.'
    include 'ModelAsService/**'
    include 'ModelAsServiceScripts/**'
    include 'ModelAsServiceResources/**'
    include 'ModelAsServicePCA/**'
    include 'AutoML/**'
    include 'AWS/**'
    include 'AzureCognitiveServices/**'
    include 'BigData/**'
    include 'Calendars/**'
    include 'Cassandra/**'
    include 'Clearwater/**'
    include 'CloudAutomationClient/**'
    include 'CloudAutomationTemplate/**'
    include 'CloudAutomationDockerTemplate/**'
    include 'COCOAnnotator/**'
    include 'Controls/**'
    include 'Cron/**'
    include 'DatabaseServices/**'
    include 'Databricks/**'
    include 'DataConnectors/**'
    include 'DataStreaming/**'
    include 'DataVisualization/**'
    include 'DataVisualizationScripts/**'
    include 'DeepLearning/**'
    include 'DeepLearningScripts/**'
    include 'DeepLearningWorkflows/**'
    include 'Docker/**'
    include 'DockerBasics/**'
    include 'DockerSwarm/**'
    include 'Elasticsearch/**'
    include 'ELK/**'
    include 'Email/**'
    include 'FileFolderManagement/**'
    include 'Finance/**'
    include 'FluidDynamicsCFDParaviewFlexnetPBS/**'
    include 'GetStarted/**'
    include 'H2O/**'
    include 'HDFS/**'
    include 'InMemoryWorkflows/**'
    include 'JobAnalysis/**'
    include 'JobExecTimeWorkflows/**'
    include 'JupyterLab/**'
    include 'Kafka/**'
    include 'Kibana/**'
    include 'LogAnalysis/**'
    include 'Logstash/**'
    include 'MachineLearning/**'
    include 'MachineLearningScripts/**'
    include 'MachineLearningH2O/**'
    include 'Machining/**'
    include 'MachineLearningWorkflows/**'
    include 'MongoDB/**'
    include 'MySQL/**'
    include 'PostgreSQL/**'
    include 'NodeSources/**'
    include 'Infrastructures/**'
    include 'Policies/**'
    include 'OpenStack/**'
    include 'Oracle/**'
    include 'RemoteVisualization/**'
    include 'ReserveNodes/**'
    include 'Scripts/**'
    include 'DataConnectorScripts/**'
    include 'PcaScripts/**'
    include 'SelectionScripts/**'
    include 'Spark/**'
    include 'SparkOrchestration/**'
    include 'HadoopOrchestration/**'
    include 'Rest/**'
    include 'Storm/**'
    include 'Synchronization/**'
    include 'Tensorboard/**'
    include 'TextAnalysis/**'
    include 'Triggers/**'
    include 'PCWRules/**'
    include 'TwitterApi/**'
    include 'Visdom/**'
    include 'WebNotification/**'
    include 'Zookeeper/**'
    include 'OpenShift/**'
    include 'Demo/**'
    include 'SatelliteImageryResources/**'
    include 'ordered_bucket_list'
}

configurations {
    awsJar
    azureJar
    restJar
}

dependencies {
    awsJar 'com.amazonaws:aws-java-sdk-s3:1.11.228'
    azureJar 'com.microsoft.azure:azure-storage-blob:10.0.3-Preview'
    restJar ('io.rest-assured:rest-assured:3.3.0') {
        exclude group: 'org.codehaus.groovy'
    }
    restJar ('io.rest-assured:json-path:3.3.0') {
        exclude group: 'org.codehaus.groovy'
    }
    restJar ('io.rest-assured:xml-path:3.3.0') {
        exclude group: 'org.codehaus.groovy'
        exclude group: 'com.sun.xml.bind'
        exclude group: 'javax.xml.bind'
    }
}

test {
    dependencies {
        compile "org.ow2.proactive:scheduler-api:$version"
        compile 'junit:junit:4.12'
        compile 'com.googlecode.json-simple:json-simple:1.1'
        testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    }
}


dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.228'
    }
}


task shadowJarAzure(type: ShadowJar) {
    archiveName = 'azure-storage-blob-fat-10.0.3-Preview.jar'
    configurations = [project.configurations.azureJar]
    exclude 'META-INF/**'
    destinationDir = file("./DataConnectors/resources/dataspace/")
}

task shadowJarAws(type: ShadowJar) {
    configurations = [project.configurations.awsJar]
    archiveName = 'aws-java-sdk-fat-1.11.228.jar'
    exclude 'META-INF/**'
    destinationDir = file("./DataConnectors/resources/dataspace/")
}

task shadowJarRest(type: ShadowJar) {
    configurations = [project.configurations.restJar]
    archiveName = 'rest-assured-fat-3.3.0.jar'
    exclude 'META-INF/**'
    destinationDir = file("./Rest/resources/dataspace/")
}

test.dependsOn shadowJarAws
test.dependsOn shadowJarAzure
test.dependsOn shadowJarRest
zip.dependsOn test
build.dependsOn zip

defaultTasks 'clean', 'test', 'zip'
