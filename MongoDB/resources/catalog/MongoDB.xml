<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.14" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="2" name="MongoDB" onTaskError="continueJobExecution" priority="normal" projectName="1. Database" tags="NoSQL,MongoDB,Service Automation,Data Base" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd">
  <variables>
    <variable advanced="false" description="The name of the service to be deployed." hidden="false" name="INSTANCE_NAME" value="mongodb-server-$PA_JOB_ID"/>
    <variable advanced="false" description="The endpoint identifier that will be used." hidden="true" name="ENDPOINT_ID" value="mongodb-endpoint-$PA_JOB_ID"/>
    <variable advanced="true" description="The port that will be used to expose the service. Random value if -1 is set." hidden="false" model="PA:Integer" name="SERVICE_PORT" value="-1"/>
    <variable advanced="true" description="Username for the root user." hidden="false" name="USER" value="activeeon"/>
    <variable advanced="true" description="Password for the root user." hidden="false" model="PA:HIDDEN" name="PASSWORD" value="ENC(KvnQVqWfueBasc1Blj8RZZDKXPrmuHC4)"/>
    <variable advanced="true" description="Name of the docker image used to run the service" group="Container management" hidden="false" name="DOCKER_IMAGE" value="activeeon/mongo"/>
    <variable advanced="false" description="Container platform used for executing the workflow tasks." group="Container management" hidden="false" model="PA:List(docker,singularity)" name="ENGINE" value="docker"/>
    <variable advanced="true" description="Path where the DB will be mounted." hidden="false" model="PA:NOT_EMPTY_STRING" name="MOUNT_DB_PATH" value="/tmp/$INSTANCE_NAME"/>
    <variable advanced="true" description="Location of the singularity image on the node file system. If the image does not exist in the specified location, it is possible to automatically built it from the specified Docker image." group="Singularity management" hidden="false" name="SINGULARITY_IMAGE_PATH" value="/tmp/mongodb.sif"/>
    <variable advanced="true" description="Pull and build the singularity image if the Singularity Image File (SIF) file is not available." group="Singularity management" hidden="false" model="PA:Boolean" name="BUILD_IMAGE_IF_NOT_EXISTS" value="True"/>
    <variable advanced="false" group="Singularity management" hidden="true" model="PA:SPEL(variables['ENGINE'].toLowerCase() == 'singularity' ? showVar('SINGULARITY_IMAGE_PATH') : hideVar('SINGULARITY_IMAGE_PATH'))" name="SINGULARITY_IMAGE_PATH_HANDLER" value=""/>
    <variable advanced="false" group="Singularity management" hidden="true" model="PA:SPEL(variables['ENGINE'].toLowerCase() == 'singularity' ? showVar('BUILD_IMAGE_IF_NOT_EXISTS') : hideVar('BUILD_IMAGE_IF_NOT_EXISTS'))" name="SINGULARITY_BUILD_IMAGE_HANDLER" value=""/>
  </variables>
  <description>
    <![CDATA[ Deploy a MongoDB Database server. ]]>
  </description>
  <genericInformation>
<info name="bucketName" value="service-automation"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png"/>
<info name="pca.states" value="(VOID,RUNNING)"/>
<info name="Documentation" value="PSA/PSAUserGuide.html#_mongodb_2"/>
<info name="NODE_ACCESS_TOKEN" value="$NODE_ACCESS_TOKEN"/>
<info name="pca.service.id" value="MongoDB"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task fork="true" name="Start_MongoDB_D" onTaskError="cancelJob">
      <description>
        <![CDATA[ Pull MongoDB image and start a container ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png"/>
        <info name="Documentation" value="PSA/PSAUserGuide.html"/>
        <info name="DISABLE_PTK" value="True"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Check_Not_Used_By_Other_Service/raw"/>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
echo BEGIN "$variables_PA_TASK_NAME"

PATH=$PATH:/usr/sbin

GET_RANDOM_PORT(){
    PCA_SERVICES_PORT_RANGE_FILE=$variables_PA_SCHEDULER_HOME/config/pca_services_port_range
    if [[ -f "$PCA_SERVICES_PORT_RANGE_FILE" ]]; then
        read LOWERPORT UPPERPORT < $PCA_SERVICES_PORT_RANGE_FILE
    else
        read LOWERPORT UPPERPORT < /proc/sys/net/ipv4/ip_local_port_range
    fi
    while :
    do
        RND_PORT="`shuf -i $LOWERPORT-$UPPERPORT -n 1`"
        ss -lpn | grep -q ":$RND_PORT " || break
    done
    echo $RND_PORT
}

DOCKER_IMAGE=$variables_DOCKER_IMAGE
INSTANCE_NAME=$variables_INSTANCE_NAME
MONGODB_INTERNAL_PORT=27017
MONGODB_USER=$variables_USER
MONGODB_PASSWORD=$variables_PASSWORD
MONGODB_HOST_PORT=$variables_SERVICE_PORT

# Check whether USER and PASSWORD have been well entered
if [ \( ! -z "$MONGODB_USER" -a -z "$MONGODB_PASSWORD" \) -o \( -z "$MONGODB_USER" -a ! -z "$MONGODB_PASSWORD" \) ]; then
    echo [ERROR] "$variables_PA_JOB_NAME"_USER and "$variables_PA_JOB_NAME"_PASSWORD are used in junction. They should be either both entered or both blank.
    exit 1
fi

if [[ -z $INSTANCE_NAME ]]; then
    echo [ERROR] The INSTANCE_NAME is not provided by the user. Empty value is not allowed.
    exit 1
fi

if [ "$MONGODB_HOST_PORT" -eq "-1" ]; then
    echo "[INFO] Picking a random port number"
    MONGODB_HOST_PORT=$(GET_RANDOM_PORT)
fi
echo "The service will be initialized on port $MONGODB_HOST_PORT"

echo "Pulling "$variables_PA_JOB_NAME" image"
docker pull $DOCKER_IMAGE

if [ "$(docker ps -a --format '{{.Names}}' | grep "^$INSTANCE_NAME$")" ]; then
    echo [ERROR] "$INSTANCE_NAME" is already used by another service instance.
    exit 128
else
    echo "Running $INSTANCE_NAME container"

    if [[ -z $MONGODB_USER ]]; then
        INSTANCE_STATUS=$(docker run --name $INSTANCE_NAME -p $MONGODB_HOST_PORT:$MONGODB_INTERNAL_PORT -d $DOCKER_IMAGE)
    else
        INSTANCE_STATUS=$(docker run --name $INSTANCE_NAME -p $MONGODB_HOST_PORT:$MONGODB_INTERNAL_PORT -e MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER -e MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD -d $DOCKER_IMAGE)
    fi

    if [ "$(docker ps -a --format '{{.Names}}' | grep "^$INSTANCE_NAME$")" ]; then
        RUNNING=$(docker inspect --format="{{ .State.Running }}" $INSTANCE_NAME 2> /dev/null)
        if [ "${RUNNING,,}" = "true" ]; then
            echo $INSTANCE_NAME > $INSTANCE_NAME"_status"
        fi
    else
        echo $INSTANCE_STATUS > $INSTANCE_NAME"_status"
    fi
fi

MONGODB_PORT=$(docker inspect --format='{{(index (index .NetworkSettings.Ports "'$MONGODB_INTERNAL_PORT'/tcp") 0).HostPort}}' $INSTANCE_NAME)
echo "$MONGODB_PORT" > $INSTANCE_NAME"_port"

containerID=$(docker ps -aqf "name=^/$INSTANCE_NAME$")
echo "$containerID" > $INSTANCE_NAME"_containerID"

echo END "$variables_PA_TASK_NAME"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <post>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Post_Start_Service/raw">
            <arguments>
              <argument value="mongodb"/>
            </arguments>
          </file>
        </script>
      </post>
      <cleaning>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Clean_Start_Service/raw"/>
        </script>
      </cleaning>
      <metadata>
        <positionTop>
            353.453125
        </positionTop>
        <positionLeft>
            480.46875
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Loop_Over_Instance_Status_D">
      <description>
        <![CDATA[ Loop over service instance status and fetch docker container logs.
It will run every minute. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png"/>
        <info name="Documentation" value="PSA/PSAUserGuide.html"/>
        <info name="NODE_ACCESS_TOKEN" value="PSA_$INSTANCE_NAME"/>
      </genericInformation>
      <depends>
        <task ref="Start_MongoDB_D"/>
      </depends>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[
/*********************************************************************************
* THIS PART IS IMAGE SPECIFIC. IF YOU NEED TO MODIFY SOMETHING, DO IT HERE       *
/********************************************************************************/
def username = variables.get("USER")
def credentials = variables.get("PASSWORD")
def hostname = variables.get("HOSTNAME")
def port = variables.get("PORT")
def instanceId = variables.get("PCA_INSTANCE_ID") as long
def channel = "Service_Instance_" + instanceId
def credentialsKey
// Add any credentials to 3rd party credentials if they apply:
if (!username.isEmpty()){
    credentialsKey = variables.get("PA_JOB_NAME").toLowerCase() + "://" + username + "@" + hostname+ ":" + port
    synchronizationapi.put(channel, "CREDENTIALS_KEY", credentialsKey)
    variables.put("CREDENTIALS_KEY", credentialsKey)
    schedulerapi.connect()
    schedulerapi.putThirdPartyCredential(credentialsKey, credentials)
}
/********************************************************************************/
]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Check_Instance_Status/raw"/>
        </script>
      </scriptExecutable>
      <controlFlow>
        <loop target="Loop_Over_Instance_Status_D">
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Fetch_Logs/raw"/>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            481.4375
        </positionTop>
        <positionLeft>
            480.46875
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Condition">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
        <info name="Documentation" value="user/ProActiveUserGuide.html#_branch"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def engine = variables.get("ENGINE")

println("[INFO] Starting a Mongo server in a " + engine + " container.")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow>
        <if else="Start_MongoDB_S" target="Start_MongoDB_D">
          <script>
            <code language="groovy">
              <![CDATA[
def engine = variables.get("ENGINE")
if(engine.toLowerCase().equals("docker")){
    branch = "if";
} else {
    branch = "else";
}
]]>
            </code>
          </script>
        </if>
      </controlFlow>
      <metadata>
        <positionTop>
            225.4375
        </positionTop>
        <positionLeft>
            544.453125
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Start_MongoDB_S" onTaskError="cancelJob">
      <description>
        <![CDATA[ Pull MongoDB image and start a container ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png"/>
        <info name="Documentation" value="PSA/PSAUserGuide.html"/>
        <info name="DISABLE_PTK" value="True"/>
      </genericInformation>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Check_Not_Used_By_Other_Service/raw"/>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
echo BEGIN "$variables_PA_TASK_NAME"

PATH=$PATH:/usr/sbin

GET_RANDOM_PORT(){
    PCA_SERVICES_PORT_RANGE_FILE=$variables_PA_SCHEDULER_HOME/config/pca_services_port_range
    if [[ -f "$PCA_SERVICES_PORT_RANGE_FILE" ]]; then
        read LOWERPORT UPPERPORT < $PCA_SERVICES_PORT_RANGE_FILE
    else
        read LOWERPORT UPPERPORT < /proc/sys/net/ipv4/ip_local_port_range
    fi
    while :
    do
        RND_PORT="`shuf -i $LOWERPORT-$UPPERPORT -n 1`"
        ss -lpn | grep -q ":$RND_PORT " || break
    done
    echo $RND_PORT
}

export XDG_RUNTIME_DIR=/run/user/$UID

DOCKER_IMAGE=$variables_DOCKER_IMAGE
INSTANCE_NAME=$variables_INSTANCE_NAME
SIF_IMAGE_PATH=$variables_SINGULARITY_IMAGE_PATH
BUILD_IMAGE=$variables_BUILD_IMAGE_IF_NOT_EXISTS
MONGODB_USER=$variables_USER
MONGODB_PASSWORD=$variables_PASSWORD
MONGODB_HOST_PORT=$variables_SERVICE_PORT
MONGODB_MOUNT_PATH=$variables_MOUNT_DB_PATH
mkdir -p $MONGODB_MOUNT_PATH
mkdir -p $MONGODB_MOUNT_PATH/db
MONGODB_LOGS=$MONGODB_MOUNT_PATH.log
> $MONGODB_LOGS
echo "[INFO] MONGODB_MOUNT_PATH=$MONGODB_MOUNT_PATH"
echo "[INFO] MONGODB_LOGS=$MONGODB_LOGS"

if [ "$MONGODB_HOST_PORT" -eq "-1" ]; then
    echo "[INFO] Picking a random port number"
    MONGODB_HOST_PORT=$(GET_RANDOM_PORT)
fi
echo "The service will be initialized on port $MONGODB_HOST_PORT"

if [[ -z $INSTANCE_NAME ]]; then
    echo "[ERROR] The INSTANCE_NAME is not provided by the user. Empty value is not allowed."
    exit 1
fi

if [[ -z $SIF_IMAGE_PATH ]]; then
    echo "[ERROR] The singularity image path is not provided by the user. Empty value is not allowed."
    exit 1
else
    echo "Using $SIF_IMAGE_PATH to start the service"
fi

# Check whether USER and PASSWORD have been well entered
if [ \( ! -z "$MONGODB_USER" -a -z "$MONGODB_PASSWORD" \) -o \( -z "$MONGODB_USER" -a ! -z "$MONGODB_PASSWORD" \) ]; then
    echo [ERROR] "$variables_PA_JOB_NAME"_USER and "$variables_PA_JOB_NAME"_PASSWORD are used in junction. They should be either both entered or both blank.
    exit 1
fi

if [ "$(singularity instance list | grep "^$INSTANCE_NAME$")" ]; then
    echo [ERROR] "$INSTANCE_NAME" is already used by another service instance.
    exit 128
else
    if [ "${BUILD_IMAGE,,}" = "true" ]; then
        if [ -e "$SIF_IMAGE_PATH" ]; then
            echo "[INFO] Using existing image on $SIF_IMAGE_PATH"
        else
            echo "[INFO] Building the image on $SIF_IMAGE_PATH"
            echo "[INFO] singularity build $SIF_IMAGE_PATH docker://$DOCKER_IMAGE"
            singularity build $SIF_IMAGE_PATH docker://$DOCKER_IMAGE
        fi
    fi

    echo "[INFO] Starting the singularity instance $INSTANCE_NAME"
    echo "[INFO] singularity instance start --no-home -B $MONGODB_MOUNT_PATH:/data $SIF_IMAGE_PATH $INSTANCE_NAME"
    singularity instance start --no-home -B $MONGODB_MOUNT_PATH:/data $SIF_IMAGE_PATH $INSTANCE_NAME

    # echo "[INFO] Cleaning the MongoDB data folder"
    # echo "[INFO] rm -rf $SIF_IMAGE_PATH/data && mkdir -p $SIF_IMAGE_PATH/data/db"
    # rm -rf $SIF_IMAGE_PATH/data && mkdir -p $SIF_IMAGE_PATH/data/db

    echo "[INFO] Running MongoDB"
    export SINGULARITYENV_MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
    export SINGULARITYENV_MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    echo "bash -c nohup singularity run instance://$INSTANCE_NAME mongod --port $MONGODB_HOST_PORT > $MONGODB_LOGS 2>&1 < /dev/null &"
    bash -c "nohup singularity run instance://$INSTANCE_NAME mongod --port $MONGODB_HOST_PORT > $MONGODB_LOGS 2>&1 < /dev/null &"
    sleep 10
    cat $MONGODB_LOGS

    if [ "$(singularity instance list | grep "^$INSTANCE_NAME$")" ]; then
        echo $INSTANCE_NAME > $INSTANCE_NAME"_status"
    fi
fi

echo "$MONGODB_HOST_PORT" > $INSTANCE_NAME"_port"

# Endpoint added to the job variables using a groovy post-script
echo END "$variables_PA_TASK_NAME"
]]>
          </code>
        </script>
      </scriptExecutable>
      <post>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Post_Start_Service/raw">
            <arguments>
              <argument value="mongodb"/>
            </arguments>
          </file>
        </script>
      </post>
      <cleaning>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Clean_Start_Service/raw"/>
        </script>
      </cleaning>
      <metadata>
        <positionTop>
            352.4375
        </positionTop>
        <positionLeft>
            609.4375
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Loop_Over_Instance_Status_S">
      <description>
        <![CDATA[ Loop over service instance status and fetch docker container logs.
It will run every minute. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png"/>
        <info name="Documentation" value="PSA/PSAUserGuide.html"/>
        <info name="NODE_ACCESS_TOKEN" value="PSA_$INSTANCE_NAME"/>
      </genericInformation>
      <depends>
        <task ref="Start_MongoDB_S"/>
      </depends>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[
/*********************************************************************************
* THIS PART IS IMAGE SPECIFIC. IF YOU NEED TO MODIFY SOMETHING, DO IT HERE       *
/********************************************************************************/
def username = variables.get("USER")
def credentials = variables.get("PASSWORD")
def hostname = variables.get("HOSTNAME")
def port = variables.get("PORT")
def instanceId = variables.get("PCA_INSTANCE_ID") as long
def channel = "Service_Instance_" + instanceId
def credentialsKey
// Add any credentials to 3rd party credentials if they apply:
if (!username.isEmpty()){
    credentialsKey = variables.get("PA_JOB_NAME").toLowerCase() + "://" + username + "@" + hostname+ ":" + port
    synchronizationapi.put(channel, "CREDENTIALS_KEY", credentialsKey)
    variables.put("CREDENTIALS_KEY", credentialsKey)
    schedulerapi.connect()
    schedulerapi.putThirdPartyCredential(credentialsKey, credentials)
}
/********************************************************************************/
]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Check_Instance_Status_Singularity/raw"/>
        </script>
      </scriptExecutable>
      <controlFlow>
        <loop target="Loop_Over_Instance_Status_S">
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Fetch_Logs/raw"/>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            481.4375
        </positionTop>
        <positionLeft>
            608.46875
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:3138px;
            height:4628px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-220.4375px;left:-475.46875px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_44" style="top: 353.455px; left: 480.469px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="" data-original-title="Pull MongoDB image and start a container"><img src="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png" width="20px">&nbsp;<span class="name">Start_MongoDB_D</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_47" style="top: 481.441px; left: 480.469px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="" data-original-title="Loop over service instance status and fetch docker container logs.
It will run every minute."><img src="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png" width="20px">&nbsp;<span class="name">Loop_Over_Instance_Status_D</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_50" style="top: 225.451px; left: 544.462px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="" data-original-title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Condition</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_53" style="top: 352.448px; left: 609.444px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="" data-original-title="Pull MongoDB image and start a container"><img src="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png" width="20px">&nbsp;<span class="name">Start_MongoDB_S</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_56" style="top: 481.441px; left: 608.472px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="" data-original-title="Loop over service instance status and fetch docker container logs.
It will run every minute."><img src="/automation-dashboard/styles/patterns/img/wf-icons/mongodb.png" width="20px">&nbsp;<span class="name">Loop_Over_Instance_Status_S</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><svg style="position:absolute;left:531.5px;top:392.5px" width="49" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 28 88 C 38 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M28.3293185,65.8307285 L27.243134379193783,44.66896571766761 L23.033139643665223,52.87115715208451 L14.283563031278282,49.96514457400239 L28.3293185,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M28.3293185,65.8307285 L27.243134379193783,44.66896571766761 L23.033139643665223,52.87115715208451 L14.283563031278282,49.96514457400239 L28.3293185,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;"></path></svg><svg style="position:absolute;left:649.5px;top:470.5px" width="61" height="61" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C 50 -10 -10 50 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style="--darkreader-inline-stroke: #91cd91;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill: #91cd91; --darkreader-inline-stroke: #91cd91;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill: #91cd91; --darkreader-inline-stroke: #91cd91;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_67" style="position: absolute; transform: translate(-50%, -50%); left: 674.5px; top: 500.5px;">loop</div><svg style="position:absolute;left:469.5px;top:264.5px" width="85" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 88 C -10 38 74 50 64 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-stroke: #337dff;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M4.081406499999998,63.998374500000004 L22.929075029560156,54.31512137928547 L13.721469712576434,53.84607519109808 L12.776775720658232,44.675058166709036 L4.081406499999998,63.998374500000004" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M4.081406499999998,63.998374500000004 L22.929075029560156,54.31512137928547 L13.721469712576434,53.84607519109808 L12.776775720658232,44.675058166709036 L4.081406499999998,63.998374500000004" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_73" style="position: absolute; transform: translate(-50%, -50%); left: 511.5px; top: 308.5px;">if</div><svg style="position:absolute;left:533.5px;top:264.5px" width="86" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 65 87 C 75 37 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style="--darkreader-inline-stroke: #337dff;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M60.809748750000004,63.10721925000001 L51.83613513016827,43.91153591749084 L51.02402763610516,53.095243307106784 L41.82415918727504,53.69725703138569 L60.809748750000004,63.10721925000001" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M60.809748750000004,63.10721925000001 L51.83613513016827,43.91153591749084 L51.02402763610516,53.095243307106784 L41.82415918727504,53.69725703138569 L60.809748750000004,63.10721925000001" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: #337dff;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_77" style="position: absolute; transform: translate(-50%, -50%); left: 576px; top: 308px;">else</div><svg style="position:absolute;left:660.5px;top:391.5px" width="47.5" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 26.5 89 C 36.5 39 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style="--darkreader-inline-stroke: #a8a095;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M26.964336125000003,66.74071675 L26.338245154650636,45.56034824289307 L21.951014108531623,53.66912150078909 L13.266649905439719,50.57367025936145 L26.964336125000003,66.74071675" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M26.964336125000003,66.74071675 L26.338245154650636,45.56034824289307 L21.951014108531623,53.66912150078909 L13.266649905439719,50.57367025936145 L26.964336125000003,66.74071675" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: #a8a095;"></path></svg><svg style="position:absolute;left:776.5px;top:470.5px" width="61" height="61" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C 50 -10 -10 50 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style="--darkreader-inline-stroke: #91cd91;" data-darkreader-inline-stroke=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill: #91cd91; --darkreader-inline-stroke: #91cd91;"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)" data-darkreader-inline-fill="" data-darkreader-inline-stroke="" style="--darkreader-inline-fill: #91cd91; --darkreader-inline-stroke: #91cd91;"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_86" style="position: absolute; transform: translate(-50%, -50%); left: 801.5px; top: 500.5px;">loop</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 532px; top: 383px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 470px; top: 343px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 560px; top: 511px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 560px; top: 471px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 650px; top: 471px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style="--darkreader-inline-fill: #91cd91; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 650px; top: 511px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style="--darkreader-inline-fill: #91cd91; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 584px; top: 255px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint if-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 534px; top: 255px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 661px; top: 382px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 599px; top: 342px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style="--darkreader-inline-fill: #337dff; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 687.5px; top: 511px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 687.5px; top: 471px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style="--darkreader-inline-fill: #a8a095; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 777px; top: 471px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style="--darkreader-inline-fill: #91cd91; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 777px; top: 511px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style="--darkreader-inline-fill: #91cd91; --darkreader-inline-stroke: none;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
