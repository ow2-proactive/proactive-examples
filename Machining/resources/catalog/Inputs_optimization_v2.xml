<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.13" xsi:schemaLocation="urn:proactive:jobdescriptor:3.13 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.13/schedulerjob.xsd"  name="Inputs_Optimization_V2" projectName="MC-Optim" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="1" >
  <variables>
    <variable name="json_file_path_from_dataspace" value="configure.json" description="Json parameter file location."/>
    <variable name="program_file_path_from_dataspace" value="T4_KOKO_D80_1vExec.cls" description="cls file location."/>
    <variable name="VMSCMD_file_path_from_dataspace" value="Soraluce_use_caseT1.VMSCMD" description="VMSCMD file location."/>
    <variable name="nb_machpro_runs" value="10" description="Number of parallel machpro runs."/>
    <variable name="nb_optim_iterations" value="5" description="Number of optimization iterations."/>
    <variable name="time_weight" value="0.1" description="Time weight."/>
    <variable name="mrr_weight" value="0.2" description="mrr weight."/>
    <variable name="energy_weight" value="0.7" description="Energy weight"/>
    <variable name="min_fitness_selection_rate" value="0.001" description="Min of the fitness selection rate."/>
    <variable name="mutation_probability" value="0.01" description="Mutation propability."/>
  </variables>
  <genericInformation>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/mc-optim.png"/>
  </genericInformation>
  <taskFlow>
    <task name="Random_inputs" >
      <inputFiles>
        <files  includes="$json_file_path_from_dataspace" accessMode="transferFromUserSpace"/>
      </inputFiles>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import java.util.Random
import java.text.SimpleDateFormat

println "Random_inputs ..."


// json file -> map
def json_file_path_from_dataspace = variables.get("json_file_path_from_dataspace")
def json_file_content = new File(localspace, json_file_path_from_dataspace).text
def slurper = new groovy.json.JsonSlurper()
def json_map = (Map) slurper.parseText(json_file_content)

// Retrieve SS and FR ranges
def INPUT_map = json_map.get("INPUT")
def SS_map = INPUT_map.get("SS")
def SS_min = SS_map.get("Min") as Integer
def SS_max = SS_map.get("Max") as Integer
def FR_map = INPUT_map.get("FR")
def FR_min = FR_map.get("Min") as Integer
def FR_max = FR_map.get("Max") as Integer
println "SS_min:" + SS_min + " SS_max:" + SS_max + " FR_min:" + FR_min + " FR_max:" + FR_max

// Write input variables for each task in a dedicated variable
// (check generator period to ensure no repetition)
def nb_machpro_runs = variables.get("nb_machpro_runs") as Integer
def r = new Random()
(0..(nb_machpro_runs-1)).each { task_id ->
     def SS = r.nextInt(SS_max - SS_min) + SS_min
 	 def FR = r.nextInt(FR_max - FR_min) + FR_min
 	 variables["inputs_" + task_id] =  "SS=" + SS + ";FR=" +  FR
     println "variables[\"inputs_" + task_id + "\"] = \"" + variables["inputs_" + task_id] + "\""
}


// Some useful variables that will be used by other tasks
variables["optimization_index"] = 0
variables["current_time"] = new SimpleDateFormat("MMddyyyy_HHmmss").format(new Date())
variables["SS_min"] = SS_min
variables["SS_max"] = SS_max
variables["FR_min"] = FR_min
variables["FR_max"] = FR_max


println "... Random_inputs"
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
    <task name="useless0" >
      <depends>
        <task ref="Random_inputs"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println "useless0 ..."
println "... useless0"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
    </task>
    <task name="useless1" >
      <depends>
        <task ref="useless0"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println "useless1 ..."
println "... useless1"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <replicate>
          <script>
            <code language="groovy">
              <![CDATA[
runs=variables.get("nb_machpro_runs") as Integer
]]>
            </code>
          </script>
        </replicate>
      </controlFlow>
    </task>
    <task name="Update_program_file" >
      <depends>
        <task ref="useless1"/>
      </depends>
      <inputFiles>
        <files  includes="commons-jexl3-3.0.jar" accessMode="transferFromUserSpace"/>
        <files  includes="$program_file_path_from_dataspace" accessMode="transferFromUserSpace"/>
      </inputFiles>
      <forkEnvironment >
        <additionalClasspath>
          <pathElement path="commons-jexl3-3.0.jar"/>
        </additionalClasspath>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println "Update_program_file ..."	


import java.util.regex.Pattern

// Retrieve the program file content
def program_file_path_from_dataspace = variables.get("program_file_path_from_dataspace")
program_file = new File(localspace, program_file_path_from_dataspace)
program_file_content = program_file.text


// Retrieve the formulas
def task_id = variables.get("PA_TASK_REPLICATION")
def inputs = variables.get("inputs_" + task_id)


// For each input
def pattern = null
def replacing_expression = ""
inputs.split(";").each { expr ->

  	// Extract variable & value  from "variable=value"
    def expr_arr = expr.split("=")
  	def variable = expr_arr[0]
    def value = expr_arr[1]
  
	// Update the program file  
	if (variable == "SS")
	{
      	pattern = Pattern.compile("SPINDL/RPM,.*")
        replacing_expression = "SPINDL/RPM," + value + ",CLW"
    }
	else if (variable == "FR")
	{
		pattern = Pattern.compile("FEDRAT/MMPM,.*")
        replacing_expression = "FEDRAT/MMPM," + value
    }
	
	// Replace all variables in the program file
	program_file_content = program_file_content.replaceAll(pattern, replacing_expression)
}


// Save the updated program file
def optimization_index = variables.get("optimization_index")
def current_time = variables.get("current_time")
def current_time_dir = new File(localspace, current_time)
def iter_dir = new File(current_time_dir, "iter_" + optimization_index)
iter_dir.mkdirs()
new File(iter_dir, task_id + "_" + program_file_path_from_dataspace).text = program_file_content


println "... Update_program_file"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <outputFiles>
        <files  includes="$current_time/iter_$optimization_index/**" accessMode="transferToUserSpace"/>
      </outputFiles>
    </task>
    <task name="MACHpro" >
      <variables>
        <variable name="machpro_exe_file_path" value="C:/Program Files/MACHpro/MACHpro.exe" inherited="false" />
      </variables>
      <genericInformation>
        <info name="REQUIRED_LICENSES" value="MACHpro"/>
      </genericInformation>
      <depends>
        <task ref="Update_program_file"/>
      </depends>
      <inputFiles>
        <files  includes="$current_time/iter_$optimization_index/$PA_TASK_REPLICATION_$program_file_path_from_dataspace" accessMode="transferFromUserSpace"/>
        <files  includes="$VMSCMD_file_path_from_dataspace" accessMode="transferFromUserSpace"/>
      </inputFiles>
      <selection>
        <script type="dynamic">
          <code language="groovy">
            <![CDATA[
def machpro_exe_file_path = variables.get("machpro_exe_file_path")
selected = new File(machpro_exe_file_path).exists()
]]>
          </code>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.apache.commons.io.FilenameUtils
import org.apache.commons.io.FileUtils

println "MACHpro ..."


// Retrieve variables
def VMSCMD_file_path_from_dataspace = variables.get("VMSCMD_file_path_from_dataspace")
def program_file_path_from_dataspace = variables.get("program_file_path_from_dataspace")
def task_id = variables.get("PA_TASK_REPLICATION")
def optimization_index = variables.get("optimization_index")
def current_time = variables.get("current_time")

// Deduce some variables
def current_time_dir = new File(localspace, current_time)
def iter_dir = new File(current_time_dir, "iter_" + optimization_index)

// Update the vmscmd file ...
// VMSCMD file -> tree
def VMSCMD_file = new File(localspace, VMSCMD_file_path_from_dataspace)
def VMSCMD_tree = new XmlParser().parse(VMSCMD_file)
// Modify the VMSCMD tree
def updated_program_file_path = new File(iter_dir, task_id + "_" + program_file_path_from_dataspace).absolutePath
VMSCMD_tree.NCPrograms.NCProgram[0].@File = updated_program_file_path
// Modify the output file paths
VMSCMD_tree.GetOps.ProcessSimulation.Export.@Folder = iter_dir.absolutePath
// VMSCMD_tree.GetOps.ProcessOptimization.Export.@Folder = iter_dir.absolutePath
// VMSCMD tree -> file
def fw = new FileWriter(VMSCMD_file)
def pw = new PrintWriter(fw)
new XmlNodePrinter(pw).print(VMSCMD_tree)
pw.close()
fw.close()

// Command execution
def machpro_exe_file_path = "\"" + variables.get("machpro_exe_file_path") + "\""
def VMSCMD_file_path = "\"" + VMSCMD_file.absolutePath + "\""
def cmd = [machpro_exe_file_path, VMSCMD_file_path, "nogui"]
cmd.execute()
println "cmd " + cmd

// Create a filter for val files
def val_file_filter = new FileFilter() {
	boolean accept(File file) {
		return FilenameUtils.getExtension(file.name) == "val"
	}
}

// Wait for the output val files (must be adapted to the number of generated val files)
while (iter_dir.listFiles(val_file_filter).length == 0) {
    sleep(10000)
    println "no val file"
}
println "val file detected"

// Rename val files before gathering the replicated tasks results into the same dir
iter_dir.listFiles(val_file_filter).each { file ->
	FileUtils.moveFile(file, new File(iter_dir, task_id + "_" + file.name))
}


println "... MACHpro"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="end"></controlFlow>
      <outputFiles>
        <files  includes="$current_time/iter_$optimization_index/**" accessMode="transferToUserSpace"/>
      </outputFiles>
    </task>
    <task name="R_Optimization" >
      <depends>
        <task ref="MACHpro"/>
      </depends>
      <inputFiles>
        <files  includes="$current_time/iter_$optimization_index/**" accessMode="transferFromUserSpace"/>
      </inputFiles>
      <scriptExecutable>
        <script>
          <code language="R">
            <![CDATA[
# install.packages("XML")
# install.packages("useful")
library("XML")
library("data.table")


print("R_Optimization ...")


# FUNCTIONS ##########################


intToBitVect <- function(x){
  tmp <- rev(as.integer(intToBits(x)))
  id <- seq_len(match(1,tmp,length(tmp))-1)
  tmp[-id]
}

bitVectToInt <- function(binaryvector) {
  sum(2^(which(rev(binaryvector)==TRUE)-1))
}

random_bit_flipping <- function(bit_vec){
  selected_id <- sample(1:length(bit_vec),1)
  selected_bit <- bit_vec[selected_id]
  bit_vec[selected_id] <- (selected_bit + 1) %% 2
  bit_vec
}

probableMutate <- function(a, mutation_probability) {
  if (runif(n=1, min=0, max=1) < mutation_probability)
  {
    a_as_bit_vec <- intToBitVect(a)
	mutated_a_as_bit_vec <- random_bit_flipping(a_as_bit_vec)
	mutated_a <- bitVectToInt(mutated_a_as_bit_vec)
	mutated_a
  } else
  {
    a
  }
}

probableMutateInRange <- function(a, a_min, a_max, mutation_probability) {

  # print(paste("a", a, "a_min", a_min, "a_max", a_max, "mutation_probability", mutation_probability, sep= ' '))

  mutated_a <- probableMutate(a, mutation_probability)
  if (mutated_a >= a_min && mutated_a <= a_max)
	mutated_a
  else
    probableMutateInRange(a, a_min, a_max, mutation_probability)
}


# MAIN ##########################


# Retrieve variables
optimization_index <- 0
time_weight <- 0.2
force_weight <- 0.2
roughness_face_milling_weight <- 0.2
roughness_peripherical_milling_weight <- 0.2
energy_weight <- 0.2
min_fitness_selection_rate <- 0.001
nb_machpro_runs <- 3
current_time <- "06192018_134101"
mutation_probability <- 0.01
inputs_tolerance <- 0.1
SS_ref <- 814
FR_ref <- 814
SS_min <- 400
SS_max <- 1200
FR_min <- 500
FR_max <- 1500
nb_tooth <- 50
RA <- 10
diameter <- 10

print('AA')

# Create an empty data frame with header
results <- data.frame(SS=integer(0),
                      FR=integer(0),
                      mMRROrigConverted=double(0),
                      mTorqueMaxConverted=double(0),
                      mTimeOrig=double(0),
                      standardized_mMRROrigConverted=double(0),
                      standardized_mTorqueMaxConverted=double(0),
                      standardized_mTimeOrig=double(0))

print('BB')

# Retrieve val file names
iter_dir_path <- file.path(localspace, current_time, paste("iter_", optimization_index, sep=''))
val_file_names <- dir(iter_dir_path, pattern =".val")

print('CC')

# Retrieve the xml header file for data selection in each val file
key_file_name <- dir(iter_dir_path, pattern =".key")[1]
key_file_path = file.path(iter_dir_path, key_file_name)
header_xml <- xmlParse(file = key_file_path)
header_field_values <- xpathApply(header_xml, "//Field", xmlGetAttr, "Name")

print('DD')

# For each val file name
inputs<-c("","","SS=616;FR=866","SS=469;FR=809","","SS=748;FR=1483")
for(i in c(3,4,6)){

  print('EE')

  # VAL FILE TO Dataframe ########


  # Retrive each val file relative path
  print(paste("File parsed", val_file_names[i], sep=' '))
  val_file_path = file.path(iter_dir_path, val_file_names[i])

  print('FF')

  # val file -> dataframe with header
  val_dataframe <- read.table(val_file_path, header=FALSE, sep="\t", stringsAsFactors=FALSE, dec=",")
  names(val_dataframe) = header_field_values

  print('GG')

  # INPUTS ########


  # Retrieve the corresponding inputs
  inputs_list <- strsplit(as.character(inputs[i]), ";")
  SS_val <- as.integer(strsplit(as.character(inputs_list[[1]][[1]]), "=")[[1]][[2]])
  FR_val <- as.integer(strsplit(as.character(inputs_list[[1]][[2]]), "=")[[1]][[2]])

  print('HH')

  # Append inputs to sub_results
  sub_results = val_dataframe[,c("mTimeOrig","mForceMaxXConverted","mForceMaxYConverted", "mForceMaxZConverted")]
  sub_results$SS <- SS_val
  sub_results$FR <- FR_val

  print('II')

  # OUTPUTS ########


  # max_mTimeOrig
  sub_results$max_mTimeOrig <- max(val_dataframe[,"mTimeOrig"])

  print('JJ')

  # force
  tmp_force <- sqrt( val_dataframe[,"mForceMaxXConverted"]^2 + val_dataframe[,"mForceMaxYConverted"]^2 + val_dataframe[,"mForceMaxZConverted"]^2 )
  sub_results$force <- cummax( tmp_force )

  # roughness_face_milling
  FZ <- FR_val / SS_val * nb_tooth
  sub_results$roughness_face_milling <- tan(RA * pi / 180) * FZ

  print('KK')

  # roughness_peripherical_milling
  sub_results$roughness_peripherical_milling <- diameter/2 - sqrt(4*diameter/2-FZ^2)/2

  print('LL')

  # energy
  shifted_mTimeOrig <- shift(sub_results$mTimeOrig, 1, 0, "lag", FALSE)
  sub_results$energy <- sum(sub_results$mPowerMaxConverted * (sub_results$mTimeOrig - shifted_mTimeOrig))

  print('MM')

  # RESULTS += SUB_RESULTS ########
  results <- rbind(results, sub_results)
}

print('NN')

# Standardize outputs
results$standardized_mTimeOrig <- (results[,"mTimeOrig"] - mean(unique(results[,"max_mTimeOrig"]))) / sd(unique(results[,"max_mTimeOrig"]))
results$standardized_force <- (results[,"force"] - mean(unique(results[,"force"]))) / sd(unique(results[,"force"]))
results$standardized_roughness_face_milling <- (results[,"roughness_face_milling"] - mean(unique(results[,"roughness_face_milling"]))) / sd(unique(results[,"roughness_face_milling"]))
results$standardized_roughness_peripherical_milling <- (results[,"roughness_peripherical_milling"] - mean(unique(results[,"roughness_peripherical_milling"]))) / sd(unique(results[,"roughness_peripherical_milling"]))
results$standardized_energy <- (results[,"energy"] - mean(unique(results[,"energy"]))) / sd(unique(results[,"energy"]))

print('OO')

# Compute the fitness coeff
results$fitness <- time_weight * results$standardized_mTimeOrig + force_weigth * results$standardized_force + roughness_face_milling_weight * standardized_roughness_face_milling + roughness_peripherical_milling_weight * standardized_roughness_peripherical_milling + energy_weight * standardized_energy
# Sort results by asc fitness
results <- results[order(results$fitness),]
print(paste("nb_rows after all rbind", nrow(results), sep= ' '))


# DEBUG
result_file_name <- paste('results_', optimization_index, '.ext', sep= '')
write.table(results, file=result_file_name)


# Select the min_fitness_selection_rate*100 first % of rows
nb_rows <- trunc (min_fitness_selection_rate * nrow(results))
if (nb_rows < 1)
  nb_rows <- 1
results <- head(results, nb_rows)
print(paste("nb_rows after selection", nb_rows, sep= ' '))


# Crossover of SS and FR
crossed_SS_FR <- data.frame(SS=integer(0), FR=integer(0))
if (nb_rows > 1)
{
	i <- 1
	j <- 2
	while (i < nb_rows) {
	  while (j <= nb_rows) {
		crossed_SS_FR <- rbind(crossed_SS_FR, data.frame(SS=results$SS[i], FR=results$FR[j]))
		crossed_SS_FR <- rbind(crossed_SS_FR, data.frame(SS=results$SS[j], FR=results$FR[i]))
		j <- j+1
	  }
	  i <- i+1
	  j <- i+1
	}
} else
{
  crossed_SS_FR <- data.frame(SS=results$SS[1], FR=results$FR[1])
}
nb_rows <- nrow(crossed_SS_FR)


# For each row, probable mutation on SS or FR?
for (i in 1:nb_rows) {
  if (runif(n=1, min=0, max=1) < 0.5)
  {
    crossed_SS_FR[i,'SS'] <- probableMutateInRange(crossed_SS_FR[i,'SS'], SS_min, SS_max, mutation_probability)
  } else
  {
    crossed_SS_FR[i,'FR'] <- probableMutateInRange(crossed_SS_FR[i,'FR'], FR_min, FR_max, mutation_probability)
  }
}

# Remove duplicated SS and FR
if (nb_rows > 1)
{
  crossed_SS_FR <- crossed_SS_FR[!duplicated(crossed_SS_FR[,c('SS','FR')]),]
  nb_rows <- nrow(crossed_SS_FR)
  print(paste("nb_rows after removing duplicated", nb_rows, sep= ' '))
}

# Remove outlying SS and FR
crossed_SS_FR <- subset(crossed_SS_FR, between(SS, SS*(1-inputs_tolerance), SS*(1+inputs_tolerance)) & between(FR, FR*(1-inputs_tolerance), FR*(1+inputs_tolerance)) )


# Store SS and FR
for(task_id in 0:(nb_rows-1)) 
{                
   variables[ paste("inputs_", task_id, sep='') ] = paste("SS=", crossed_SS_FR[task_id+1, "SS"],";FR=", crossed_SS_FR[task_id+1, "FR"],sep='')
   print(variables[ paste("inputs_", task_id, sep='') ])
}

# Inc optimization_index
variables["optimization_index"] = as.integer(optimization_index + 1)
# For the stopping condition of the optimization loop (break if nb_machpro_runs == 1)
variables["nb_machpro_runs"] = nb_rows


print("... R_Optimization")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow  block="end">
        <loop target="useless0">
          <script>
            <code language="groovy">
              <![CDATA[
def nb_optim_iterations = variables.get("nb_optim_iterations")  as Integer
def nb_machpro_runs = variables.get("nb_machpro_runs")  as Integer

if(nb_machpro_runs == 1 || nb_optim_iterations == 1)
	loop = false
else {
	variables["nb_optim_iterations"] = nb_optim_iterations - 1
	loop = true
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <outputFiles>
        <files  includes="*.ext" accessMode="transferToUserSpace"/>
      </outputFiles>
    </task>
    <task name="Expose_results" >
      <depends>
        <task ref="R_Optimization"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
var optim_inputs = variables["inputs_0"];
print("optim_inputs " + optim_inputs);
			
var myObject={};
myObject.id="MACHpro_control";
myObject.status="TERMINATED";
myObject.endpoint=optim_inputs;
result = JSON.stringify(myObject);
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html><head><link rel="stylesheet" href="/studio/styles/studio-standalone.css"><style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:1122px;
            height:915px;
            }
        </style></head><body><div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-108px;left:-479.5px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_1800" style="top: 113px; left: 528.5px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Random_inputs</span></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1803" style="top: 239px; left: 528.5px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">useless0</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1806" style="top: 365px; left: 484.5px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">useless1</span></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1809" style="top: 491px; left: 484.5px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Update_program_file</span></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1812" style="top: 615px; left: 484.5px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">MACHpro</span></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1815" style="top: 739px; left: 528.5px;"><a class="task-name"><img src="/studio/images/R.png" width="20px">&nbsp;<span class="name">R_Optimization</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1818" style="top: 865px; left: 528.5px;"><a class="task-name"><img src="/studio/images/Javascript.png" width="20px">&nbsp;<span class="name">Expose_results</span></a></div><svg style="position:absolute;left:568.5px;top:152.5px" width="23.5" height="87" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 86 C -10 36 12.5 50 2.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.612421875,64.94400000000002 L5.621361757954996,45.41953311647968 L-1.7392333167763794,50.971257186157516 L-8.351381055887508,44.54634455825606 L-2.612421875,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.612421875,64.94400000000002 L5.621361757954996,45.41953311647968 L-1.7392333167763794,50.971257186157516 L-8.351381055887508,44.54634455825606 L-2.612421875,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:524.5px;top:278.5px" width="65" height="87" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 86 C -10 36 54 50 44 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M1.2990679999999972,63.55324800000002 L18.07932006180434,50.614038567337175 L8.93921956548832,51.82174834921511 L6.347820411019437,42.97388700184885 L1.2990679999999972,63.55324800000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M1.2990679999999972,63.55324800000002 L18.07932006180434,50.614038567337175 L8.93921956548832,51.82174834921511 L6.347820411019437,42.97388700184885 L1.2990679999999972,63.55324800000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:554.5px;top:394.5px" width="43.39999999999998" height="97" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 22.399999999999977 86 C 32.39999999999998 86 -10 -10 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#e5db3d" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M22.846535099999983,75.63705525 L24.318928383989608,54.498652802859816 L19.15100431981592,62.13360931006629 L10.815482444055897,58.19418358304387 L22.846535099999983,75.63705525" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M22.846535099999983,75.63705525 L24.318928383989608,54.498652802859816 L19.15100431981592,62.13360931006629 L10.815482444055897,58.19418358304387 L22.846535099999983,75.63705525" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_1832" style="position: absolute; transform: translate(-50%, -50%); left: 575.7px; top: 443.75px;">replicate</div><svg style="position:absolute;left:524.5px;top:404.5px" width="35" height="87" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 14 86 C 24 36 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M15.679124999999999,64.94400000000002 L18.30426063415665,43.91761983359284 L12.726903889211487,51.25881127229097 L4.619071906447603,46.86984094438135 L15.679124999999999,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M15.679124999999999,64.94400000000002 L18.30426063415665,43.91761983359284 L12.726903889211487,51.25881127229097 L4.619071906447603,46.86984094438135 L15.679124999999999,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:524.5px;top:530.5px" width="35" height="85" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 84 C -10 34 24 50 14 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-1.6791250000000004,63.10631250000001 L9.482629641241447,45.094781934034074 L1.3501874812537715,49.43798173538504 L-4.185701123373526,42.065469452780306 L-1.6791250000000004,63.10631250000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-1.6791250000000004,63.10631250000001 L9.482629641241447,45.094781934034074 L1.3501874812537715,49.43798173538504 L-4.185701123373526,42.065469452780306 L-1.6791250000000004,63.10631250000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:524.5px;top:654.5px" width="66.5" height="85" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 45.5 84 C 55.5 34 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M44.059059000000005,61.742412000000016 L38.44347289747064,41.31044702535602 L36.097596469435786,50.22654840344669 L26.92760930091732,49.27190955592024 L44.059059000000005,61.742412000000016" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M44.059059000000005,61.742412000000016 L38.44347289747064,41.31044702535602 L36.097596469435786,50.22654840344669 L26.92760930091732,49.27190955592024 L44.059059000000005,61.742412000000016" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:618.5px;top:278.5px" width="24" height="461" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 0 C -10 50 13 410 3 460 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.087232,101.30176000000003 L5.315137890825126,121.15635443049408 L-1.8045742823104285,115.29890630253722 L-8.682008411712063,121.43901214818365 L-2.087232,101.30176000000003" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.087232,101.30176000000003 L5.315137890825126,121.15635443049408 L-1.8045742823104285,115.29890630253722 L-8.682008411712063,121.43901214818365 L-2.087232,101.30176000000003" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_1847" style="position: absolute; transform: translate(-50%, -50%); left: 630px; top: 508.5px;">loop</div><svg style="position:absolute;left:565.4783554952701px;top:778.5px" width="15.521644504729927" height="87" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 86 C -10 36 -10 50 0 0 " transform="translate(15.021644504729927,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,64.94400000000002 L-1.2792764656232984,43.975321988607305 L-7.004697339623629,51.20163196089339 L-15.021644504729927,46.64876932823094 L-4.331249999999999,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(15.021644504729927,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,64.94400000000002 L-1.2792764656232984,43.975321988607305 L-7.004697339623629,51.20163196089339 L-15.021644504729927,46.64876932823094 L-4.331249999999999,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(15.021644504729927,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 571.5px; top: 143px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 569px; top: 269px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 569px; top: 229px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 619px; top: 269px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 525px; top: 395px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 525px; top: 355px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint replicate-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 555px; top: 395px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 539px; top: 521px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint replicate-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 577.4px; top: 481px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 539px; top: 481px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 525px; top: 645px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 525px; top: 605px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 570.5px; top: 769px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 570.5px; top: 729px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 622px; top: 729px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 570.5px; top: 895px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 570.5px; top: 855px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div></body></html>
 ]]>
    </visualization>
  </metadata>
</job>