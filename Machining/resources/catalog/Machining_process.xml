<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.11" xsi:schemaLocation="urn:proactive:jobdescriptor:3.11 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.11/schedulerjob.xsd"  name="Machining_Process" projectName="MC-Virtual" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2" >
  <variables>
    <variable name="generic_VMSCMD_file_path_from_dataspace" value="TEMP.VMSCMD" />
    <variable name="geometry_file_path_from_dataspace" value="fori_TEST.stl" />
    <variable name="tool_file_path_from_dataspace" value="tool.tool" />
    <variable name="CAD_file_path_from_dataspace" value="fori_TEST.igs" />
    <variable name="Phase" value="Roughing" />
    <variable name="Strategy" value="Contour" />
    <variable name="SpindleSpeed" value="1111" />
    <variable name="ApproachFeed" value="2222" />
    <variable name="WorkingFeed" value="3333" />
    <variable name="Radius" value="11.111" />
    <variable name="Diameter" value="22.222" />
    <variable name="Length" value="33.333" />
    <variable name="Flutes" value="0" />
    <variable name="ToolFile" value="" />
    <variable name="Shape" value="RECTANGLE" />
    <variable name="Offset" value="4.444" />
  </variables>
  <description>
    <![CDATA[ Workflow simulating the full machining process. ]]>
  </description>
  <genericInformation>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/mc-virtual.png"/>
  </genericInformation>
  <taskFlow>
    <task name="InstanciateConfFile" >
      <inputFiles>
        <files  includes="ini4j-0.5.1.jar" accessMode="transferFromUserSpace"/>
        <files  includes="HiMill_conf.ini" accessMode="transferFromUserSpace"/>
      </inputFiles>
      <forkEnvironment >
        <additionalClasspath>
          <pathElement path="ini4j-0.5.1.jar"/>
        </additionalClasspath>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.ini4j.Wini
import java.text.SimpleDateFormat

println "InstanciateConfFile ..."

def HiMill_conf_file = new File(localspace, "HiMill_conf.ini")
def HiMill_conf_wini = new Wini(HiMill_conf_file)

HiMill_conf_wini.put("MACHINING", "Phase", variables.get("Phase"))
HiMill_conf_wini.put("MACHINING", "Strategy", variables.get("Strategy"))
HiMill_conf_wini.put("MACHINING PARAMETERS", "SpindleSpeed", variables.get("SpindleSpeed"))
HiMill_conf_wini.put("MACHINING PARAMETERS", "ApproachFeed", variables.get("ApproachFeed"))
HiMill_conf_wini.put("MACHINING PARAMETERS", "WorkingFeed", variables.get("WorkingFeed"))
HiMill_conf_wini.put("TOOL PARAMETERS", "Radius", variables.get("Radius"))
HiMill_conf_wini.put("TOOL PARAMETERS", "Diameter", variables.get("Diameter"))
HiMill_conf_wini.put("TOOL PARAMETERS", "Length", variables.get("Length"))
HiMill_conf_wini.put("TOOL PARAMETERS", "Flutes", variables.get("Flutes"))
HiMill_conf_wini.put("TOOL PARAMETERS", "ToolFile", variables.get("ToolFile"))
HiMill_conf_wini.put("WORKING AREA", "Shape", variables.get("Shape"))
HiMill_conf_wini.put("WORKING AREA", "Offset", variables.get("Offset"))
HiMill_conf_wini.store()

// Store the current time
variables["current_time"] = new SimpleDateFormat("MM-dd-yyyy_HH-mm-ss").format(new Date())

println "... InstanciateConfFile"
]]>
          </code>
        </script>
      </scriptExecutable>
      <outputFiles>
        <files  includes="HiMill_conf.ini" accessMode="transferToUserSpace"/>
      </outputFiles>
    </task>
    <task name="ProcedureWriter" >
      <variables>
        <variable name="procedurewriter_exe_file_path" value="C:/MCsuite/ProcedureWriter.exe" inherited="false" />
      </variables>
      <depends>
        <task ref="InstanciateConfFile"/>
      </depends>
      <inputFiles>
        <files  includes="ini4j-0.5.1.jar" accessMode="transferFromUserSpace"/>
        <files  includes="HiMill_conf.ini" accessMode="transferFromUserSpace"/>
        <files  includes="$CAD_file_path_from_dataspace" accessMode="transferFromUserSpace"/>
      </inputFiles>
      <forkEnvironment >
        <additionalClasspath>
          <pathElement path="ini4j-0.5.1.jar"/>
        </additionalClasspath>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.apache.commons.io.FileUtils
import org.ini4j.Wini

println "ProcedureWriter ..."

// Retrieve some variables
def procedurewriter_exe_file_path = variables.get("procedurewriter_exe_file_path")
def CAD_file_path_from_dataspace = variables.get("CAD_file_path_from_dataspace")

// Update the HiMill conf file with the current CAD path
def HiMill_conf_file = new File(localspace, "HiMill_conf.ini")
def HiMill_conf_wini = new Wini(HiMill_conf_file)
def CAD_file = new File(localspace, CAD_file_path_from_dataspace)
HiMill_conf_wini.put("MACHINING", "CAD", CAD_file.name)
HiMill_conf_wini.store()

// Copy files into procedurewriter_exe_file_path dir
FileUtils.copyFileToDirectory(CAD_file, new File(procedurewriter_exe_file_path).getParentFile())
FileUtils.copyFileToDirectory(HiMill_conf_file, new File(procedurewriter_exe_file_path).getParentFile())

// Command execution
def cmd = ["\"" + procedurewriter_exe_file_path + "\"", "HiMill_conf.ini"]
println cmd
cmd.execute().waitForProcessOutput(System.out, System.err)

println "... ProcedureWriter (MCdefault.prc generated in the task localspace)"
]]>
          </code>
        </script>
      </scriptExecutable>
      <outputFiles>
        <files  includes="MCdefault.prc" accessMode="transferToUserSpace"/>
      </outputFiles>
    </task>
    <task name="HiMill" >
      <variables>
        <variable name="himill_exe_file_path" value="C:/Fidia/HI-MILL/himill.exe" inherited="false" />
      </variables>
      <depends>
        <task ref="ProcedureWriter"/>
      </depends>
      <inputFiles>
        <files  includes="MCdefault.prc" accessMode="transferFromUserSpace"/>
        <files  includes="$CAD_file_path_from_dataspace" accessMode="transferFromUserSpace"/>
      </inputFiles>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.apache.commons.io.FilenameUtils
import org.apache.commons.io.FileUtils
			
println "HiMill ..."


// Retrieve some variables
def himill_exe_file_path = variables.get("himill_exe_file_path")
def CAD_file_path_from_dataspace = variables.get("CAD_file_path_from_dataspace")	
def Shape = variables.get("Shape")
def Offset = variables.get("Offset")

// Get the FileName property from the generated MCdefault.prc file
def MCdefault_props = new Properties()
def MCdefault_file = new File(localspace, "MCdefault.prc")
def MCdefault_dis = MCdefault_file.newDataInputStream()
MCdefault_props.load(MCdefault_dis)
def ISO_file_path = MCdefault_props.getProperty("FileName")
def ISO_file = new File(ISO_file_path)

// Push some variables
variables.put("ISO_file_name", ISO_file.name)
variables.put("APT_file_name", FilenameUtils.removeExtension(ISO_file.name) + ".apt")

// Command execution
def cmd = ["\"" + himill_exe_file_path + "\"", "\"" + new File(localspace, CAD_file_path_from_dataspace).absolutePath + "\"", "\"" + new File(localspace, "MCdefault.prc").absolutePath + "\"", Shape, Offset]
println cmd
cmd.execute().waitForProcessOutput(System.out, System.err)

// Move the generated iso file into the task localspace
def src = new File(new File(himill_exe_file_path).getParentFile(), ISO_file.name)
def dest = new File(localspace)
FileUtils.moveFileToDirectory(src, dest, false)


println "... HiMill (ISO file generated in the HiMill dir and moved into the task localspace)"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <outputFiles>
        <files  includes="$ISO_file_name" accessMode="transferToUserSpace"/>
      </outputFiles>
    </task>
    <task name="FormatConverter" >
      <variables>
        <variable name="formatconverter_exe_file_path" value="C:/Users/machpro/Desktop/FIDIA/FormatConverter.exe" inherited="false" />
      </variables>
      <depends>
        <task ref="HiMill"/>
      </depends>
      <inputFiles>
        <files  includes="HiMill_conf.ini" accessMode="transferFromUserSpace"/>
        <files  includes="$ISO_file_name" accessMode="transferFromUserSpace"/>
      </inputFiles>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println "FormatConverter ..."

// Retrieve some variables 
def formatconverter_exe_file_path = variables.get("formatconverter_exe_file_path")
def ISO_file_name = variables.get("ISO_file_name")	
def APT_file_name = variables.get("APT_file_name")

// Command execution
def cmd = ["\"" + formatconverter_exe_file_path + "\"", "\"" + new File(localspace, "HiMill_conf.ini").absolutePath + "\"", "\"" + new File(localspace, ISO_file_name).absolutePath + "\""]
println cmd
cmd.execute().waitForProcessOutput(System.out, System.err)

println "... FormatConverter (APT file generated in the task localspace)"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <outputFiles>
        <files  includes="$APT_file_name" accessMode="transferToUserSpace"/>
      </outputFiles>
    </task>
    <task name="Surface_computation_and_visualization" >
      <variables>
        <variable name="app_exe_file_path" value="C:/MCsuite/APP.exe" inherited="false" />
      </variables>
      <depends>
        <task ref="MACHpro"/>
      </depends>
      <inputFiles>
        <files  includes="$tool_file_path_from_dataspace" accessMode="transferFromUserSpace"/>
        <files  includes="$geometry_file_path_from_dataspace" accessMode="transferFromUserSpace"/>
        <files  includes="$APT_file_name" accessMode="transferFromUserSpace"/>
      </inputFiles>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.apache.commons.io.FileUtils

println "Surface_computation_and_visualization ..."
	
// Retrieve some variables
def app_exe_file_path = variables.get("app_exe_file_path")
def tool_file_path_from_dataspace = variables.get("tool_file_path_from_dataspace")
def geometry_file_path_from_dataspace = variables.get("geometry_file_path_from_dataspace")
def APT_file_name = variables.get("APT_file_name")

// Copy app_exe input files into the app_exe dir
def app_dir = new File(app_exe_file_path).getParentFile()
def tool_file = new File(localspace, tool_file_path_from_dataspace)
def geometry_file = new File(localspace, geometry_file_path_from_dataspace)
def APT_file = new File(localspace, APT_file_name)
FileUtils.copyFileToDirectory(tool_file, app_dir)
FileUtils.copyFileToDirectory(geometry_file, app_dir)
FileUtils.copyFileToDirectory(APT_file, app_dir)

// Command execution
def cmd = ["\"" + app_exe_file_path + "\"", "\"" + tool_file.absolutePath + "\"", "\"" + geometry_file.absolutePath + "\"", "\"" + APT_file.absolutePath + "\""]
println cmd
cmd.execute().waitForProcessOutput(System.out, System.err)

println "... Surface_computation_and_visualization"
]]>
          </code>
        </script>
      </scriptExecutable>
      <outputFiles>
        <files  includes="result.pcd" accessMode="transferToUserSpace"/>
      </outputFiles>
    </task>
    <task name="MACHpro" >
      <variables>
        <variable name="machpro_exe_file_path" value="C:/Program Files/MACHpro/MACHpro.exe" inherited="false" />
      </variables>
      <depends>
        <task ref="FormatConverter"/>
      </depends>
      <inputFiles>
        <files  includes="$generic_VMSCMD_file_path_from_dataspace" accessMode="transferFromUserSpace"/>
        <files  includes="$geometry_file_path_from_dataspace" accessMode="transferFromUserSpace"/>
        <files  includes="$APT_file_name" accessMode="transferFromUserSpace"/>
      </inputFiles>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println "MACHpro ..."

// Retrieve some variables
def geometry_file_path_from_dataspace = variables.get("geometry_file_path_from_dataspace")
def APT_file_name = variables.get("APT_file_name")
def generic_VMSCMD_file_path_from_dataspace = variables.get("generic_VMSCMD_file_path_from_dataspace")
def machpro_exe_file_path = variables.get("machpro_exe_file_path")

// XML file instantiation
// Retrieve file paths to be considered for the instantiation
def geometry_file_path = new File(localspace, geometry_file_path_from_dataspace).absolutePath.replaceAll("\\\\","/")
def APT_file_path = new File(localspace, APT_file_name).absolutePath.replaceAll("\\\\","/")

// Replace VARIABLES
def file_content = new File(localspace, generic_VMSCMD_file_path_from_dataspace).text
file_content = file_content.replaceAll("GEOMETRY_FILE_PATH_TO_SET", geometry_file_path);
file_content = file_content.replaceAll("APT_FILE_PATH_TO_SET", APT_file_path);

// Create the instantiated xml file
def instanciated_VMSCMD_file = new File(localspace, "instanciated_" + generic_VMSCMD_file_path_from_dataspace)
instanciated_VMSCMD_file.withWriter{ it << file_content }

// Command execution
def cmd = ["\"" + machpro_exe_file_path + "\"", "\"" + instanciated_VMSCMD_file.getAbsolutePath() + "\"", "nogui"]
println cmd
cmd.execute().waitForProcessOutput(System.out, System.err)

println "... MACHpro"
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
    <task name="Expose_results" >
      <depends>
        <task ref="Surface_computation_and_visualization"/>
      </depends>
      <inputFiles>
        <files  includes="$ISO_file_name" accessMode="transferFromUserSpace"/>
      </inputFiles>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.apache.commons.io.FileUtils

// Retrieve variables
def current_time = variables.get("current_time")
def ISO_file_name = variables.get("ISO_file_name")

// Expose it as a task output
def ISO_file = new File(localspace, ISO_file_name)
result = ISO_file.getBytes()
resultMetadata.put("file.name", ISO_file_name)
resultMetadata.put("content.type", "application/octet-stream")

// And save it into a specific dir
def dest_dir = new File(new File(localspace, "MC_VIRTUAL"), current_time)
dest_dir.mkdirs()
FileUtils.moveFileToDirectory(ISO_file, dest_dir, false)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <outputFiles>
        <files  includes="MC_VIRTUAL/**" accessMode="transferToUserSpace"/>
      </outputFiles>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html><head><link rel="stylesheet" href="/studio/styles/studio-standalone.css"><style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:1122px;
            height:931px;
            }
        </style></head><body><div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-108px;left:-522.5px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_1890" style="top: 113px; left: 527.5px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">InstanciateConfFile</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1893" style="top: 241px; left: 527.5px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">ProcedureWriter</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1896" style="top: 369px; left: 527.5px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">HiMill</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1899" style="top: 497px; left: 527.5px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">FormatConverter</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1902" style="top: 753px; left: 527.5px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Surface_computation_and_visualization</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1905" style="top: 625px; left: 527.5px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">MACHpro</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1908" style="top: 881px; left: 527.5px;"><a class="task-name"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Expose_results</span></a></div><svg style="position:absolute;left:570px;top:152.5px" width="27.5" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 16.5 50 6.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.287796875,66.78168750000002 L6.909583187128906,47.692208722601364 L-0.7187601328819035,52.86988949607962 L-7.002214816791488,46.123171980483264 L-2.287796875,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.287796875,66.78168750000002 L6.909583187128906,47.692208722601364 L-0.7187601328819035,52.86988949607962 L-7.002214816791488,46.123171980483264 L-2.287796875,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:566.5px;top:280.5px" width="24.5" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 13.5 50 3.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.531265625,66.78168750000002 L5.922688671570663,47.35153935976458 L-1.5001906020674536,52.819707543808825 L-8.03929128462053,46.32046433683204 L-2.531265625,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.531265625,66.78168750000002 L5.922688671570663,47.35153935976458 L-1.5001906020674536,52.819707543808825 L-8.03929128462053,46.32046433683204 L-2.531265625,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:566.5px;top:408.5px" width="26" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 5 88 C 15 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M7.409531250000001,66.78168750000002 L12.520990380459518,46.21781175738666 L6.108748919827519,52.84224829573104 L-1.4184488238094648,47.518594087559144 L7.409531250000001,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M7.409531250000001,66.78168750000002 L12.520990380459518,46.21781175738666 L6.108748919827519,52.84224829573104 L-1.4184488238094648,47.518594087559144 L7.409531250000001,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:566.5px;top:664.5px" width="76.5" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 55.5 88 C 65.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M52.60800000000001,64.44800000000001 L45.383583137427536,44.52796483447436 L43.75499294489576,53.60252785341854 L34.538110990846064,53.3809718895786 L52.60800000000001,64.44800000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M52.60800000000001,64.44800000000001 L45.383583137427536,44.52796483447436 L43.75499294489576,53.60252785341854 L34.538110990846064,53.3809718895786 L52.60800000000001,64.44800000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:566.5px;top:536.5px" width="26" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 15 50 5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.40953125,66.78168750000002 L6.41844882380946,47.518594087559144 L-1.1087489198275216,52.84224829573104 L-7.520990380459522,46.21781175738666 L-2.40953125,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M-2.40953125,66.78168750000002 L6.41844882380946,47.518594087559144 L-1.1087489198275216,52.84224829573104 L-7.520990380459522,46.21781175738666 L-2.40953125,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:568px;top:792.5px" width="75" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 64 50 54 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M2.735999999999998,64.44800000000001 L20.664522571639516,53.15339604951939 L11.451178469737112,53.49146477025559 L9.707987341895093,44.438217579782275 L2.735999999999998,64.44800000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M2.735999999999998,64.44800000000001 L20.664522571639516,53.15339604951939 L11.451178469737112,53.49146477025559 L9.707987341895093,44.438217579782275 L2.735999999999998,64.44800000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 577px; top: 143px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 570.5px; top: 271px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 570.5px; top: 231px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 567px; top: 399px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 567px; top: 359px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 572px; top: 527px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 572px; top: 487px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 622.5px; top: 783px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 622.5px; top: 743px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 567px; top: 655px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 567px; top: 615px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 568.5px; top: 911px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 568.5px; top: 871px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div></body></html>
 ]]>
    </visualization>
  </metadata>
</job>