<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Forecasting_Power_Consumption_With_Time_Series" projectName="1. Basic Machine Learning" tags="Controls,Get started,Building blocks" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="WORK_DIR" value="." model="PA:LIST(.,$HOME/,$WORK/,$SCRATCH/)" description="Working directory for the data space used to transfer files automatically between the workflow tasks."  advanced="false" hidden="false"/>
    <variable name="CONTAINER_PLATFORM" value="docker" model="PA:LIST(no-container,docker,podman,singularity)" description="Container platform used for executing the workflow tasks." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="CONTAINER_GPU_ENABLED" value="False" model="PA:Boolean" description="If True, it will activate the use of GPU for the workflow tasks on the selected container platform." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="CONTAINER_IMAGE" value="" model="PA:LIST(,docker://activeeon/dlm3,docker://activeeon/cuda,docker://activeeon/cuda2,docker://activeeon/rapidsai,docker://activeeon/nvidia:rapidsai)" description="Name of the container image being used to run the workflow tasks." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="VISDOM_INSTANCE_NAME" value="visdom-server-${PA_JOB_ID}"  description="Name of the Visdom service instance to use." group="Visdom Parameters" advanced="false" hidden="false"/>
    <variable name="VISDOM_ENABLE_LOGIN" value="False" model="PA:Boolean" description="If True, a login in required for accessing the Visdom service." group="Visdom Parameters" advanced="false" hidden="false"/>
    <variable name="VISDOM_USERNAME" value=""  description="Username to access the Visdom service." group="Visdom Parameters" advanced="false" hidden="false"/>
    <variable name="VISDOM_PASSWORD" value="" model="PA:HIDDEN" description="Password to access the Visdom service." group="Visdom Parameters" advanced="false" hidden="false"/>
    <variable name="VISDOM_PROXYFIED" value="True" model="PA:Boolean" description="If True, requests to Visdom are sent via a proxy server." group="Visdom Parameters" advanced="false" hidden="false"/>
    <variable name="N_SPLITS" value="5" model="PA:Integer"   advanced="false" hidden="false"/>
    <variable name="SCALER_NAME" value="MinMaxScaler" model="PA:List(MinMaxScaler,StandardScaler,RobustScaler,Normalizer)" description="Scaler type to be used."  advanced="false" hidden="false"/>
    <variable name="SCORING" value="neg_mean_squared_error" model="PA:List(explained_variance,neg_mean_absolute_error,neg_mean_squared_error,neg_mean_squared_log_error,neg_median_absolute_error,r2)" description="Function used to evaluate the quality of a given pipeline for the regression problem."  advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ Load data from external sources and detect its features type if requested. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="ai-machine-learning-workflows"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/import_data.png"/>
    <info name="Documentation" value="PAIO/PAIOUserGuide.html#_import_data"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Import_Train_Data" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Load data from external sources and detect its features type if requested. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="IMPORT_FROM" value="PA:GLOBAL_FILE" inherited="false" model="PA:LIST(PA:URL,PA:URI,PA:USER_FILE,PA:GLOBAL_FILE)" description="Method/protocol used to import the data from the data source."  advanced="false" hidden="false"/>
        <variable name="FILE_PATH" value="train_electricity_load.csv" inherited="false" model="$IMPORT_FROM" description="Path or name of the file that contains the dataset."  advanced="false" hidden="false"/>
        <variable name="FILE_DELIMITER" value="," inherited="false"  description="Delimiter to use."  advanced="false" hidden="false"/>
        <variable name="LABEL_COLUMN" value="nat_demand" inherited="false"  description="Label/class column name."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="100" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
        <variable name="DATA_TYPE_IDENTIFICATION" value="False" inherited="false" model="PA:Boolean" description="If True, the types of the dataset features will be predicted (as numerical or categorical)."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/import_data.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_import_data"/>
      </genericInformation>
      <depends>
        <task ref="Start"/>
      </depends>
      <inputFiles>
        <files  includes="data_type_identifier/*" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Import_Data_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            149.39236450195312
        </positionTop>
        <positionLeft>
            555.6944885253906
        </positionLeft>
      </metadata>
    </task>
    <task name="Fill_NaNs" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Replace all NaN elements of the data. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="FILL_MAP" value="" inherited="false"  description="The value to be used to fill NaNs (e.g., 0)."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="5" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_fill_nans"/>
      </genericInformation>
      <depends>
        <task ref="Import_Train_Data"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Fill_Nans_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            157.28298950195312
        </positionTop>
        <positionLeft>
            279.1406555175781
        </positionLeft>
      </metadata>
    </task>
    <task name="Scale_Train_Data" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Scale the specified columns from the data. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="SCALER_NAME" value="MinMaxScaler" inherited="true" model="PA:List(MinMaxScaler,StandardScaler,RobustScaler,Normalizer)" description="Scaler type to be used."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="5" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
        <variable name="COLUMNS_NAME" value="T2M_toc,QV2M_toc, TQL_toc, W2M_toc, T2M_san, QV2M_san, TQL_san, W2M_san, T2M_dav, QV2M_dav,TQL_dav,W2M_dav,Holiday_ID,holiday,school" inherited="false"  description="List of columns to restrict to. Columns names should be separated by a comma."  advanced="false" hidden="false"/>
        <variable name="SAVE_SCALER" value="True" inherited="false" model="PA:Boolean" description="True, if you want to save the fitted scaler"  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_scale_data"/>
      </genericInformation>
      <depends>
        <task ref="Drop_Columns"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
"""Proactive Scale Data for Machine Learning

This module contains the Python script for the Scale Data task.
"""
import ssl
import urllib.request

global variables, resultMetadata

__file__ = variables.get("PA_TASK_NAME")
print("BEGIN " + __file__)

# -------------------------------------------------------------
# Get schedulerapi access and acquire session id
schedulerapi.connect()
sessionid = schedulerapi.getSession()

# -------------------------------------------------------------
# Import an external python script containing a collection of
# common utility Python functions and classes
PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
PA_PYTHON_UTILS_URL = PA_CATALOG_REST_URL + "/buckets/ai-machine-learning/resources/Utils_Script/raw"
req = urllib.request.Request(PA_PYTHON_UTILS_URL)
req.add_header('sessionid', sessionid)
if PA_PYTHON_UTILS_URL.startswith('https'):
    content = urllib.request.urlopen(req, context=ssl._create_unverified_context()).read()
else:
    content = urllib.request.urlopen(req).read()
exec(content, globals())
global check_task_is_enabled, preview_dataframe_in_task_result
global get_and_decompress_dataframe, compress_and_transfer_dataframe
global assert_not_none_not_empty, get_input_variables, scale_columns

# -------------------------------------------------------------
# Check if the Python task is enabled or not
check_task_is_enabled()

# -------------------------------------------------------------
# Get data from the propagated variables
#
COLUMNS_NAME = variables.get("COLUMNS_NAME")
SCALER_NAME = variables.get("SCALER_NAME")
SAVE_SCALER =  variables.get("SAVE_SCALER")
print("SAVE_SCALER : ", SAVE_SCALER)

assert_not_none_not_empty(COLUMNS_NAME, "COLUMNS_NAME should be defined!")
assert_not_none_not_empty(SCALER_NAME, "SCALER_NAME should be defined!")
assert_not_none_not_empty(SAVE_SCALER, "SAVE_SCALER should be defined!")

input_variables = {
    'task.dataframe_id': None,
    'task.label_column': None
}
get_input_variables(input_variables)

dataframe_id = input_variables['task.dataframe_id']
print("dataframe id (in): ", dataframe_id)

dataframe = get_and_decompress_dataframe(dataframe_id)

# Apply a given Scaler to the DataFrame
columns = [x.strip() for x in COLUMNS_NAME.split(',')]
dataframe, scaler = scale_columns(dataframe, columns, SCALER_NAME)

# -----------------------------------------------------------------
# Save scaler
#
if SAVE_SCALER:
    print("saving scaller model")
    scaler_id = compress_and_transfer_data(scaler, "scaler")
    resultMetadata.put("task.scaler_id", scaler_id)

# -------------------------------------------------------------
# Transfer data to the next tasks
#
dataframe_id = compress_and_transfer_dataframe(dataframe)
print("dataframe id (out): ", dataframe_id)

resultMetadata.put("task.name", __file__)
resultMetadata.put("task.dataframe_id", dataframe_id)
resultMetadata.put("task.label_column", input_variables['task.label_column'])

# -------------------------------------------------------------
# Preview results
#
preview_dataframe_in_task_result(dataframe)

# -------------------------------------------------------------
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            415.06078338623047
        </positionTop>
        <positionLeft>
            280.1388854980469
        </positionLeft>
      </metadata>
    </task>
    <task name="Train_Model" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Train a classification/clustering/anomaly detection model. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="LABEL_COLUMN" value="nat_demand" inherited="false"  description="Label/class column name."  advanced="false" hidden="false"/>
        <variable name="N_SPLITS" value="5" inherited="true" model="PA:Integer" description="Number of splits you want to perform on the data."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/train.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_train_model"/>
      </genericInformation>
      <depends>
        <task ref="Scale_Train_Data"/>
        <task ref="Support_Vector_Regression"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <pre>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-auto-ml-optimization/resources/get_automl_token/raw" language="groovy"></file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Train_Model_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            543.9496765136719
        </positionTop>
        <positionLeft>
            362.8385314941406
        </positionLeft>
      </metadata>
    </task>
    <task name="Support_Vector_Regression" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Support Vector Regression are supervised learning models with associated learning algorithms that analyze data used for regression. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="INPUT_VARIABLES" value="{}" inherited="false"  description="Parameters&#39; values of the Support Vector Regression algorithm."  advanced="false" hidden="false"/>
        <variable name="SCORING" value="neg_mean_absolute_error" inherited="true" model="PA:List(explained_variance,neg_mean_absolute_error,neg_mean_squared_error,neg_mean_squared_log_error,neg_median_absolute_error,r2)" description="Function used to evaluate the quality of a given pipeline for the regression problem."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/ml_regresssion.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_support_vector_regression"/>
      </genericInformation>
      <depends>
        <task ref="Start"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <pre>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-auto-ml-optimization/resources/get_automl_params/raw" language="groovy"></file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Support_Vector_Regression_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            415.06078338623047
        </positionTop>
        <positionLeft>
            460.0347595214844
        </positionLeft>
      </metadata>
    </task>
    <task name="Drop_Columns" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Remove the specified columns from your data. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="COLUMNS_NAME" value="datetime" inherited="false"  description="List of columns to restrict to. Columns names should be separated by a comma."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="5" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_drop_columns"/>
      </genericInformation>
      <depends>
        <task ref="Fill_NaNs"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Drop_Columns_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            286.1718851327896
        </positionTop>
        <positionLeft>
            279.1406555175781
        </positionLeft>
      </metadata>
    </task>
    <task name="Import_Test_Data" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Load data from external sources and detect its features type if requested. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="IMPORT_FROM" value="PA:GLOBAL_FILE" inherited="false" model="PA:LIST(PA:URL,PA:URI,PA:USER_FILE,PA:GLOBAL_FILE)" description="Method/protocol used to import the data from the data source."  advanced="false" hidden="false"/>
        <variable name="FILE_PATH" value="predict_electricity_load.csv" inherited="false" model="$IMPORT_FROM" description="Path or name of the file that contains the dataset."  advanced="false" hidden="false"/>
        <variable name="FILE_DELIMITER" value=";" inherited="false"  description="Delimiter to use."  advanced="false" hidden="false"/>
        <variable name="LABEL_COLUMN" value="nat_demand" inherited="false"  description="Label/class column name."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="5" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
        <variable name="DATA_TYPE_IDENTIFICATION" value="False" inherited="false" model="PA:Boolean" description="If True, the types of the dataset features will be predicted (as numerical or categorical)."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/import_data.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_import_data"/>
      </genericInformation>
      <depends>
        <task ref="Start"/>
      </depends>
      <inputFiles>
        <files  includes="data_type_identifier/*" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Import_Data_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            298.16841316223145
        </positionTop>
        <positionLeft>
            706.4150085449219
        </positionLeft>
      </metadata>
    </task>
    <task name="Predict_Model" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Generate predictions using a trained model. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="LABEL_COLUMN" value="nat_demand" inherited="false"  description="Label/class column name."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="100" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/predict.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_predict_model"/>
      </genericInformation>
      <depends>
        <task ref="Train_Model"/>
        <task ref="Scale_Test_Data"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Predict_Model_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            672.8385620117188
        </positionTop>
        <positionLeft>
            553.7239685058594
        </positionLeft>
      </metadata>
    </task>
    <task name="Scale_Test_Data" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Scale the specified columns from the data. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="SCALER_NAME" value="MinMaxScaler" inherited="true" model="PA:List(MinMaxScaler,StandardScaler,RobustScaler,Normalizer)" description="Scaler type to be used."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="5" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
        <variable name="COLUMNS_NAME" value="T2M_toc,QV2M_toc, TQL_toc, W2M_toc, T2M_san, QV2M_san, TQL_san, W2M_san, T2M_dav, QV2M_dav,TQL_dav,W2M_dav,Holiday_ID,holiday,school" inherited="false"  description="List of columns to restrict to. Columns names should be separated by a comma."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_scale_data"/>
      </genericInformation>
      <depends>
        <task ref="Scale_Train_Data"/>
        <task ref="Drop_Columns2"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
"""Proactive Scale Data for Machine Learning

This module contains the Python script for the Scale Data task.
"""
import ssl
import urllib.request
import pickle
import bz2
import pandas as pd
global variables, resultMetadata

__file__ = variables.get("PA_TASK_NAME")
print("BEGIN " + __file__)

# -------------------------------------------------------------
# Get schedulerapi access and acquire session id
schedulerapi.connect()
sessionid = schedulerapi.getSession()

# -------------------------------------------------------------
# Import an external python script containing a collection of
# common utility Python functions and classes
PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
PA_PYTHON_UTILS_URL = PA_CATALOG_REST_URL + "/buckets/ai-machine-learning/resources/Utils_Script/raw"
req = urllib.request.Request(PA_PYTHON_UTILS_URL)
req.add_header('sessionid', sessionid)
if PA_PYTHON_UTILS_URL.startswith('https'):
    content = urllib.request.urlopen(req, context=ssl._create_unverified_context()).read()
else:
    content = urllib.request.urlopen(req).read()
exec(content, globals())
global check_task_is_enabled, preview_dataframe_in_task_result
global get_and_decompress_dataframe, compress_and_transfer_dataframe
global assert_not_none_not_empty, get_input_variables, scale_columns

# -------------------------------------------------------------
# Check if the Python task is enabled or not
check_task_is_enabled()

# -------------------------------------------------------------
# Get data from the propagated variables
#
COLUMNS_NAME = variables.get("COLUMNS_NAME")
SCALER_NAME = variables.get("SCALER_NAME")

assert_not_none_not_empty(COLUMNS_NAME, "COLUMNS_NAME should be defined!")
assert_not_none_not_empty(SCALER_NAME, "SCALER_NAME should be defined!")

input_variables = {
    'task.dataframe_id': None,
    'task.dataframe_id_test': None,
    'task.label_column': None,
    'task.scaler_id': None,
}
get_input_variables(input_variables)

dataframe_id_test = input_variables['task.dataframe_id_test']
print("dataframe id (in): ", dataframe_id_test)

dataframe = get_and_decompress_dataframe(dataframe_id_test)

# Apply a given Scaler to the DataFrame
scaler_id = input_variables['task.scaler_id']
scaler_compressed = variables.get(scaler_id)
scaler_bin = bz2.decompress(scaler_compressed)
assert scaler_bin is not None
print("scaler id (in): ", scaler_id)
print("scaler size: ", sys.getsizeof(scaler_compressed), " bytes")
print("scaler size (decompressed): ", sys.getsizeof(scaler_bin), " bytes")


loaded_scaler = pickle.loads(scaler_bin)

if loaded_scaler is not None:
    print('-' * 30)
    print(loaded_scaler)
    print('-' * 30)

columns = [x.strip() for x in COLUMNS_NAME.split(',')] 
print ("columns : ", columns)
scaled = loaded_scaler.transform(dataframe.filter(items=columns))
scaled_df = pd.DataFrame(scaled, columns=columns)
dataframe_scaled = dataframe.copy()
dataframe_scaled = dataframe_scaled.reset_index(drop=True)
for column in columns:
	dataframe_scaled[column] = scaled_df[column]
print(dataframe.head())

# -------------------------------------------------------------
# Transfer data to the next tasks
#
dataframe_id_test = compress_and_transfer_dataframe(dataframe_scaled)
print("dataframe_id_test (out): ", dataframe_id_test)

resultMetadata.put("task.name", __file__)
resultMetadata.put("task.dataframe_id_test", dataframe_id_test)
resultMetadata.put("task.label_column", input_variables['task.label_column'])

# -------------------------------------------------------------
# Preview results
#
preview_dataframe_in_task_result(dataframe)

# -------------------------------------------------------------
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            543.9496765136719
        </positionTop>
        <positionLeft>
            553.7239685058594
        </positionLeft>
      </metadata>
    </task>
    <task name="Drop_Columns2" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Remove the specified columns from your data. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="COLUMNS_NAME" value="datetime" inherited="false"  description="List of columns to restrict to. Columns names should be separated by a comma."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="5" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_drop_columns"/>
      </genericInformation>
      <depends>
        <task ref="Import_Test_Data"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
# -*- coding: utf-8 -*-
"""Proactive Drop Columns for Machine Learning

This module contains the Python script for the Drop Columns task.
"""
import ssl
import urllib.request

global variables, resultMetadata

__file__ = variables.get("PA_TASK_NAME")
print("BEGIN " + __file__)

# -------------------------------------------------------------
# Get schedulerapi access and acquire session id
schedulerapi.connect()
sessionid = schedulerapi.getSession()

# -------------------------------------------------------------
# Import an external python script containing a collection of
# common utility Python functions and classes
PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
PA_PYTHON_UTILS_URL = PA_CATALOG_REST_URL + "/buckets/ai-machine-learning/resources/Utils_Script/raw"
req = urllib.request.Request(PA_PYTHON_UTILS_URL)
req.add_header('sessionid', sessionid)
if PA_PYTHON_UTILS_URL.startswith('https'):
    content = urllib.request.urlopen(req, context=ssl._create_unverified_context()).read()
else:
    content = urllib.request.urlopen(req).read()
exec(content, globals())
global check_task_is_enabled, preview_dataframe_in_task_result
global get_and_decompress_dataframe, compress_and_transfer_dataframe
global assert_not_none_not_empty, get_input_variables

# -------------------------------------------------------------
# Check if the Python task is enabled or not
check_task_is_enabled()

# -------------------------------------------------------------
# Get data from the propagated variables
#
COLUMNS_NAME = variables.get("COLUMNS_NAME")
assert_not_none_not_empty(COLUMNS_NAME, "COLUMNS_NAME should be defined!")

input_variables = {
    'task.dataframe_id_test': None,
    'task.dataframe_id': None,
    'task.label_column': None
}
get_input_variables(input_variables)

dataframe_id = input_variables['task.dataframe_id']
print("dataframe id (in): ", dataframe_id)

dataframe = get_and_decompress_dataframe(dataframe_id)

# Remove desired columns from the DataFrame
columns = [x.strip() for x in COLUMNS_NAME.split(',')]
dataframe.drop(columns, axis=1, inplace=True)

# -------------------------------------------------------------
# Transfer data to the next tasks
#
dataframe_id_test = compress_and_transfer_dataframe(dataframe)
print("dataframe_id_test (out): ", dataframe_id_test)

resultMetadata.put("task.name", __file__)
resultMetadata.put("task.dataframe_id_test", dataframe_id_test)
resultMetadata.put("task.label_column", input_variables['task.label_column'])

# -------------------------------------------------------------
# Preview results
#
preview_dataframe_in_task_result(dataframe)

# -------------------------------------------------------------
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            415.06078338623047
        </positionTop>
        <positionLeft>
            637.4219665527344
        </positionLeft>
      </metadata>
    </task>
    <task name="Start_Visdom_Service" 
    
    onTaskError="cancelJob" 
    
    
    fork="true">
      <description>
        <![CDATA[ Start the Visdom server as a service. ]]>
      </description>
      <variables>
        <variable name="SERVICE_ACTIVATION_WORKFLOW" value="service-automation/Visdom" inherited="false" model="PA:CATALOG_OBJECT(Workflow/psa,,,Visdom%)" description="The service activation workflow. Please keep the default value for this variable."  advanced="false" hidden="false"/>
        <variable name="INSTANCE_NAME" value="$VISDOM_INSTANCE_NAME" inherited="false"  description="Instance name of the server to be used to broadcast the visualization."  advanced="false" hidden="false"/>
        <variable name="PROXYFIED" value="$VISDOM_PROXYFIED" inherited="false"  description="If True, requests to Visdom are sent via a proxy server."  advanced="false" hidden="false"/>
        <variable name="ENGINE" value="$CONTAINER_PLATFORM" inherited="false"  description="Container platform used for executing the workflow tasks."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_visdom_service_start"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Start/raw" language="groovy">
            <arguments>
              <argument value="true"/>
              <argument value="NATIVE_SCHEDULER"/>
              <argument value="NATIVE_SCHEDULER_PARAMS"/>
              <argument value="ENGINE"/>
              <argument value="PROXYFIED"/>
              <argument value="VISDOM_ENABLE_LOGIN"/>
              <argument value="VISDOM_USERNAME"/>
              <argument value="VISDOM_PASSWORD"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
variables.put("ENDPOINT_VISDOM",variables.get("ENDPOINT_" + variables.get("INSTANCE_NAME")))
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            0.9461669921875
        </positionTop>
        <positionLeft>
            996.1025085449219
        </positionLeft>
      </metadata>
    </task>
    <task name="Visdom_Visualize_Results" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Plot the different results obtained by a predictive model using Visdom ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="TARGET_CLASS" value="1000" inherited="false"  description="Label/class column name"  advanced="false" hidden="false"/>
        <variable name="VISDOM_ENDPOINT" value="$ENDPOINT_VISDOM" inherited="false"  description="Visdom endpoint to be used."  advanced="false" hidden="false"/>
        <variable name="FILE_PATH" value="predict_electricity_load.csv" inherited="false" model="$IMPORT_FROM"   advanced="false" hidden="false"/>
        <variable name="IMPORT_FROM" value="PA:GLOBAL_FILE" inherited="false"    advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_visdom_visualize_results"/>
      </genericInformation>
      <depends>
        <task ref="Predict_Model"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
# -*- coding: utf-8 -*-
"""Proactive Visdom_Visualize_Results for Machine Learning

This module contains the Python script for the Visdom_Visualize_Results task.
"""
import ssl
import urllib.request
import json
import pandas as pd
import numpy as np

from visdom import Visdom
from sklearn.metrics import *
from pandas.api.types import is_string_dtype
from datetime import datetime

global variables, resultMetadata

__file__ = variables.get("PA_TASK_NAME")
print("BEGIN " + __file__)

# -------------------------------------------------------------
# Get schedulerapi access and acquire session id
schedulerapi.connect()
sessionid = schedulerapi.getSession()

# -------------------------------------------------------------
# Import an external python script containing a collection of
# common utility Python functions and classes
PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
PA_PYTHON_UTILS_URL = PA_CATALOG_REST_URL + "/buckets/ai-machine-learning/resources/Utils_Script/raw"
req = urllib.request.Request(PA_PYTHON_UTILS_URL)
req.add_header('sessionid', sessionid)
if PA_PYTHON_UTILS_URL.startswith('https'):
    content = urllib.request.urlopen(req, context=ssl._create_unverified_context()).read()
else:
    content = urllib.request.urlopen(req).read()
exec(content, globals())
global check_task_is_enabled, get_input_variables, preview_dataframe_in_task_result
global get_and_decompress_dataframe, compress_and_transfer_dataframe, dict_to_obj

# -------------------------------------------------------------
# Check if the Python task is enabled or not
check_task_is_enabled()

# -------------------------------------------------------------
# Get Visdom endpoint
visdom_endpoint = variables.get("ENDPOINT_VISDOM") if variables.get("ENDPOINT_VISDOM") else results[0].__str__()
print("ENDPOINT_VISDOM: ", visdom_endpoint)
assert visdom_endpoint is not None
visdom_endpoint = visdom_endpoint.replace("http://", "")
(VISDOM_HOST, VISDOM_PORT) = visdom_endpoint.split(":")
print("Connecting to %s:%s" % (VISDOM_HOST, VISDOM_PORT))
PA_TASK_ITERATION = variables.get('PA_TASK_ITERATION')
vis = Visdom(server="http://"+VISDOM_HOST, port=int(VISDOM_PORT), env="iteration_"+str(PA_TASK_ITERATION))
assert vis.check_connection()

input_variables = {
    'task.dataframe_id': None,
    'task.dataframe_id_test': None,
    'task.algorithm_json': None,
    'task.label_column': None,
}
get_input_variables(input_variables)

dataframe_id = None
if input_variables['task.dataframe_id'] is not None:
    dataframe_id = input_variables['task.dataframe_id']
if input_variables['task.dataframe_id_test'] is not None:
    dataframe_id = input_variables['task.dataframe_id_test']
print("dataframe id (in): ", dataframe_id)

dataframe = get_and_decompress_dataframe(dataframe_id)
globalspaceapi.connect()
file_path = "predict_electricity_load.csv"
out_file = gateway.jvm.java.io.File(file_path)
globalspaceapi.pullFile(file_path, out_file)
dataframe_date = pd.read_csv(file_path, ";")
print(dataframe_date.head())
print("===================")
#dataframe.index = dataframe_date["datetime"]
dataframe_date["datetime_str"] =  pd.to_datetime(dataframe_date["datetime"]).astype(int)//10**9
dataframe_date.sort_values(by='datetime_str', inplace=True)


print(dataframe.head())

is_labeled_data = False
LABEL_COLUMN = variables.get("LABEL_COLUMN")
if LABEL_COLUMN is not None and LABEL_COLUMN is not "":
    is_labeled_data = True
else:
    LABEL_COLUMN = input_variables['task.label_column']
    if LABEL_COLUMN is not None and LABEL_COLUMN is not "":
        is_labeled_data = True

TARGET_CLASS = variables.get("TARGET_CLASS")
assert TARGET_CLASS is not None, 'The variable TARGET_CLASS is mandatory'
TARGET_CLASS = str(TARGET_CLASS)

algorithm_json = input_variables['task.algorithm_json']
assert algorithm_json is not None
algorithm = json.loads(algorithm_json)
print("algorithm:\n", algorithm)
alg = dict_to_obj(algorithm)

columns = []
if alg.type == 'classification' and is_labeled_data:
    columns = [LABEL_COLUMN, "predictions", "results"]
elif alg.type == 'regression' and is_labeled_data:
    columns = [LABEL_COLUMN, "predictions", "absolute_error"]
elif alg.type == 'clustering' and is_labeled_data:
    columns = [LABEL_COLUMN, "predictions"]
else:
    columns = ["predictions"]

dataframe_features = dataframe.drop(columns, axis=1, inplace=False)

dataframe_features_values = dataframe_features.values
dataframe_features_values_columns = list(dataframe_features.columns.values)

nb_rows = dataframe_features_values.shape[0]
nb_columns = dataframe_features_values.shape[1]

dataframe_predictions = dataframe["predictions"]
dataframe_predictions_values = dataframe_predictions.values.ravel()
dataframe_predictions_values_str = [str(dataframe_predictions[x]) for x in range(nb_rows)]

if alg.type == 'classification':
    df_classes = dataframe[LABEL_COLUMN].unique()
else:
    df_classes = dataframe_predictions.unique()

classes = [str(df_classes[x]) for x in range(0,len(df_classes))]
classes.sort()
classes_stats = [0]*len(classes)

if is_labeled_data:
    dataframe_labels = dataframe[LABEL_COLUMN]
    dataframe_labels_values = dataframe_labels.values.ravel()

if is_labeled_data and alg.type == 'regression':
    dataframe_predictions_values_float = [float(dataframe_predictions_values[x]) for x in range(nb_rows)]
    model_mse = round(mean_squared_error(dataframe_labels_values, dataframe_predictions_values_float), 2)
    model_mae = round(mean_absolute_error(dataframe_labels_values, dataframe_predictions_values_float), 2)
    model_r2s = round(r2_score(dataframe_labels_values, dataframe_predictions_values_float), 2)

# -------------------------------------------------------------
# VISDOM PLOTS
# -------------------------------------------------------------

# list_detected_samples_text = vis.text("List of detected samples in class " + TARGET_CLASS, opts=dict(title='List of indexes'))

target_class_line = vis.line(
    Y=np.array([dataframe_predictions_values[0]]),
    X=np.array([dataframe_date["datetime_str"][0]]),
    opts=dict(
        xlabel='Timestamp',
        ylabel='Predictions',
        title="Power Consumption Forecasting" 
        )
    )
    
features_line = vis.line(
    X=np.column_stack([dataframe_date["datetime_str"][0]]*nb_columns),
    Y=np.column_stack(dataframe_features_values[0][:]),
    opts=dict(
        legend=dataframe_features_values_columns,
        xlabel='Timestamp',
        ylabel='Feature Value',
        title='Values of extracted features for each sample'
        )
    )

# -------------------------------------------------------------

for x in range(nb_rows):
    vis.line(
        X=np.column_stack([dataframe_date["datetime_str"][x]]*nb_columns),
        Y=np.column_stack(dataframe_features_values[x][:]),
        win=features_line,
        update='append')
    if (x>0) and (dataframe_date["datetime_str"][x]> dataframe_date["datetime_str"][x-1]):
        print("float(dataframe_predictions_values[x])")
        print(float(dataframe_predictions_values[x]))
        print("str(dataframe.index[x]")
        print(str(dataframe.index[x]))
        vis.line(Y=np.array([float(dataframe_predictions_values[x])]), X=[dataframe_date["datetime_str"][x]], win=target_class_line, update='append')



if is_labeled_data and alg.type == 'regression':
    score_text = vis.text("<center><b> Regression scores </b></center>")
    vis.text("<b>Mean squared error:</b>" + str(model_mse), win=score_text, append=True)
    vis.text("<b>Mean absolute error:</b> " + str(model_mae), win=score_text, append=True)
    vis.text("<b>Coefficient of determination:</b> " + str(model_r2s) , win=score_text, append=True)

# -------------------------------------------------------------
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            800.7205505371094
        </positionTop>
        <positionLeft>
            466.0243225097656
        </positionLeft>
      </metadata>
    </task>
    <task name="Start" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png"/>
        <info name="task.documentation" value="user/ProActiveUserGuide.html#_loop"/>
      </genericInformation>
      <depends>
        <task ref="Start_Visdom_Service"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
print('Loop block start ' + variables.get('PA_TASK_ITERATION'))
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <metadata>
        <positionTop>
            17.829864501953125
        </positionTop>
        <positionLeft>
            828.3246765136719
        </positionLeft>
      </metadata>
    </task>
    <task name="Loop" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png"/>
      </genericInformation>
      <depends>
        <task ref="Wait_for_Signal"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
variables.remove("PA_TASK_ITERATION_SIGNAL")
print('Loop block end ' + variables.get('PA_TASK_ITERATION'))
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow  block="end">
        <loop target="Start">
          <script>
            <code language="javascript">
              <![CDATA[
if("New_ML_pipeline_run".equalsIgnoreCase(variables.get('RECEIVED_SIGNAL'))) {
    loop = true;
} else {
    loop = false;
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            1006.3715515136719
        </positionTop>
        <positionLeft>
            727.3958435058594
        </positionLeft>
      </metadata>
    </task>
    <task name="Wait_for_Signal" 
    
    
    
    
    fork="true"
    runAsMe="true" >
      <description>
        <![CDATA[ A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job. ]]>
      </description>
      <variables>
        <variable name="SIGNALS" value="Terminate_Job,New_ML_pipeline_run" inherited="false"  description="The list of comma-separated signals expected by this task."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png"/>
        <info name="TASK.DOCUMENTATION" value="user/ProActiveUserGuide.html#_task_signal_api"/>
      </genericInformation>
      <depends>
        <task ref="Visdom_Visualize_Results"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import com.google.common.base.Splitter;
import org.ow2.proactive.scheduler.common.job.JobVariable;

public static boolean containsIgnoreCase(String str, String searchStr) {
    if(str == null || searchStr == null) return false;
    final int length = searchStr.length();
    if (length == 0)
        return true;
    for (int i = str.length() - length; i >= 0; i--) {
        if (str.regionMatches(true, i, searchStr, 0, length))
            return true;
    }
    return false;
}

if (variables.get("PA_TASK_ITERATION_SIGNAL") == null) {
	variables.put("PA_TASK_ITERATION_SIGNAL", 0)
}

if (variables.get("PA_TASK_ITERATION_SIGNAL") == 0) {
    List <JobVariable> signalVariables = new java.util.ArrayList<JobVariable>()
    signalVariables.add(new JobVariable("N_SPLITS", "5", "PA:Integer", "Number of splits you want to perform on the data.", "", false, false))
	signalVariables.add(new JobVariable("SCORING", "neg_mean_squared_error", "PA:List(explained_variance,neg_mean_absolute_error,neg_mean_squared_error,neg_mean_squared_log_error,neg_median_absolute_error,r2)", "Function used to evaluate the quality of a given pipeline for the regression problem.", "", false, false))
    signalVariables.add(new JobVariable("SCALER_NAME", "MinMaxScaler", "PA:List(MinMaxScaler,StandardScaler,RobustScaler,Normalizer)", "Scaler type to be used.", "", false, false))
    // Read the variable SIGNALS
    signals = variables.get("SIGNALS")

    // Split the value of the variable SIGNALS and transform it into a list
    Set signalsSet = new HashSet<>(Splitter.on(',').trimResults().omitEmptyStrings().splitToList(signals))

    // Send a ready notification for each signal in the set with updated variables
    println("Ready for signals "+ signalsSet)
    signalsSet.each{ signal ->
        if(signal.equals("Terminate_Job")) {
            signalapi.readyForSignal(signal);
        } else {
            signalapi.readyForSignal(signal, signalVariables)
        }
    }

    // Add the signals set as a variable to be used by next tasks
    variables.put("SIGNALS_SET", signalsSet)
}
variables.put("PA_TASK_ITERATION_SIGNAL", variables.get("PA_TASK_ITERATION_SIGNAL")+1)

//Read the variable SIGNALS_SET
Set signalsSet = variables.get("SIGNALS_SET")

// Check whether one signal among those specified as input is received
println("Checking whether one signal in the set "+ signalsSet +" is received")
receivedSignals = signalapi.checkForSignals(signalsSet)

// If a signal is received, remove ready signals and break the loop
// If a signal is received, remove ready signals and break the loop, else sleep 10 seconds then restart
if (receivedSignals != null && !receivedSignals.isEmpty()) {
    // remove ready signals
    signalapi.removeManySignals(new HashSet<>(signalsSet.collect { signal -> "ready_"+signal }))
    
    // Print the received signal
    println("Received signals: " + receivedSignals.toString())
    terminate = false
    for (String s : Arrays.asList(receivedSignals.keySet())) {
    	if (containsIgnoreCase(s, "Terminate_Job")) {
            println("Terminate_Job")
            result = "Terminate_Job"
            terminate = true
        }
        if (containsIgnoreCase(s, "New_ML_pipeline_run") && !terminate) {
            println("New_ML_pipeline_run")
            updatedVariables = receivedSignals.get("New_ML_pipeline_run")
    		variables.put("N_SPLITS", updatedVariables.get("N_SPLITS"))
            variables.put("SCORING", updatedVariables.get("SCORING"))
            variables.put("SCALER_NAME", updatedVariables.get("SCALER_NAME"))
            result = "New_ML_pipeline_run"
        }
    }
} else {
    result = null
}

variables.put("RECEIVED_SIGNAL", result)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <loop target="Wait_for_Signal">
          <script>
            <code language="groovy">
              <![CDATA[
if (result!=null){
    loop = false
} else {
    loop = "* * * * *"
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            933.7240295410156
        </positionTop>
        <positionLeft>
            486.3888854980469
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2388px;
            height:3142px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:4.0538330078125px;left:-274.1406555175781px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_103" style="top: 149.393px; left: 555.703px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Load data from external sources and detect its features type if requested."><img src="/automation-dashboard/styles/patterns/img/wf-icons/import_data.png" width="20px">&nbsp;<span class="name">Import_Train_Data</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_106" style="top: 157.283px; left: 279.149px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Replace all NaN elements of the data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Fill_NaNs</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_109" style="top: 415.061px; left: 280.147px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Scale the specified columns from the data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Scale_Train_Data</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_112" style="top: 543.95px; left: 362.847px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Train a classification/clustering/anomaly detection model."><img src="/automation-dashboard/styles/patterns/img/wf-icons/train.png" width="20px">&nbsp;<span class="name">Train_Model</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_115" style="top: 415.061px; left: 460.043px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Support Vector Regression are supervised learning models with associated learning algorithms that analyze data used for regression."><img src="/automation-dashboard/styles/patterns/img/wf-icons/ml_regresssion.png" width="20px">&nbsp;<span class="name">Support_Vector_Regression</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_118" style="top: 286.172px; left: 279.149px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Remove the specified columns from your data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Drop_Columns</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_121" style="top: 298.169px; left: 706.423px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Load data from external sources and detect its features type if requested."><img src="/automation-dashboard/styles/patterns/img/wf-icons/import_data.png" width="20px">&nbsp;<span class="name">Import_Test_Data</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_124" style="top: 672.839px; left: 553.732px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Generate predictions using a trained model."><img src="/automation-dashboard/styles/patterns/img/wf-icons/predict.png" width="20px">&nbsp;<span class="name">Predict_Model</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_ active-task" id="jsPlumb_1_127" style="top: 543.95px; left: 553.732px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Scale the specified columns from the data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Scale_Test_Data</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_130" style="top: 415.061px; left: 637.43px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Remove the specified columns from your data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Drop_Columns2</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_133" style="top: 0.94649px; left: 996.111px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start the Visdom server as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Start_Visdom_Service</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon" class="glyphicon glyphicon-arrow-right"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_136" style="top: 800.721px; left: 466.033px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Plot the different results obtained by a predictive model using Visdom"><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Visdom_Visualize_Results</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_139" style="top: 17.8302px; left: 828.333px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png" width="20px">&nbsp;<span class="name">Start</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_142" style="top: 1006.37px; left: 727.404px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png" width="20px">&nbsp;<span class="name">Loop</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_145" style="top: 933.724px; left: 486.397px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png" width="20px">&nbsp;<span class="name">Wait_for_Signal</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon"></i></a></div><svg style="position:absolute;left:606.5px;top:57.5px" width="282" height="92" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 91 C -10 41 271 50 261 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M44.086194000000006,61.080706 L65.16587785640637,63.236379563868454 L57.70215722728929,57.82409036515667 L61.90926222156303,49.62041633657917 L44.086194000000006,61.080706" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M44.086194000000006,61.080706 L65.16587785640637,63.236379563868454 L57.70215722728929,57.82409036515667 L61.90926222156303,49.62041633657917 L44.086194000000006,61.080706" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:318.5px;top:106.5px" width="309" height="133" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 0 C -10 -50 298 82 288 32 " transform="translate(10.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M48.928212,-7.861212 L69.91818598979077,-10.763106537695517 L62.651103719010194,-5.089526074733296 L67.14650006452408,2.9597851813146745 L48.928212,-7.861212" class="" stroke="#666" fill="#666" transform="translate(10.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M48.928212,-7.861212 L69.91818598979077,-10.763106537695517 L62.651103719010194,-5.089526074733296 L67.14650006452408,2.9597851813146745 L48.928212,-7.861212" class="" stroke="#666" fill="#666" transform="translate(10.5,50.5)"></path></svg><svg style="position:absolute;left:321.5px;top:325.5px" width="28.5" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 7.5 89 C 17.5 39 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.6924,67.21769599999999 L14.08212523390993,46.48775841276219 L7.905293500992152,53.33222696358628 L0.19665619749621932,48.27486491177004 L9.6924,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.6924,67.21769599999999 L14.08212523390993,46.48775841276219 L7.905293500992152,53.33222696358628 L0.19665619749621932,48.27486491177004 L9.6924,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:329px;top:454.5px" width="94.5" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 73.5 89 C 83.5 39 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M67.654381125,63.99669325 L57.55487824653405,45.36875612298945 L57.29046432228842,54.58450814204167 L48.142693138575716,55.732672925701024 L67.654381125,63.99669325" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M67.654381125,63.99669325 L57.55487824653405,45.36875612298945 L57.29046432228842,54.58450814204167 L48.142693138575716,55.732672925701024 L67.654381125,63.99669325" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:402.5px;top:454.5px" width="150.5" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 89 C -10 39 139.5 50 129.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M15.951744,61.85427200000001 L36.986681029807855,59.298606890479945 L28.511492747468225,55.669394361722084 L30.80180339152993,46.73885814301171 L15.951744,61.85427200000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M15.951744,61.85427200000001 L36.986681029807855,59.298606890479945 L28.511492747468225,55.669394361722084 L30.80180339152993,46.73885814301171 L15.951744,61.85427200000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:532px;top:57.5px" width="356.5" height="358" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 357 C -10 307 345.5 50 335.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M61.51868800000002,275.401728 L80.78242521479456,266.57515287035085 L71.60519592302197,265.69284763618793 L71.07354485098247,256.4886449473289 L61.51868800000002,275.401728" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M61.51868800000002,275.401728 L80.78242521479456,266.57515287035085 L71.60519592302197,265.69284763618793 L71.07354485098247,256.4886449473289 L61.51868800000002,275.401728" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:318.5px;top:196.5px" width="24" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 3 89 C 13 39 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.577312,67.21769599999999 L11.15879434578665,46.77638843850403 L4.596391990631754,53.2521027102317 L-2.8067989439816383,47.757308447872276 L5.577312,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.577312,67.21769599999999 L11.15879434578665,46.77638843850403 L4.596391990631754,53.2521027102317 L-2.8067989439816383,47.757308447872276 L5.577312,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:754.5px;top:57.5px" width="134" height="241" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 240 C -10 190 123 50 113 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M16.85417225,184.6389825 L32.67420580409319,170.54194244375535 L23.642812494173985,172.39503037516786 L20.430253679261057,163.75330219958138 L16.85417225,184.6389825" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M16.85417225,184.6389825 L32.67420580409319,170.54194244375535 L23.642812494173985,172.39503037516786 L20.430253679261057,163.75330219958138 L16.85417225,184.6389825" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:402.5px;top:583.5px" width="213.5" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 192.5 89 C 202.5 39 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M162.99831999999998,60.226527999999995 L146.07341740428197,47.47710949853658 L149.66109118052458,55.969965135791995 L141.816854540074,60.81433831801198 L162.99831999999998,60.226527999999995" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M162.99831999999998,60.226527999999995 L146.07341740428197,47.47710949853658 L149.66109118052458,55.969965135791995 L141.816854540074,60.81433831801198 L162.99831999999998,60.226527999999995" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:595px;top:583.5px" width="27" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 89 C -10 39 16 50 6 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.320704,67.21769599999999 L6.809306733328803,48.09590466107725 L-0.8007319418315451,53.30045184239511 L-7.107937424276075,46.5759326029088 L-2.320704,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.320704,67.21769599999999 L6.809306733328803,48.09590466107725 L-0.8007319418315451,53.30045184239511 L-7.107937424276075,46.5759326029088 L-2.320704,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:329px;top:454.5px" width="293" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 272 89 C 282 39 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M225.941132,59.439374 L207.93870693782742,48.26293933232264 L212.2752753967913,56.39891954374889 L204.89825248157632,61.92879593553133 L225.941132,59.439374" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M225.941132,59.439374 L207.93870693782742,48.26293933232264 L212.2752753967913,56.39891954374889 L204.89825248157632,61.92879593553133 L225.941132,59.439374" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:601px;top:454.5px" width="102.5" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 89 C -10 39 91.5 50 81.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M7.215295999999998,63.558144 L27.15786432191775,56.39616321772736 L18.088447477670936,54.73915443522432 L18.338874757142072,45.52301174005642 L7.215295999999998,63.558144" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M7.215295999999998,63.558144 L27.15786432191775,56.39616321772736 L18.088447477670936,54.73915443522432 L18.338874757142072,45.52301174005642 L7.215295999999998,63.558144" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:682.5px;top:337.5px" width="93" height="78" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 77 C -10 27 82 50 72 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M4.952164499999997,54.19566675 L24.96157313619227,47.222606730906946 L15.9082325094938,45.47990093331203 L16.2458073195043,36.26653872141314 L4.952164499999997,54.19566675" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M4.952164499999997,54.19566675 L24.96157313619227,47.222606730906946 L15.9082325094938,45.47990093331203 L16.2458073195043,36.26653872141314 L4.952164499999997,54.19566675" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:534px;top:712.5px" width="82" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 71 50 61 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.7548722499999987,63.998374500000004 L22.377898067191047,53.8898182523336 L13.162018612009323,53.629883899930256 L12.0094074671213,44.48267189032427 L3.7548722499999987,63.998374500000004" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.7548722499999987,63.998374500000004 L22.377898067191047,53.8898182523336 L13.162018612009323,53.629883899930256 L12.0094074671213,44.48267189032427 L3.7548722499999987,63.998374500000004" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:867.5px;top:-32.5px" width="208" height="124" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 0 C -10 -50 197 73 187 23 " transform="translate(10.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M27.484958250000002,-10.23918075 L48.58737979382702,-12.159546597078497 L41.06374195887585,-6.830862544848401 L45.17906158867542,1.4192371117973526 L27.484958250000002,-10.23918075" class="" stroke="#666" fill="#666" transform="translate(10.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M27.484958250000002,-10.23918075 L48.58737979382702,-12.159546597078497 L41.06374195887585,-6.830862544848401 L45.17906158867542,1.4192371117973526 L27.484958250000002,-10.23918075" class="" stroke="#666" fill="#666" transform="translate(10.5,50.5)"></path></svg><svg style="position:absolute;left:530.5px;top:955.5px" width="257" height="69" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 236 32 C 246 -18 -10 50 0 0 " transform="translate(10.5,18.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M197.8107705,12.717778499999998 L177.9724039719626,5.272027127623609 L183.81427548364508,12.40452579506075 L177.65915126702333,19.268522143978533 L197.8107705,12.717778499999998" class="" stroke="#666" fill="#666" transform="translate(10.5,18.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M197.8107705,12.717778499999998 L177.9724039719626,5.272027127623609 L183.81427548364508,12.40452579506075 L177.65915126702333,19.268522143978533 L197.8107705,12.717778499999998" class="" stroke="#666" fill="#666" transform="translate(10.5,18.5)"></path></svg><svg style="position:absolute;left:826.5px;top:7.5px" width="152" height="1049" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 101 0 C 151 -50 10 998 0 948 " transform="translate(0.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M104.163958,179.96715600000007 L109.44009515511499,200.4893970257851 L102.97495751649278,193.9165745488221 L95.49067660629296,199.30039654227792 L104.163958,179.96715600000007" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M104.163958,179.96715600000007 L109.44009515511499,200.4893970257851 L102.97495751649278,193.9165745488221 L95.49067660629296,199.30039654227792 L104.163958,179.96715600000007" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_195" style="position: absolute; transform: translate(-50%, -50%); left: 899.5px; top: 531.5px;">loop</div><svg style="position:absolute;left:530.5px;top:840.5px" width="24.5" height="94" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 93 C -10 43 13.5 50 3.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.5346063750000005,70.38066975000001 L5.971219524091144,50.97317311147524 L-1.4662398245098163,56.421493810361106 L-7.987956415547761,49.90480656098506 L-2.5346063750000005,70.38066975000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.5346063750000005,70.38066975000001 L5.971219524091144,50.97317311147524 L-1.4662398245098163,56.421493810361106 L-7.987956415547761,49.90480656098506 L-2.5346063750000005,70.38066975000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:585.5px;top:923.5px" width="61" height="61" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C 50 -10 -10 50 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719789 L22.73126656242089,15.79496617605654 L21.37378389148668,6.675906970298892 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719789 L22.73126656242089,15.79496617605654 L21.37378389148668,6.675906970298892 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_204" style="position: absolute; transform: translate(-50%, -50%); left: 610.5px; top: 953.5px;">loop</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 607px; top: 179px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 607px; top: 139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 319px; top: 187px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 319px; top: 147px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 329.5px; top: 445px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 329.5px; top: 405px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 403px; top: 574px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 403px; top: 534px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 532.5px; top: 445px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 532.5px; top: 405px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 322px; top: 316px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 322px; top: 276px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 755px; top: 328px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 755px; top: 288px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 595.5px; top: 703px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 595.5px; top: 663px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 601.5px; top: 574px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 601.5px; top: 534px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 683px; top: 445px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 683px; top: 405px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 1055px; top: 31px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 534.5px; top: 831px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 534.5px; top: 791px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 868px; top: 48px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 868px; top: 8px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 918px; top: 48px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 767px; top: 1036px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 767px; top: 996px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 817px; top: 996px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 531px; top: 964px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 531px; top: 924px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 586px; top: 924px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 586px; top: 964px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>