<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.14" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="2" name="Forecasting_Power_Consumption_With_Time_Series" onTaskError="continueJobExecution" priority="normal" projectName="1. Basic Machine Learning" tags="Samples,Big Data,Data Visualization,Visdom,Machine Learning,Analytics,Deep Learning" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd">
  <variables>
    <variable description="Working directory for the data space used to transfer files automatically between the workflow tasks." model="PA:LIST(.,$HOME/,$WORK/,$SCRATCH/)" name="WORK_DIR" value="."/>
    <variable advanced="true" description="Container platform used for executing the workflow tasks." group="Container Parameters" model="PA:LIST(no-container,docker,podman,singularity)" name="CONTAINER_PLATFORM" value="docker"/>
    <variable advanced="true" description="If True, it will activate the use of GPU for the workflow tasks on the selected container platform." group="Container Parameters" model="PA:Boolean" name="CONTAINER_GPU_ENABLED" value="false"/>
    <variable advanced="true" description="Name of the container image being used to run the workflow tasks." group="Container Parameters" model="PA:LIST(,docker://activeeon/dlm3,docker://activeeon/cuda,docker://activeeon/cuda2,docker://activeeon/rapidsai,docker://activeeon/nvidia:rapidsai)" name="CONTAINER_IMAGE" value=""/>
    <variable description="Name of the Visdom service instance to use." group="Visdom Parameters" name="VISDOM_INSTANCE_NAME" value="visdom-server-${PA_JOB_ID}"/>
    <variable description="If True, a login in required for accessing the Visdom service." group="Visdom Parameters" model="PA:Boolean" name="VISDOM_ENABLE_LOGIN" value="false"/>
    <variable description="Username to access the Visdom service." group="Visdom Parameters" name="VISDOM_USERNAME" value=""/>
    <variable description="Password to access the Visdom service." group="Visdom Parameters" model="PA:HIDDEN" name="VISDOM_PASSWORD" value=""/>
    <variable description="If True, requests to Visdom are sent via a proxy server." group="Visdom Parameters" model="PA:Boolean" name="VISDOM_PROXYFIED" value="true"/>
    <variable model="PA:Integer" name="N_SPLITS" value="5"/>
    <variable description="Scaler type to be used." model="PA:List(MinMaxScaler,StandardScaler,RobustScaler,Normalizer)" name="SCALER_NAME" value="MinMaxScaler"/>
    <variable description="Function used to evaluate the quality of a given pipeline for the regression problem." model="PA:List(explained_variance,neg_mean_absolute_error,neg_mean_squared_error,neg_mean_squared_log_error,neg_median_absolute_error,r2)" name="SCORING" value="neg_mean_squared_error"/>
  </variables>
  <description>
    <![CDATA[ Forecasts Power Consumption using a Time Series Forecaster trained based on an SVR algorithm. ]]>
  </description>
  <genericInformation>
<info name="bucketName" value="ai-machine-learning-workflows"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/machine_learning.png"/>
<info name="PYTHON_COMMAND" value="python3"/>
<info name="Documentation" value="PAIO/PAIOUserGuide.html#_import_data"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task fork="true" name="Import_Train_Data" preciousResult="true">
      <description>
        <![CDATA[ Load data from external sources and detect its features type if requested. ]]>
      </description>
      <variables>
        <variable advanced="false" description="If False, the task will be ignored, it will not be executed." hidden="false" inherited="false" model="PA:Boolean" name="TASK_ENABLED" value="True"/>
        <variable advanced="false" description="Method/protocol used to import the data from the data source." hidden="false" inherited="false" model="PA:LIST(PA:URL,PA:URI,PA:USER_FILE,PA:GLOBAL_FILE)" name="IMPORT_FROM" value="PA:GLOBAL_FILE"/>
        <variable advanced="false" description="Path or name of the file that contains the dataset." hidden="false" inherited="false" model="$IMPORT_FROM" name="FILE_PATH" value="train_electricity_load.csv"/>
        <variable advanced="false" description="Delimiter to use." hidden="false" inherited="false" name="FILE_DELIMITER" value=","/>
        <variable advanced="false" description="Label/class column name." hidden="false" inherited="false" name="LABEL_COLUMN" value="nat_demand"/>
        <variable advanced="false" description="Number of rows that will be previewed in the browser." hidden="false" inherited="false" model="PA:Integer" name="LIMIT_OUTPUT_VIEW" value="100"/>
        <variable advanced="false" description="If True, the types of the dataset features will be predicted (as numerical or categorical)." hidden="false" inherited="false" model="PA:Boolean" name="DATA_TYPE_IDENTIFICATION" value="False"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/import_data.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_import_data"/>
      </genericInformation>
      <depends>
        <task ref="Start"/>
      </depends>
      <inputFiles>
        <files accessMode="transferFromGlobalSpace" includes="data_type_identifier/*"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw"/>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file language="cpython" url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Import_Data_Script/raw"/>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            336.1388931274414
        </positionTop>
        <positionLeft>
            133.86111450195312
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Fill_NaNs" preciousResult="true">
      <description>
        <![CDATA[ Replace all NaN elements of the data. ]]>
      </description>
      <variables>
        <variable advanced="false" description="If False, the task will be ignored, it will not be executed." hidden="false" inherited="false" model="PA:Boolean" name="TASK_ENABLED" value="True"/>
        <variable advanced="false" description="The value to be used to fill NaNs (e.g., 0)." hidden="false" inherited="false" name="FILL_MAP" value=""/>
        <variable advanced="false" description="Number of rows that will be previewed in the browser." hidden="false" inherited="false" model="PA:Integer" name="LIMIT_OUTPUT_VIEW" value="5"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_fill_nans"/>
      </genericInformation>
      <depends>
        <task ref="Import_Train_Data"/>
      </depends>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw"/>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file language="cpython" url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Fill_Nans_Script/raw"/>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            466.13890838623047
        </positionTop>
        <positionLeft>
            139.86111450195312
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Scale_Train_Data" preciousResult="true">
      <description>
        <![CDATA[ Scale the specified columns from the data. ]]>
      </description>
      <variables>
        <variable advanced="false" description="If False, the task will be ignored, it will not be executed." hidden="false" inherited="false" model="PA:Boolean" name="TASK_ENABLED" value="True"/>
        <variable advanced="false" description="Scaler type to be used." hidden="false" inherited="true" model="PA:List(MinMaxScaler,StandardScaler,RobustScaler,Normalizer)" name="SCALER_NAME" value="MinMaxScaler"/>
        <variable advanced="false" description="Number of rows that will be previewed in the browser." hidden="false" inherited="false" model="PA:Integer" name="LIMIT_OUTPUT_VIEW" value="5"/>
        <variable advanced="false" description="List of columns to restrict to. Columns names should be separated by a comma." hidden="false" inherited="false" name="COLUMNS_NAME" value="T2M_toc,QV2M_toc, TQL_toc, W2M_toc, T2M_san, QV2M_san, TQL_san, W2M_san, T2M_dav, QV2M_dav,TQL_dav,W2M_dav,Holiday_ID,holiday,school"/>
        <variable advanced="false" description="True, if you want to save the fitted scaler" hidden="false" inherited="false" model="PA:Boolean" name="SAVE_SCALER" value="True"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_scale_data"/>
      </genericInformation>
      <depends>
        <task ref="Drop_Columns"/>
      </depends>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw"/>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
"""Proactive Scale Data for Machine Learning

This module contains the Python script for the Scale Data task.
"""
import ssl
import urllib.request

global variables, resultMetadata

__file__ = variables.get("PA_TASK_NAME")
print("BEGIN " + __file__)

# -------------------------------------------------------------
# Get schedulerapi access and acquire session id
schedulerapi.connect()
sessionid = schedulerapi.getSession()

# -------------------------------------------------------------
# Import an external python script containing a collection of
# common utility Python functions and classes
PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
PA_PYTHON_UTILS_URL = PA_CATALOG_REST_URL + "/buckets/ai-machine-learning/resources/Utils_Script/raw"
req = urllib.request.Request(PA_PYTHON_UTILS_URL)
req.add_header('sessionid', sessionid)
if PA_PYTHON_UTILS_URL.startswith('https'):
    content = urllib.request.urlopen(req, context=ssl._create_unverified_context()).read()
else:
    content = urllib.request.urlopen(req).read()
exec(content, globals())
global check_task_is_enabled, preview_dataframe_in_task_result
global get_and_decompress_dataframe, compress_and_transfer_dataframe
global assert_not_none_not_empty, get_input_variables, scale_columns

# -------------------------------------------------------------
# Check if the Python task is enabled or not
check_task_is_enabled()

# -------------------------------------------------------------
# Get data from the propagated variables
#
COLUMNS_NAME = variables.get("COLUMNS_NAME")
SCALER_NAME = variables.get("SCALER_NAME")
SAVE_SCALER =  variables.get("SAVE_SCALER")
print("SAVE_SCALER : ", SAVE_SCALER)

assert_not_none_not_empty(COLUMNS_NAME, "COLUMNS_NAME should be defined!")
assert_not_none_not_empty(SCALER_NAME, "SCALER_NAME should be defined!")
assert_not_none_not_empty(SAVE_SCALER, "SAVE_SCALER should be defined!")

input_variables = {
    'task.dataframe_id': None,
    'task.label_column': None
}
get_input_variables(input_variables)

dataframe_id = input_variables['task.dataframe_id']
print("dataframe id (in): ", dataframe_id)

dataframe = get_and_decompress_dataframe(dataframe_id)

# Apply a given Scaler to the DataFrame
columns = [x.strip() for x in COLUMNS_NAME.split(',')]
dataframe, scaler = scale_columns(dataframe, columns, SCALER_NAME)

# -----------------------------------------------------------------
# Save scaler
#
if SAVE_SCALER:
    print("saving scaller model")
    scaler_id = compress_and_transfer_data(scaler, "scaler")
    resultMetadata.put("task.scaler_id", scaler_id)

# -------------------------------------------------------------
# Transfer data to the next tasks
#
dataframe_id = compress_and_transfer_dataframe(dataframe)
print("dataframe id (out): ", dataframe_id)

resultMetadata.put("task.name", __file__)
resultMetadata.put("task.dataframe_id", dataframe_id)
resultMetadata.put("task.label_column", input_variables['task.label_column'])

# -------------------------------------------------------------
# Preview results
#
preview_dataframe_in_task_result(dataframe)

# -------------------------------------------------------------
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            717.1388778686523
        </positionTop>
        <positionLeft>
            139.86111450195312
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Train_Model">
      <description>
        <![CDATA[ Train a classification/clustering/anomaly detection model. ]]>
      </description>
      <variables>
        <variable advanced="false" description="If False, the task will be ignored, it will not be executed." hidden="false" inherited="false" model="PA:Boolean" name="TASK_ENABLED" value="True"/>
        <variable advanced="false" description="Label/class column name." hidden="false" inherited="false" name="LABEL_COLUMN" value="nat_demand"/>
        <variable advanced="false" description="Number of splits you want to perform on the data." hidden="false" inherited="true" model="PA:Integer" name="N_SPLITS" value="5"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/train.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_train_model"/>
      </genericInformation>
      <depends>
        <task ref="Scale_Train_Data"/>
        <task ref="Support_Vector_Regression"/>
      </depends>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw"/>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <pre>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/ai-auto-ml-optimization/resources/get_automl_token/raw"/>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file language="cpython" url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Train_Model_Script/raw"/>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            847.1388778686523
        </positionTop>
        <positionLeft>
            241.86807250976562
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Support_Vector_Regression">
      <description>
        <![CDATA[ Support Vector Regression are supervised learning models with associated learning algorithms that analyze data used for regression. ]]>
      </description>
      <variables>
        <variable advanced="false" description="If False, the task will be ignored, it will not be executed." hidden="false" inherited="false" model="PA:Boolean" name="TASK_ENABLED" value="True"/>
        <variable advanced="false" description="Parameters' values of the Support Vector Regression algorithm." hidden="false" inherited="false" name="INPUT_VARIABLES" value="{}"/>
        <variable advanced="false" description="Function used to evaluate the quality of a given pipeline for the regression problem." hidden="false" inherited="true" model="PA:List(explained_variance,neg_mean_absolute_error,neg_mean_squared_error,neg_mean_squared_log_error,neg_median_absolute_error,r2)" name="SCORING" value="neg_mean_absolute_error"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/ml_regresssion.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_support_vector_regression"/>
      </genericInformation>
      <depends>
        <task ref="Start"/>
      </depends>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw"/>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <pre>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/ai-auto-ml-optimization/resources/get_automl_params/raw"/>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file language="cpython" url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Support_Vector_Regression_Script/raw"/>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            334.1388931274414
        </positionTop>
        <positionLeft>
            270.8680725097656
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Drop_Columns" preciousResult="true">
      <description>
        <![CDATA[ Remove the specified columns from your data. ]]>
      </description>
      <variables>
        <variable advanced="false" description="If False, the task will be ignored, it will not be executed." hidden="false" inherited="false" model="PA:Boolean" name="TASK_ENABLED" value="True"/>
        <variable advanced="false" description="List of columns to restrict to. Columns names should be separated by a comma." hidden="false" inherited="false" name="COLUMNS_NAME" value="datetime"/>
        <variable advanced="false" description="Number of rows that will be previewed in the browser." hidden="false" inherited="false" model="PA:Integer" name="LIMIT_OUTPUT_VIEW" value="5"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_drop_columns"/>
      </genericInformation>
      <depends>
        <task ref="Fill_NaNs"/>
      </depends>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw"/>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file language="cpython" url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Drop_Columns_Script/raw"/>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            589.1389083862305
        </positionTop>
        <positionLeft>
            138.86111450195312
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Import_Test_Data" preciousResult="true">
      <description>
        <![CDATA[ Load data from external sources and detect its features type if requested. ]]>
      </description>
      <variables>
        <variable advanced="false" description="If False, the task will be ignored, it will not be executed." hidden="false" inherited="false" model="PA:Boolean" name="TASK_ENABLED" value="True"/>
        <variable advanced="false" description="Method/protocol used to import the data from the data source." hidden="false" inherited="false" model="PA:LIST(PA:URL,PA:URI,PA:USER_FILE,PA:GLOBAL_FILE)" name="IMPORT_FROM" value="PA:GLOBAL_FILE"/>
        <variable advanced="false" description="Path or name of the file that contains the dataset." hidden="false" inherited="false" model="$IMPORT_FROM" name="FILE_PATH" value="predict_electricity_load.csv"/>
        <variable advanced="false" description="Delimiter to use." hidden="false" inherited="false" name="FILE_DELIMITER" value=";"/>
        <variable advanced="false" description="Label/class column name." hidden="false" inherited="false" name="LABEL_COLUMN" value="nat_demand"/>
        <variable advanced="false" description="Number of rows that will be previewed in the browser." hidden="false" inherited="false" model="PA:Integer" name="LIMIT_OUTPUT_VIEW" value="5"/>
        <variable advanced="false" description="If True, the types of the dataset features will be predicted (as numerical or categorical)." hidden="false" inherited="false" model="PA:Boolean" name="DATA_TYPE_IDENTIFICATION" value="False"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/import_data.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_import_data"/>
      </genericInformation>
      <depends>
        <task ref="Start"/>
      </depends>
      <inputFiles>
        <files accessMode="transferFromGlobalSpace" includes="data_type_identifier/*"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw"/>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file language="cpython" url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Import_Data_Script/raw"/>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            336.1388931274414
        </positionTop>
        <positionLeft>
            490.8680725097656
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Predict_Model" preciousResult="true">
      <description>
        <![CDATA[ Generate predictions using a trained model. ]]>
      </description>
      <variables>
        <variable advanced="false" description="If False, the task will be ignored, it will not be executed." hidden="false" inherited="false" model="PA:Boolean" name="TASK_ENABLED" value="True"/>
        <variable advanced="false" description="Label/class column name." hidden="false" inherited="false" name="LABEL_COLUMN" value="nat_demand"/>
        <variable advanced="false" description="Number of rows that will be previewed in the browser." hidden="false" inherited="false" model="PA:Integer" name="LIMIT_OUTPUT_VIEW" value="100"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/predict.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_predict_model"/>
      </genericInformation>
      <depends>
        <task ref="Train_Model"/>
        <task ref="Scale_Test_Data"/>
      </depends>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw"/>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file language="cpython" url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Predict_Model_Script/raw"/>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            975.1388778686523
        </positionTop>
        <positionLeft>
            305.8680725097656
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Scale_Test_Data" preciousResult="true">
      <description>
        <![CDATA[ Scale the specified columns from the data. ]]>
      </description>
      <variables>
        <variable advanced="false" description="If False, the task will be ignored, it will not be executed." hidden="false" inherited="false" model="PA:Boolean" name="TASK_ENABLED" value="True"/>
        <variable advanced="false" description="Scaler type to be used." hidden="false" inherited="true" model="PA:List(MinMaxScaler,StandardScaler,RobustScaler,Normalizer)" name="SCALER_NAME" value="MinMaxScaler"/>
        <variable advanced="false" description="Number of rows that will be previewed in the browser." hidden="false" inherited="false" model="PA:Integer" name="LIMIT_OUTPUT_VIEW" value="5"/>
        <variable advanced="false" description="List of columns to restrict to. Columns names should be separated by a comma." hidden="false" inherited="false" name="COLUMNS_NAME" value="T2M_toc,QV2M_toc, TQL_toc, W2M_toc, T2M_san, QV2M_san, TQL_san, W2M_san, T2M_dav, QV2M_dav,TQL_dav,W2M_dav,Holiday_ID,holiday,school"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_scale_data"/>
      </genericInformation>
      <depends>
        <task ref="Scale_Train_Data"/>
        <task ref="Drop_Columns2"/>
      </depends>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw"/>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
"""Proactive Scale Data for Machine Learning

This module contains the Python script for the Scale Data task.
"""
import ssl
import urllib.request
import pickle
import bz2
import pandas as pd
global variables, resultMetadata

__file__ = variables.get("PA_TASK_NAME")
print("BEGIN " + __file__)

# -------------------------------------------------------------
# Get schedulerapi access and acquire session id
schedulerapi.connect()
sessionid = schedulerapi.getSession()

# -------------------------------------------------------------
# Import an external python script containing a collection of
# common utility Python functions and classes
PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
PA_PYTHON_UTILS_URL = PA_CATALOG_REST_URL + "/buckets/ai-machine-learning/resources/Utils_Script/raw"
req = urllib.request.Request(PA_PYTHON_UTILS_URL)
req.add_header('sessionid', sessionid)
if PA_PYTHON_UTILS_URL.startswith('https'):
    content = urllib.request.urlopen(req, context=ssl._create_unverified_context()).read()
else:
    content = urllib.request.urlopen(req).read()
exec(content, globals())
global check_task_is_enabled, preview_dataframe_in_task_result
global get_and_decompress_dataframe, compress_and_transfer_dataframe
global assert_not_none_not_empty, get_input_variables, scale_columns

# -------------------------------------------------------------
# Check if the Python task is enabled or not
check_task_is_enabled()

# -------------------------------------------------------------
# Get data from the propagated variables
#
COLUMNS_NAME = variables.get("COLUMNS_NAME")
SCALER_NAME = variables.get("SCALER_NAME")

assert_not_none_not_empty(COLUMNS_NAME, "COLUMNS_NAME should be defined!")
assert_not_none_not_empty(SCALER_NAME, "SCALER_NAME should be defined!")

input_variables = {
    'task.dataframe_id': None,
    'task.dataframe_id_test': None,
    'task.label_column': None,
    'task.scaler_id': None,
}
get_input_variables(input_variables)

dataframe_id_test = input_variables['task.dataframe_id_test']
print("dataframe id (in): ", dataframe_id_test)

dataframe = get_and_decompress_dataframe(dataframe_id_test)

# Apply a given Scaler to the DataFrame
scaler_id = input_variables['task.scaler_id']
scaler_compressed = variables.get(scaler_id)
scaler_bin = bz2.decompress(scaler_compressed)
assert scaler_bin is not None
print("scaler id (in): ", scaler_id)
print("scaler size: ", sys.getsizeof(scaler_compressed), " bytes")
print("scaler size (decompressed): ", sys.getsizeof(scaler_bin), " bytes")


loaded_scaler = pickle.loads(scaler_bin)

if loaded_scaler is not None:
    print('-' * 30)
    print(loaded_scaler)
    print('-' * 30)

columns = [x.strip() for x in COLUMNS_NAME.split(',')] 
print ("columns : ", columns)
scaled = loaded_scaler.transform(dataframe.filter(items=columns))
scaled_df = pd.DataFrame(scaled, columns=columns)
dataframe_scaled = dataframe.copy()
dataframe_scaled = dataframe_scaled.reset_index(drop=True)
for column in columns:
	dataframe_scaled[column] = scaled_df[column]
print(dataframe.head())

# -------------------------------------------------------------
# Transfer data to the next tasks
#
dataframe_id_test = compress_and_transfer_dataframe(dataframe_scaled)
print("dataframe_id_test (out): ", dataframe_id_test)

resultMetadata.put("task.name", __file__)
resultMetadata.put("task.dataframe_id_test", dataframe_id_test)
resultMetadata.put("task.label_column", input_variables['task.label_column'])

# -------------------------------------------------------------
# Preview results
#
preview_dataframe_in_task_result(dataframe)

# -------------------------------------------------------------
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            847.1388778686523
        </positionTop>
        <positionLeft>
            369.8680725097656
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Drop_Columns2" preciousResult="true">
      <description>
        <![CDATA[ Remove the specified columns from your data. ]]>
      </description>
      <variables>
        <variable advanced="false" description="If False, the task will be ignored, it will not be executed." hidden="false" inherited="false" model="PA:Boolean" name="TASK_ENABLED" value="True"/>
        <variable advanced="false" description="List of columns to restrict to. Columns names should be separated by a comma." hidden="false" inherited="false" name="COLUMNS_NAME" value="datetime"/>
        <variable advanced="false" description="Number of rows that will be previewed in the browser." hidden="false" inherited="false" model="PA:Integer" name="LIMIT_OUTPUT_VIEW" value="5"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_drop_columns"/>
      </genericInformation>
      <depends>
        <task ref="Import_Test_Data"/>
      </depends>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw"/>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
# -*- coding: utf-8 -*-
"""Proactive Drop Columns for Machine Learning

This module contains the Python script for the Drop Columns task.
"""
import ssl
import urllib.request

global variables, resultMetadata

__file__ = variables.get("PA_TASK_NAME")
print("BEGIN " + __file__)

# -------------------------------------------------------------
# Get schedulerapi access and acquire session id
schedulerapi.connect()
sessionid = schedulerapi.getSession()

# -------------------------------------------------------------
# Import an external python script containing a collection of
# common utility Python functions and classes
PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
PA_PYTHON_UTILS_URL = PA_CATALOG_REST_URL + "/buckets/ai-machine-learning/resources/Utils_Script/raw"
req = urllib.request.Request(PA_PYTHON_UTILS_URL)
req.add_header('sessionid', sessionid)
if PA_PYTHON_UTILS_URL.startswith('https'):
    content = urllib.request.urlopen(req, context=ssl._create_unverified_context()).read()
else:
    content = urllib.request.urlopen(req).read()
exec(content, globals())
global check_task_is_enabled, preview_dataframe_in_task_result
global get_and_decompress_dataframe, compress_and_transfer_dataframe
global assert_not_none_not_empty, get_input_variables

# -------------------------------------------------------------
# Check if the Python task is enabled or not
check_task_is_enabled()

# -------------------------------------------------------------
# Get data from the propagated variables
#
COLUMNS_NAME = variables.get("COLUMNS_NAME")
assert_not_none_not_empty(COLUMNS_NAME, "COLUMNS_NAME should be defined!")

input_variables = {
    'task.dataframe_id_test': None,
    'task.dataframe_id': None,
    'task.label_column': None
}
get_input_variables(input_variables)

dataframe_id = input_variables['task.dataframe_id']
print("dataframe id (in): ", dataframe_id)

dataframe = get_and_decompress_dataframe(dataframe_id)

# Remove desired columns from the DataFrame
columns = [x.strip() for x in COLUMNS_NAME.split(',')]
dataframe.drop(columns, axis=1, inplace=True)

# -------------------------------------------------------------
# Transfer data to the next tasks
#
dataframe_id_test = compress_and_transfer_dataframe(dataframe)
print("dataframe_id_test (out): ", dataframe_id_test)

resultMetadata.put("task.name", __file__)
resultMetadata.put("task.dataframe_id_test", dataframe_id_test)
resultMetadata.put("task.label_column", input_variables['task.label_column'])

# -------------------------------------------------------------
# Preview results
#
preview_dataframe_in_task_result(dataframe)

# -------------------------------------------------------------
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            721.1388778686523
        </positionTop>
        <positionLeft>
            365.8680725097656
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Start_Visdom_Service" onTaskError="cancelJob">
      <description>
        <![CDATA[ Start the Visdom server as a service. ]]>
      </description>
      <variables>
        <variable advanced="false" description="The service activation workflow. Please keep the default value for this variable." hidden="false" inherited="false" model="PA:CATALOG_OBJECT(Workflow/psa,,,Visdom%)" name="SERVICE_ACTIVATION_WORKFLOW" value="service-automation/Visdom"/>
        <variable advanced="false" description="Instance name of the server to be used to broadcast the visualization." hidden="false" inherited="false" name="INSTANCE_NAME" value="$VISDOM_INSTANCE_NAME"/>
        <variable advanced="false" description="If True, requests to Visdom are sent via a proxy server." hidden="false" inherited="false" name="PROXYFIED" value="$VISDOM_PROXYFIED"/>
        <variable advanced="false" description="Container platform used for executing the workflow tasks." hidden="false" inherited="false" name="ENGINE" value="$CONTAINER_PLATFORM"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_visdom_service_start"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Start/raw">
            <arguments>
              <argument value="true"/>
              <argument value="NATIVE_SCHEDULER"/>
              <argument value="NATIVE_SCHEDULER_PARAMS"/>
              <argument value="ENGINE"/>
              <argument value="PROXYFIED"/>
              <argument value="VISDOM_ENABLE_LOGIN"/>
              <argument value="VISDOM_USERNAME"/>
              <argument value="VISDOM_PASSWORD"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
variables.put("ENDPOINT_VISDOM",variables.get("ENDPOINT_" + variables.get("INSTANCE_NAME")))
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            92.13889122009277
        </positionTop>
        <positionLeft>
            338.8680725097656
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Visdom_Visualize_Results">
      <description>
        <![CDATA[ Plot the different results obtained by a predictive model using Visdom ]]>
      </description>
      <variables>
        <variable advanced="false" description="If False, the task will be ignored, it will not be executed." hidden="false" inherited="false" model="PA:Boolean" name="TASK_ENABLED" value="True"/>
        <variable advanced="false" description="Label/class column name" hidden="false" inherited="false" name="TARGET_CLASS" value="1000"/>
        <variable advanced="false" description="Visdom endpoint to be used." hidden="false" inherited="false" name="VISDOM_ENDPOINT" value="$ENDPOINT_VISDOM"/>
        <variable advanced="false" hidden="false" inherited="false" model="$IMPORT_FROM" name="FILE_PATH" value="predict_electricity_load.csv"/>
        <variable advanced="false" hidden="false" inherited="false" name="IMPORT_FROM" value="PA:GLOBAL_FILE"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_visdom_visualize_results"/>
      </genericInformation>
      <depends>
        <task ref="Predict_Model"/>
      </depends>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw"/>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
# -*- coding: utf-8 -*-
"""Proactive Visdom_Visualize_Results for Machine Learning

This module contains the Python script for the Visdom_Visualize_Results task.
"""
import ssl
import urllib.request
import json
import pandas as pd
import numpy as np

from visdom import Visdom
from sklearn.metrics import *
from pandas.api.types import is_string_dtype
from datetime import datetime

global variables, resultMetadata

__file__ = variables.get("PA_TASK_NAME")
print("BEGIN " + __file__)

# -------------------------------------------------------------
# Get schedulerapi access and acquire session id
schedulerapi.connect()
sessionid = schedulerapi.getSession()

# -------------------------------------------------------------
# Import an external python script containing a collection of
# common utility Python functions and classes
PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
PA_PYTHON_UTILS_URL = PA_CATALOG_REST_URL + "/buckets/ai-machine-learning/resources/Utils_Script/raw"
req = urllib.request.Request(PA_PYTHON_UTILS_URL)
req.add_header('sessionid', sessionid)
if PA_PYTHON_UTILS_URL.startswith('https'):
    content = urllib.request.urlopen(req, context=ssl._create_unverified_context()).read()
else:
    content = urllib.request.urlopen(req).read()
exec(content, globals())
global check_task_is_enabled, get_input_variables, preview_dataframe_in_task_result
global get_and_decompress_dataframe, compress_and_transfer_dataframe, dict_to_obj

# -------------------------------------------------------------
# Check if the Python task is enabled or not
check_task_is_enabled()

# -------------------------------------------------------------
# Get Visdom endpoint
visdom_endpoint = variables.get("ENDPOINT_VISDOM") if variables.get("ENDPOINT_VISDOM") else results[0].__str__()
print("ENDPOINT_VISDOM: ", visdom_endpoint)
assert visdom_endpoint is not None
visdom_endpoint = visdom_endpoint.replace("http://", "")
(VISDOM_HOST, VISDOM_PORT) = visdom_endpoint.split(":")
print("Connecting to %s:%s" % (VISDOM_HOST, VISDOM_PORT))
PA_TASK_ITERATION = variables.get('PA_TASK_ITERATION')
vis = Visdom(server="http://"+VISDOM_HOST, port=int(VISDOM_PORT), env="iteration_"+str(PA_TASK_ITERATION))
assert vis.check_connection()

input_variables = {
    'task.dataframe_id': None,
    'task.dataframe_id_test': None,
    'task.algorithm_json': None,
    'task.label_column': None,
}
get_input_variables(input_variables)

dataframe_id = None
if input_variables['task.dataframe_id'] is not None:
    dataframe_id = input_variables['task.dataframe_id']
if input_variables['task.dataframe_id_test'] is not None:
    dataframe_id = input_variables['task.dataframe_id_test']
print("dataframe id (in): ", dataframe_id)

dataframe = get_and_decompress_dataframe(dataframe_id)
globalspaceapi.connect()
file_path = "predict_electricity_load.csv"
out_file = gateway.jvm.java.io.File(file_path)
globalspaceapi.pullFile(file_path, out_file)
dataframe_date = pd.read_csv(file_path, ";")
print(dataframe_date.head())
print("===================")
#dataframe.index = dataframe_date["datetime"]
dataframe_date["datetime_str"] =  pd.to_datetime(dataframe_date["datetime"]).astype(int)//10**9
dataframe_date.sort_values(by='datetime_str', inplace=True)


print(dataframe.head())

is_labeled_data = False
LABEL_COLUMN = variables.get("LABEL_COLUMN")
if LABEL_COLUMN is not None and LABEL_COLUMN is not "":
    is_labeled_data = True
else:
    LABEL_COLUMN = input_variables['task.label_column']
    if LABEL_COLUMN is not None and LABEL_COLUMN is not "":
        is_labeled_data = True

TARGET_CLASS = variables.get("TARGET_CLASS")
assert TARGET_CLASS is not None, 'The variable TARGET_CLASS is mandatory'
TARGET_CLASS = str(TARGET_CLASS)

algorithm_json = input_variables['task.algorithm_json']
assert algorithm_json is not None
algorithm = json.loads(algorithm_json)
print("algorithm:\n", algorithm)
alg = dict_to_obj(algorithm)

columns = []
if alg.type == 'classification' and is_labeled_data:
    columns = [LABEL_COLUMN, "predictions", "results"]
elif alg.type == 'regression' and is_labeled_data:
    columns = [LABEL_COLUMN, "predictions", "absolute_error"]
elif alg.type == 'clustering' and is_labeled_data:
    columns = [LABEL_COLUMN, "predictions"]
else:
    columns = ["predictions"]

dataframe_features = dataframe.drop(columns, axis=1, inplace=False)

dataframe_features_values = dataframe_features.values
dataframe_features_values_columns = list(dataframe_features.columns.values)

nb_rows = dataframe_features_values.shape[0]
nb_columns = dataframe_features_values.shape[1]

dataframe_predictions = dataframe["predictions"]
dataframe_predictions_values = dataframe_predictions.values.ravel()
dataframe_predictions_values_str = [str(dataframe_predictions[x]) for x in range(nb_rows)]

if alg.type == 'classification':
    df_classes = dataframe[LABEL_COLUMN].unique()
else:
    df_classes = dataframe_predictions.unique()

classes = [str(df_classes[x]) for x in range(0,len(df_classes))]
classes.sort()
classes_stats = [0]*len(classes)

if is_labeled_data:
    dataframe_labels = dataframe[LABEL_COLUMN]
    dataframe_labels_values = dataframe_labels.values.ravel()

if is_labeled_data and alg.type == 'regression':
    dataframe_predictions_values_float = [float(dataframe_predictions_values[x]) for x in range(nb_rows)]
    model_mse = round(mean_squared_error(dataframe_labels_values, dataframe_predictions_values_float), 2)
    model_mae = round(mean_absolute_error(dataframe_labels_values, dataframe_predictions_values_float), 2)
    model_r2s = round(r2_score(dataframe_labels_values, dataframe_predictions_values_float), 2)

# -------------------------------------------------------------
# VISDOM PLOTS
# -------------------------------------------------------------

# list_detected_samples_text = vis.text("List of detected samples in class " + TARGET_CLASS, opts=dict(title='List of indexes'))

target_class_line = vis.line(
    Y=np.array([dataframe_predictions_values[0]]),
    X=np.array([dataframe_date["datetime_str"][0]]),
    opts=dict(
        xlabel='Timestamp',
        ylabel='Predictions',
        title="Power Consumption Forecasting" 
        )
    )
    
features_line = vis.line(
    X=np.column_stack([dataframe_date["datetime_str"][0]]*nb_columns),
    Y=np.column_stack(dataframe_features_values[0][:]),
    opts=dict(
        legend=dataframe_features_values_columns,
        xlabel='Timestamp',
        ylabel='Feature Value',
        title='Values of extracted features for each sample'
        )
    )

# -------------------------------------------------------------

for x in range(nb_rows):
    vis.line(
        X=np.column_stack([dataframe_date["datetime_str"][x]]*nb_columns),
        Y=np.column_stack(dataframe_features_values[x][:]),
        win=features_line,
        update='append')
    if (x>0) and (dataframe_date["datetime_str"][x]> dataframe_date["datetime_str"][x-1]):
        print("float(dataframe_predictions_values[x])")
        print(float(dataframe_predictions_values[x]))
        print("str(dataframe.index[x]")
        print(str(dataframe.index[x]))
        vis.line(Y=np.array([float(dataframe_predictions_values[x])]), X=[dataframe_date["datetime_str"][x]], win=target_class_line, update='append')



if is_labeled_data and alg.type == 'regression':
    score_text = vis.text("<center><b> Regression scores </b></center>")
    vis.text("<b>Mean squared error:</b>" + str(model_mse), win=score_text, append=True)
    vis.text("<b>Mean absolute error:</b> " + str(model_mae), win=score_text, append=True)
    vis.text("<b>Coefficient of determination:</b> " + str(model_r2s) , win=score_text, append=True)

# -------------------------------------------------------------
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            1103.1388778686523
        </positionTop>
        <positionLeft>
            305.8680725097656
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Start">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png"/>
        <info name="task.documentation" value="user/ProActiveUserGuide.html#_loop"/>
      </genericInformation>
      <depends>
        <task ref="Start_Visdom_Service"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
print('Loop block start ' + variables.get('PA_TASK_ITERATION'))
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"/>
      <metadata>
        <positionTop>
            207.1388931274414
        </positionTop>
        <positionLeft>
            310.8680725097656
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Loop">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png"/>
      </genericInformation>
      <depends>
        <task ref="Wait_for_Signal"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
variables.remove("PA_TASK_ITERATION_SIGNAL")
print('Loop block end ' + variables.get('PA_TASK_ITERATION'))
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="end">
        <loop target="Start">
          <script>
            <code language="javascript">
              <![CDATA[
if("New_ML_pipeline_run".equalsIgnoreCase(variables.get('RECEIVED_SIGNAL'))) {
    loop = true;
} else {
    loop = false;
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            1339.1388778686523
        </positionTop>
        <positionLeft>
            441.8680725097656
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Wait_for_Signal">
      <description>
        <![CDATA[ A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job. ]]>
      </description>
      <variables>
        <variable advanced="false" description="The list of comma-separated signals expected by this task." hidden="false" inherited="false" name="SIGNALS" value="Terminate_Job,New_ML_pipeline_run"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png"/>
        <info name="TASK.DOCUMENTATION" value="user/ProActiveUserGuide.html#_task_signal_api"/>
      </genericInformation>
      <depends>
        <task ref="Visdom_Visualize_Results"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import com.google.common.base.Splitter;
import org.ow2.proactive.scheduler.common.job.JobVariable;

public static boolean containsIgnoreCase(String str, String searchStr) {
    if(str == null || searchStr == null) return false;
    final int length = searchStr.length();
    if (length == 0)
        return true;
    for (int i = str.length() - length; i >= 0; i--) {
        if (str.regionMatches(true, i, searchStr, 0, length))
            return true;
    }
    return false;
}

if (variables.get("PA_TASK_ITERATION_SIGNAL") == null) {
	variables.put("PA_TASK_ITERATION_SIGNAL", 0)
}

if (variables.get("PA_TASK_ITERATION_SIGNAL") == 0) {
    List <JobVariable> signalVariables = new java.util.ArrayList<JobVariable>()
    signalVariables.add(new JobVariable("N_SPLITS", "5", "PA:Integer", "Number of splits you want to perform on the data.", "", false, false))
	signalVariables.add(new JobVariable("SCORING", "neg_mean_squared_error", "PA:List(explained_variance,neg_mean_absolute_error,neg_mean_squared_error,neg_mean_squared_log_error,neg_median_absolute_error,r2)", "Function used to evaluate the quality of a given pipeline for the regression problem.", "", false, false))
    signalVariables.add(new JobVariable("SCALER_NAME", "MinMaxScaler", "PA:List(MinMaxScaler,StandardScaler,RobustScaler,Normalizer)", "Scaler type to be used.", "", false, false))
    // Read the variable SIGNALS
    signals = variables.get("SIGNALS")

    // Split the value of the variable SIGNALS and transform it into a list
    Set signalsSet = new HashSet<>(Splitter.on(',').trimResults().omitEmptyStrings().splitToList(signals))

    // Send a ready notification for each signal in the set with updated variables
    println("Ready for signals "+ signalsSet)
    signalsSet.each{ signal ->
        if(signal.equals("Terminate_Job")) {
            signalapi.readyForSignal(signal);
        } else {
            signalapi.readyForSignal(signal, signalVariables)
        }
    }

    // Add the signals set as a variable to be used by next tasks
    variables.put("SIGNALS_SET", signalsSet)
}
variables.put("PA_TASK_ITERATION_SIGNAL", variables.get("PA_TASK_ITERATION_SIGNAL")+1)

//Read the variable SIGNALS_SET
Set signalsSet = variables.get("SIGNALS_SET")

// Check whether one signal among those specified as input is received
println("Checking whether one signal in the set "+ signalsSet +" is received")
receivedSignals = signalapi.checkForSignals(signalsSet)

// If a signal is received, remove ready signals and break the loop
// If a signal is received, remove ready signals and break the loop, else sleep 10 seconds then restart
if (receivedSignals != null && !receivedSignals.isEmpty()) {
    // remove ready signals
    signalapi.removeManySignals(new HashSet<>(signalsSet.collect { signal -> "ready_"+signal }))
    
    // Print the received signal
    println("Received signals: " + receivedSignals.toString())
    terminate = false
    for (String s : Arrays.asList(receivedSignals.keySet())) {
    	if (containsIgnoreCase(s, "Terminate_Job")) {
            println("Terminate_Job")
            result = "Terminate_Job"
            terminate = true
        }
        if (containsIgnoreCase(s, "New_ML_pipeline_run") && !terminate) {
            println("New_ML_pipeline_run")
            updatedVariables = receivedSignals.get("New_ML_pipeline_run")
    		variables.put("N_SPLITS", updatedVariables.get("N_SPLITS"))
            variables.put("SCORING", updatedVariables.get("SCORING"))
            variables.put("SCALER_NAME", updatedVariables.get("SCALER_NAME"))
            result = "New_ML_pipeline_run"
        }
    }
} else {
    result = null
}

variables.put("RECEIVED_SIGNAL", result)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow>
        <loop target="Wait_for_Signal">
          <script>
            <code language="groovy">
              <![CDATA[
if (result!=null){
    loop = false
} else {
    loop = "* * * * *"
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            1231.1388778686523
        </positionTop>
        <positionLeft>
            305.8680725097656
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Visdom_Service_Actions" onTaskError="cancelJob">
      <description>
        <![CDATA[ Manage the life-cycle of Visdom PSA service. It allows to trigger the following possible actions: Finish_Visdom.
It requires the following variables:
INSTANCE_ID: if used alone or;
INSTANCE_NAME: if used within the same workflow as a Visdom_Service_Start task. In this case there is no need for an INSTANCE_ID.
ACTION: the action to execute on the Visdom service among the aforementioned actions. ]]>
      </description>
      <variables>
        <variable advanced="false" description="Visdom instance ID to be used." hidden="false" inherited="false" name="INSTANCE_ID" value=""/>
        <variable advanced="false" description="Instance name of the server to be used to broadcast the visualization." hidden="false" inherited="false" name="INSTANCE_NAME" value="$VISDOM_INSTANCE_NAME"/>
        <variable advanced="false" description="The action that will be processed regarding the service status." hidden="false" inherited="false" model="PA:CATALOG_OBJECT(Workflow/psa,,,%Visdom)" name="SERVICE_ACTION_WORKFLOW" value="service-automation/Finish_Visdom"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_visdom_service_actions"/>
      </genericInformation>
      <depends>
        <task ref="Loop"/>
      </depends>
      <scriptExecutable>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Action/raw">
            <arguments>
              <argument value="INSTANCE_NAME"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <metadata>
        <positionTop>
            1453.1388778686523
        </positionTop>
        <positionLeft>
            295.8680725097656
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2509px;
            height:3190px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-87.13889122009277px;left:-128.86111450195312px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_109" style="top: 336.139px; left: 133.868px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Load data from external sources and detect its features type if requested."><img src="/automation-dashboard/styles/patterns/img/wf-icons/import_data.png" width="20px">&nbsp;<span class="name">Import_Train_Data</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_112" style="top: 466.139px; left: 139.868px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Replace all NaN elements of the data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Fill_NaNs</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_115" style="top: 717.139px; left: 139.868px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Scale the specified columns from the data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Scale_Train_Data</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_118" style="top: 847.14px; left: 241.875px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Train a classification/clustering/anomaly detection model."><img src="/automation-dashboard/styles/patterns/img/wf-icons/train.png" width="20px">&nbsp;<span class="name">Train_Model</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_121" style="top: 334.139px; left: 270.868px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Support Vector Regression are supervised learning models with associated learning algorithms that analyze data used for regression."><img src="/automation-dashboard/styles/patterns/img/wf-icons/ml_regresssion.png" width="20px">&nbsp;<span class="name">Support_Vector_Regression</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_124" style="top: 589.139px; left: 138.868px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Remove the specified columns from your data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Drop_Columns</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_127" style="top: 336.139px; left: 490.868px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Load data from external sources and detect its features type if requested."><img src="/automation-dashboard/styles/patterns/img/wf-icons/import_data.png" width="20px">&nbsp;<span class="name">Import_Test_Data</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_130" style="top: 975.14px; left: 305.875px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Generate predictions using a trained model."><img src="/automation-dashboard/styles/patterns/img/wf-icons/predict.png" width="20px">&nbsp;<span class="name">Predict_Model</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_133" style="top: 847.14px; left: 369.875px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Scale the specified columns from the data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Scale_Test_Data</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_136" style="top: 721.139px; left: 365.868px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Remove the specified columns from your data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Drop_Columns2</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_139" style="top: 92.1389px; left: 338.868px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start the Visdom server as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Start_Visdom_Service</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon" class="glyphicon glyphicon-arrow-right"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_142" style="top: 1103.14px; left: 305.875px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Plot the different results obtained by a predictive model using Visdom"><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Visdom_Visualize_Results</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_145" style="top: 207.14px; left: 310.875px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png" width="20px">&nbsp;<span class="name">Start</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_ active-task" id="jsPlumb_1_148" style="top: 1339.14px; left: 441.868px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png" width="20px">&nbsp;<span class="name">Loop</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_151" style="top: 1231.14px; left: 305.875px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png" width="20px">&nbsp;<span class="name">Wait_for_Signal</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_154" style="top: 1453.14px; left: 295.868px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Manage the life-cycle of Visdom PSA service. It allows to trigger the following possible actions: Finish_Visdom.
It requires the following variables:
INSTANCE_ID: if used alone or;
INSTANCE_NAME: if used within the same workflow as a Visdom_Service_Start task. In this case there is no need for an INSTANCE_ID.
ACTION: the action to execute on the Visdom service among the aforementioned actions."><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Visdom_Service_Actions</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon" class="glyphicon glyphicon-arrow-right"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><svg style="position:absolute;left:184.8680419921875px;top:246.5px" width="186.6319580078125" height="90.13888549804688" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 89.13888549804688 C -10 39.138885498046875 175.6319580078125 50 165.6319580078125 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M23.067493438720703,61.14843463897705 L44.250082188781256,60.60260147233365 L36.157990542698215,56.184677435934546 L39.28632498573875,47.51210436835614 L23.067493438720703,61.14843463897705" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M23.067493438720703,61.14843463897705 L44.250082188781256,60.60260147233365 L36.157990542698215,56.184677435934546 L39.28632498573875,47.51210436835614 L23.067493438720703,61.14843463897705" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:179.3680419921875px;top:375.6388854980469px" width="26.5" height="91" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 90 C -10 40 15.5 50 5.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.363472,68.13216 L6.618498071479474,48.94038536514544 L-0.9510940360835072,54.20358546823103 L-7.310076460289494,47.52800740122894 L-2.363472,68.13216" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.363472,68.13216 L6.618498071479474,48.94038536514544 L-0.9510940360835072,54.20358546823103 L-7.310076460289494,47.52800740122894 L-2.363472,68.13216" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:181.8680419921875px;top:628.6388854980469px" width="28.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 7.5 88 C 17.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.6924,66.303232 L14.047579150003148,45.56600907668218 L7.882160168186493,52.42075989481225 L0.1651070448154046,47.37624890849568 L9.6924,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.6924,66.303232 L14.047579150003148,45.56600907668218 L7.882160168186493,52.42075989481225 L0.1651070448154046,47.37624890849568 L9.6924,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:189.3680419921875px;top:756.6388854980469px" width="113.1319580078125" height="90.86111450195312" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 92.1319580078125 89.86111450195312 C 102.1319580078125 39.861114501953125 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M83.11548555374145,63.87466875171662 L70.97691871452909,46.50644503453776 L71.75494070014905,55.69310284844876 L62.79535281126124,57.86698988813016 L83.11548555374145,63.87466875171662" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M83.11548555374145,63.87466875171662 L70.97691871452909,46.50644503453776 L71.75494070014905,55.69310284844876 L62.79535281126124,57.86698988813016 L83.11548555374145,63.87466875171662" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:281.5px;top:373.6388854980469px" width="82.3680419921875" height="473.8611145019531" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 472.8611145019531 C -10 422.8611145019531 71.3680419921875 50 61.3680419921875 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.078340960937503,369.0990747421875 L18.98566797704143,350.36822128069304 L11.168380883615999,355.25596334620394 L5.142556581057862,348.2781813580146 L9.078340960937503,369.0990747421875" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.078340960937503,369.0990747421875 L18.98566797704143,350.36822128069304 L11.168380883615999,355.25596334620394 L5.142556581057862,348.2781813580146 L9.078340960937503,369.0990747421875" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:342.8680419921875px;top:246.5px" width="28.6319580078125" height="88.13888549804688" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 87.13888549804688 C -10 37.138885498046875 17.6319580078125 50 7.6319580078125 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.195931407928467,65.99045782184602 L7.303786414332974,47.04961936898422 L-0.4059117601495217,52.10536402812013 L-6.581307379392921,45.25959972120527 L-2.195931407928467,65.99045782184602" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.195931407928467,65.99045782184602 L7.303786414332974,47.04961936898422 L-0.4059117601495217,52.10536402812013 L-6.581307379392921,45.25959972120527 L-2.195931407928467,65.99045782184602" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:179.3680419921875px;top:505.6388854980469px" width="23.5" height="84" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 2.5 83 C 12.5 33 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.101595,62.650558000000004 L10.86946830757525,42.261059783816236 L4.248217941948911,48.67659121898925 L-3.1044984734355037,43.11443684186733 L5.101595,62.650558000000004" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.101595,62.650558000000004 L10.86946830757525,42.261059783816236 L4.248217941948911,48.67659121898925 L-3.1044984734355037,43.11443684186733 L5.101595,62.650558000000004" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:350.5px;top:246.5px" width="210.36807250976562" height="90.1388931274414" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 189.36807250976562 89.1388931274414 C 199.36807250976562 39.138893127441406 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M161.49969431154634,60.74305187866783 L144.68766286065258,47.84516063652446 L148.20044676593318,56.369264650132074 L140.3138756321168,61.14440818213762 L161.49969431154634,60.74305187866783" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M161.49969431154634,60.74305187866783 L144.68766286065258,47.84516063652446 L148.20044676593318,56.369264650132074 L140.3138756321168,61.14440818213762 L161.49969431154634,60.74305187866783" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:281.5px;top:886.5px" width="87" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 66 88 C 76 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M61.377312,63.554236 L52.25040759572141,44.430961803483335 L51.51180174508544,53.62087265165844 L42.31704424737984,54.2964720583979 L61.377312,63.554236" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M61.377312,63.554236 L52.25040759572141,44.430961803483335 L51.51180174508544,53.62087265165844 L42.31704424737984,54.2964720583979 L61.377312,63.554236" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:347.5px;top:886.5px" width="91" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 80 50 70 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.077799999999998,63.554236 L24.38921760733801,54.8324729904362 L15.216918385562117,53.900310458358604 L14.735292065696612,44.69335460487409 L5.077799999999998,63.554236" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.077799999999998,63.554236 L24.38921760733801,54.8324729904362 L15.216918385562117,53.900310458358604 L14.735292065696612,44.69335460487409 L5.077799999999998,63.554236" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:189.3680419921875px;top:756.6388854980469px" width="249.1319580078125" height="90.86111450195312" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 228.1319580078125 89.86111450195312 C 238.1319580078125 39.861114501953125 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M191.30748563259885,60.54254999018096 L173.83456565703938,48.5551788218349 L177.79483537056194,56.880817764051635 L170.17283343091003,62.0678290838718 L191.30748563259885,60.54254999018096" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M191.30748563259885,60.54254999018096 L173.83456565703938,48.5551788218349 L177.79483537056194,56.880817764051635 L170.17283343091003,62.0678290838718 L191.30748563259885,60.54254999018096" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:411.3680419921875px;top:760.6389007568359px" width="27.1319580078125" height="86.86109924316406" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 6.1319580078125 85.86109924316406 C 16.1319580078125 35.86109924316406 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M8.449623790740967,64.81637190771104 L13.198572458482499,44.16576691533477 L6.903847260038859,50.90197019879339 L-0.7158292504351573,45.711543446036885 L8.449623790740967,64.81637190771104" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M8.449623790740967,64.81637190771104 L13.198572458482499,44.16576691533477 L6.903847260038859,50.90197019879339 L-0.7158292504351573,45.711543446036885 L8.449623790740967,64.81637190771104" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:411.3680419921875px;top:375.6388931274414px" width="149.50003051757812" height="346.00000762939453" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 345.00000762939453 C -10 295.00000762939453 138.50003051757812 50 128.50003051757812 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M21.117083779335026,267.6201624658107 L35.35404044824431,251.92592579091638 L26.569895968989712,254.72571252700553 L22.45959050943912,246.47311360126167 L21.117083779335026,267.6201624658107" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M21.117083779335026,267.6201624658107 L35.35404044824431,251.92592579091638 L26.569895968989712,254.72571252700553 L22.45959050943912,246.47311360126167 L21.117083779335026,267.6201624658107" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:347.5px;top:1014.5px" width="48" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 27 88 C 37 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M27.41933025,65.8307285 L26.57638206964205,44.65788177677379 L22.27241606430647,52.81115575873439 L13.556809328376433,49.804795962467324 L27.41933025,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M27.41933025,65.8307285 L26.57638206964205,44.65788177677379 L22.27241606430647,52.81115575873439 L13.556809328376433,49.804795962467324 L27.41933025,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:350.5px;top:131.63888549804688px" width="68.36807250976562" height="75.86111450195312" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 74.86111450195312 C -10 24.861114501953125 57.368072509765625 50 47.368072509765625 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M1.4140356007308936,53.87449707868194 L19.435802505732934,42.72927758233405 L10.219967054535967,42.99076742240664 L8.552072849457634,33.923346128528976 L1.4140356007308936,53.87449707868194" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M1.4140356007308936,53.87449707868194 L19.435802505732934,42.72927758233405 L10.219967054535967,42.99076742240664 L8.552072849457634,33.923346128528976 L1.4140356007308936,53.87449707868194" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:350.5px;top:1270.5px" width="151.86807250976562" height="69.13885498046875" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 130.86807250976562 68.13885498046875 C 140.86807250976562 18.13885498046875 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M114.71775004882812,44.02116390234376 L97.95918762388231,31.05387484683201 L101.43669925500858,39.59242934132237 L93.53045306286094,44.334925640651555 L114.71775004882812,44.02116390234376" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M114.71775004882812,44.02116390234376 L97.95918762388231,31.05387484683201 L101.43669925500858,39.59242934132237 L93.53045306286094,44.334925640651555 L114.71775004882812,44.02116390234376" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:410.5px;top:196.5px" width="131.86807250976562" height="1193.1388549804688" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 0 C 50 -50 120.86807250976562 1142.1388549804688 130.86807250976562 1092.1388549804688 " transform="translate(0.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M46.771551853332525,209.302584043335 L56.07245470549536,228.3418383915134 L48.416108362205826,223.2056568651655 L42.16938188366484,229.98639490038667 L46.771551853332525,209.302584043335" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M46.771551853332525,209.302584043335 L56.07245470549536,228.3418383915134 L48.416108362205826,223.2056568651655 L42.16938188366484,229.98639490038667 L46.771551853332525,209.302584043335" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_204" style="position: absolute; transform: translate(-50%, -50%); left: 490.934px; top: 792.569px;">loop</div><svg style="position:absolute;left:350.5px;top:1142.5px" width="45" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 34 50 24 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-0.6893655000000017,65.8307285 L12.602253434580478,49.32821759717369 L3.9975102977851975,52.63856433879676 L-0.5899107266227688,44.641341799388485 L-0.6893655000000017,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-0.6893655000000017,65.8307285 L12.602253434580478,49.32821759717369 L3.9975102977851975,52.63856433879676 L-0.5899107266227688,44.641341799388485 L-0.6893655000000017,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:405.5px;top:1220.5px" width="61" height="61" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C 50 -10 -10 50 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_213" style="position: absolute; transform: translate(-50%, -50%); left: 430.5px; top: 1250.5px;">loop</div><svg style="position:absolute;left:360.8680725097656px;top:1378.6388549804688px" width="141.5" height="75" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 74 C -10 24 130.5 50 120.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.977747125,49.368663 L35.133577414588686,48.1724837667234 L26.909611080954843,44.00518515212219 L29.770099566710872,35.240619810768564 L13.977747125,49.368663" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.977747125,49.368663 L35.133577414588686,48.1724837667234 L26.909611080954843,44.00518515212219 L29.770099566710872,35.240619810768564 L13.977747125,49.368663" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 185.368px; top: 366.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 185.368px; top: 326.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 179.868px; top: 496.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 179.868px; top: 456.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 189.868px; top: 747.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 189.868px; top: 707.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 282px; top: 877px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 282px; top: 837px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 343.368px; top: 364.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 343.368px; top: 324.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 182.368px; top: 619.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 182.368px; top: 579.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 540.368px; top: 366.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 540.368px; top: 326.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 348px; top: 1005px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 348px; top: 965px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 418px; top: 877px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 418px; top: 837px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 411.868px; top: 751.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 411.868px; top: 711.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 398.368px; top: 122.139px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 375px; top: 1133px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 375px; top: 1093px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 351px; top: 237px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 351px; top: 197px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 401px; top: 237px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 481.868px; top: 1369.14px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 481.868px; top: 1329.14px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 531.868px; top: 1329.14px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 351px; top: 1261px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 351px; top: 1221px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 406px; top: 1221px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 406px; top: 1261px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 361.368px; top: 1483.14px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 361.368px; top: 1443.14px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
