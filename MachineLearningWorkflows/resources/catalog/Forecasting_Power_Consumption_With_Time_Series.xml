<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Forecasting_Power_Consumption_With_Time_Series" projectName="1. Basic Machine Learning" tags="Controls,Get started,Building blocks" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="WORK_DIR" value="." model="PA:LIST(.,$HOME/,$WORK/,$SCRATCH/)" description="Working directory for the data space used to transfer files automatically between the workflow tasks."  advanced="false" hidden="false"/>
    <variable name="CONTAINER_PLATFORM" value="docker" model="PA:LIST(no-container,docker,podman,singularity)" description="Container platform used for executing the workflow tasks." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="CONTAINER_GPU_ENABLED" value="False" model="PA:Boolean" description="If True, it will activate the use of GPU for the workflow tasks on the selected container platform." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="CONTAINER_IMAGE" value="" model="PA:LIST(,docker://activeeon/dlm3,docker://activeeon/cuda,docker://activeeon/cuda2,docker://activeeon/rapidsai,docker://activeeon/nvidia:rapidsai)" description="Name of the container image being used to run the workflow tasks." group="Container Parameters" advanced="true" hidden="false"/>
    <variable name="VISDOM_INSTANCE_NAME" value="visdom-server-${PA_JOB_ID}"  description="Name of the Visdom service instance to use." group="Visdom Parameters" advanced="false" hidden="false"/>
    <variable name="VISDOM_ENABLE_LOGIN" value="False" model="PA:Boolean" description="If True, a login in required for accessing the Visdom service." group="Visdom Parameters" advanced="false" hidden="false"/>
    <variable name="VISDOM_USERNAME" value=""  description="Username to access the Visdom service." group="Visdom Parameters" advanced="false" hidden="false"/>
    <variable name="VISDOM_PASSWORD" value="" model="PA:HIDDEN" description="Password to access the Visdom service." group="Visdom Parameters" advanced="false" hidden="false"/>
    <variable name="VISDOM_PROXYFIED" value="True" model="PA:Boolean" description="If True, requests to Visdom are sent via a proxy server." group="Visdom Parameters" advanced="false" hidden="false"/>
    <variable name="N_SPLITS" value="5" model="PA:Integer"   advanced="false" hidden="false"/>
    <variable name="SCALER_NAME" value="MinMaxScaler" model="PA:List(MinMaxScaler,StandardScaler,RobustScaler,Normalizer)" description="Scaler type to be used."  advanced="false" hidden="false"/>
    <variable name="SCORING" value="neg_mean_squared_error" model="PA:List(explained_variance,neg_mean_absolute_error,neg_mean_squared_error,neg_mean_squared_log_error,neg_median_absolute_error,r2)" description="Function used to evaluate the quality of a given pipeline for the regression problem."  advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ Load data from external sources and detect its features type if requested. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="ai-machine-learning-workflows"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/machine_learning.png"/>
    <info name="Documentation" value="PAIO/PAIOUserGuide.html#_import_data"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Import_Train_Data" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Load data from external sources and detect its features type if requested. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="IMPORT_FROM" value="PA:GLOBAL_FILE" inherited="false" model="PA:LIST(PA:URL,PA:URI,PA:USER_FILE,PA:GLOBAL_FILE)" description="Method/protocol used to import the data from the data source."  advanced="false" hidden="false"/>
        <variable name="FILE_PATH" value="train_electricity_load.csv" inherited="false" model="$IMPORT_FROM" description="Path or name of the file that contains the dataset."  advanced="false" hidden="false"/>
        <variable name="FILE_DELIMITER" value="," inherited="false"  description="Delimiter to use."  advanced="false" hidden="false"/>
        <variable name="LABEL_COLUMN" value="nat_demand" inherited="false"  description="Label/class column name."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="100" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
        <variable name="DATA_TYPE_IDENTIFICATION" value="False" inherited="false" model="PA:Boolean" description="If True, the types of the dataset features will be predicted (as numerical or categorical)."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/import_data.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_import_data"/>
      </genericInformation>
      <depends>
        <task ref="Start"/>
      </depends>
      <inputFiles>
        <files  includes="data_type_identifier/*" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Import_Data_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            448.0729064941406
        </positionTop>
        <positionLeft>
            541.9965515136719
        </positionLeft>
      </metadata>
    </task>
    <task name="Fill_NaNs" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Replace all NaN elements of the data. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="FILL_MAP" value="" inherited="false"  description="The value to be used to fill NaNs (e.g., 0)."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="5" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_fill_nans"/>
      </genericInformation>
      <depends>
        <task ref="Import_Train_Data"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Fill_Nans_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            576.0677185058594
        </positionTop>
        <positionLeft>
            541.9965515136719
        </positionLeft>
      </metadata>
    </task>
    <task name="Scale_Train_Data" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Scale the specified columns from the data. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="SCALER_NAME" value="MinMaxScaler" inherited="true" model="PA:List(MinMaxScaler,StandardScaler,RobustScaler,Normalizer)" description="Scaler type to be used."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="5" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
        <variable name="COLUMNS_NAME" value="T2M_toc,QV2M_toc, TQL_toc, W2M_toc, T2M_san, QV2M_san, TQL_san, W2M_san, T2M_dav, QV2M_dav,TQL_dav,W2M_dav,Holiday_ID,holiday,school" inherited="false"  description="List of columns to restrict to. Columns names should be separated by a comma."  advanced="false" hidden="false"/>
        <variable name="SAVE_SCALER" value="True" inherited="false" model="PA:Boolean" description="True, if you want to save the fitted scaler"  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_scale_data"/>
      </genericInformation>
      <depends>
        <task ref="Drop_Columns"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
"""Proactive Scale Data for Machine Learning

This module contains the Python script for the Scale Data task.
"""
import ssl
import urllib.request

global variables, resultMetadata

__file__ = variables.get("PA_TASK_NAME")
print("BEGIN " + __file__)

# -------------------------------------------------------------
# Get schedulerapi access and acquire session id
schedulerapi.connect()
sessionid = schedulerapi.getSession()

# -------------------------------------------------------------
# Import an external python script containing a collection of
# common utility Python functions and classes
PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
PA_PYTHON_UTILS_URL = PA_CATALOG_REST_URL + "/buckets/ai-machine-learning/resources/Utils_Script/raw"
req = urllib.request.Request(PA_PYTHON_UTILS_URL)
req.add_header('sessionid', sessionid)
if PA_PYTHON_UTILS_URL.startswith('https'):
    content = urllib.request.urlopen(req, context=ssl._create_unverified_context()).read()
else:
    content = urllib.request.urlopen(req).read()
exec(content, globals())
global check_task_is_enabled, preview_dataframe_in_task_result
global get_and_decompress_dataframe, compress_and_transfer_dataframe
global assert_not_none_not_empty, get_input_variables, scale_columns

# -------------------------------------------------------------
# Check if the Python task is enabled or not
check_task_is_enabled()

# -------------------------------------------------------------
# Get data from the propagated variables
#
COLUMNS_NAME = variables.get("COLUMNS_NAME")
SCALER_NAME = variables.get("SCALER_NAME")
SAVE_SCALER =  variables.get("SAVE_SCALER")
print("SAVE_SCALER : ", SAVE_SCALER)

assert_not_none_not_empty(COLUMNS_NAME, "COLUMNS_NAME should be defined!")
assert_not_none_not_empty(SCALER_NAME, "SCALER_NAME should be defined!")
assert_not_none_not_empty(SAVE_SCALER, "SAVE_SCALER should be defined!")

input_variables = {
    'task.dataframe_id': None,
    'task.label_column': None
}
get_input_variables(input_variables)

dataframe_id = input_variables['task.dataframe_id']
print("dataframe id (in): ", dataframe_id)

dataframe = get_and_decompress_dataframe(dataframe_id)

# Apply a given Scaler to the DataFrame
columns = [x.strip() for x in COLUMNS_NAME.split(',')]
dataframe, scaler = scale_columns(dataframe, columns, SCALER_NAME)

# -----------------------------------------------------------------
# Save scaler
#
if SAVE_SCALER:
    print("saving scaller model")
    scaler_id = compress_and_transfer_data(scaler, "scaler")
    resultMetadata.put("task.scaler_id", scaler_id)

# -------------------------------------------------------------
# Transfer data to the next tasks
#
dataframe_id = compress_and_transfer_dataframe(dataframe)
print("dataframe id (out): ", dataframe_id)

resultMetadata.put("task.name", __file__)
resultMetadata.put("task.dataframe_id", dataframe_id)
resultMetadata.put("task.label_column", input_variables['task.label_column'])

# -------------------------------------------------------------
# Preview results
#
preview_dataframe_in_task_result(dataframe)

# -------------------------------------------------------------
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            832.0746765136719
        </positionTop>
        <positionLeft>
            541.9965515136719
        </positionLeft>
      </metadata>
    </task>
    <task name="Train_Model" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Train a classification/clustering/anomaly detection model. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="LABEL_COLUMN" value="nat_demand" inherited="false"  description="Label/class column name."  advanced="false" hidden="false"/>
        <variable name="N_SPLITS" value="5" inherited="true" model="PA:Integer" description="Number of splits you want to perform on the data."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/train.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_train_model"/>
      </genericInformation>
      <depends>
        <task ref="Scale_Train_Data"/>
        <task ref="Support_Vector_Regression"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <pre>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-auto-ml-optimization/resources/get_automl_token/raw" language="groovy"></file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Train_Model_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            960.0694274902344
        </positionTop>
        <positionLeft>
            605.9983215332031
        </positionLeft>
      </metadata>
    </task>
    <task name="Support_Vector_Regression" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Support Vector Regression are supervised learning models with associated learning algorithms that analyze data used for regression. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="INPUT_VARIABLES" value="{}" inherited="false"  description="Parameters&#39; values of the Support Vector Regression algorithm."  advanced="false" hidden="false"/>
        <variable name="SCORING" value="neg_mean_absolute_error" inherited="true" model="PA:List(explained_variance,neg_mean_absolute_error,neg_mean_squared_error,neg_mean_squared_log_error,neg_median_absolute_error,r2)" description="Function used to evaluate the quality of a given pipeline for the regression problem."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/ml_regresssion.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_support_vector_regression"/>
      </genericInformation>
      <depends>
        <task ref="Start"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <pre>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-auto-ml-optimization/resources/get_automl_params/raw" language="groovy"></file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Support_Vector_Regression_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            448.0729064941406
        </positionTop>
        <positionLeft>
            675.0000915527344
        </positionLeft>
      </metadata>
    </task>
    <task name="Drop_Columns" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Remove the specified columns from your data. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="COLUMNS_NAME" value="datetime" inherited="false"  description="List of columns to restrict to. Columns names should be separated by a comma."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="5" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_drop_columns"/>
      </genericInformation>
      <depends>
        <task ref="Fill_NaNs"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Drop_Columns_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            704.0711975097656
        </positionTop>
        <positionLeft>
            541.9965515136719
        </positionLeft>
      </metadata>
    </task>
    <task name="Import_Test_Data" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Load data from external sources and detect its features type if requested. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="IMPORT_FROM" value="PA:GLOBAL_FILE" inherited="false" model="PA:LIST(PA:URL,PA:URI,PA:USER_FILE,PA:GLOBAL_FILE)" description="Method/protocol used to import the data from the data source."  advanced="false" hidden="false"/>
        <variable name="FILE_PATH" value="predict_electricity_load.csv" inherited="false" model="$IMPORT_FROM" description="Path or name of the file that contains the dataset."  advanced="false" hidden="false"/>
        <variable name="FILE_DELIMITER" value=";" inherited="false"  description="Delimiter to use."  advanced="false" hidden="false"/>
        <variable name="LABEL_COLUMN" value="nat_demand" inherited="false"  description="Label/class column name."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="5" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
        <variable name="DATA_TYPE_IDENTIFICATION" value="False" inherited="false" model="PA:Boolean" description="If True, the types of the dataset features will be predicted (as numerical or categorical)."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/import_data.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_import_data"/>
      </genericInformation>
      <depends>
        <task ref="Start"/>
      </depends>
      <inputFiles>
        <files  includes="data_type_identifier/*" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Import_Data_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            448.0729064941406
        </positionTop>
        <positionLeft>
            802.9948425292969
        </positionLeft>
      </metadata>
    </task>
    <task name="Predict_Model" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Generate predictions using a trained model. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="LABEL_COLUMN" value="nat_demand" inherited="false"  description="Label/class column name."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="100" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/predict.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_predict_model"/>
      </genericInformation>
      <depends>
        <task ref="Train_Model"/>
        <task ref="Scale_Test_Data"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/ai-machine-learning/resources/Predict_Model_Script/raw" language="cpython"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            1088.0729675292969
        </positionTop>
        <positionLeft>
            670.0000915527344
        </positionLeft>
      </metadata>
    </task>
    <task name="Scale_Test_Data" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Scale the specified columns from the data. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="SCALER_NAME" value="MinMaxScaler" inherited="true" model="PA:List(MinMaxScaler,StandardScaler,RobustScaler,Normalizer)" description="Scaler type to be used."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="5" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
        <variable name="COLUMNS_NAME" value="T2M_toc,QV2M_toc, TQL_toc, W2M_toc, T2M_san, QV2M_san, TQL_san, W2M_san, T2M_dav, QV2M_dav,TQL_dav,W2M_dav,Holiday_ID,holiday,school" inherited="false"  description="List of columns to restrict to. Columns names should be separated by a comma."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_scale_data"/>
      </genericInformation>
      <depends>
        <task ref="Scale_Train_Data"/>
        <task ref="Drop_Columns2"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
"""Proactive Scale Data for Machine Learning

This module contains the Python script for the Scale Data task.
"""
import ssl
import urllib.request
import pickle
import bz2
import pandas as pd
global variables, resultMetadata

__file__ = variables.get("PA_TASK_NAME")
print("BEGIN " + __file__)

# -------------------------------------------------------------
# Get schedulerapi access and acquire session id
schedulerapi.connect()
sessionid = schedulerapi.getSession()

# -------------------------------------------------------------
# Import an external python script containing a collection of
# common utility Python functions and classes
PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
PA_PYTHON_UTILS_URL = PA_CATALOG_REST_URL + "/buckets/ai-machine-learning/resources/Utils_Script/raw"
req = urllib.request.Request(PA_PYTHON_UTILS_URL)
req.add_header('sessionid', sessionid)
if PA_PYTHON_UTILS_URL.startswith('https'):
    content = urllib.request.urlopen(req, context=ssl._create_unverified_context()).read()
else:
    content = urllib.request.urlopen(req).read()
exec(content, globals())
global check_task_is_enabled, preview_dataframe_in_task_result
global get_and_decompress_dataframe, compress_and_transfer_dataframe
global assert_not_none_not_empty, get_input_variables, scale_columns

# -------------------------------------------------------------
# Check if the Python task is enabled or not
check_task_is_enabled()

# -------------------------------------------------------------
# Get data from the propagated variables
#
COLUMNS_NAME = variables.get("COLUMNS_NAME")
SCALER_NAME = variables.get("SCALER_NAME")

assert_not_none_not_empty(COLUMNS_NAME, "COLUMNS_NAME should be defined!")
assert_not_none_not_empty(SCALER_NAME, "SCALER_NAME should be defined!")

input_variables = {
    'task.dataframe_id': None,
    'task.dataframe_id_test': None,
    'task.label_column': None,
    'task.scaler_id': None,
}
get_input_variables(input_variables)

dataframe_id_test = input_variables['task.dataframe_id_test']
print("dataframe id (in): ", dataframe_id_test)

dataframe = get_and_decompress_dataframe(dataframe_id_test)

# Apply a given Scaler to the DataFrame
scaler_id = input_variables['task.scaler_id']
scaler_compressed = variables.get(scaler_id)
scaler_bin = bz2.decompress(scaler_compressed)
assert scaler_bin is not None
print("scaler id (in): ", scaler_id)
print("scaler size: ", sys.getsizeof(scaler_compressed), " bytes")
print("scaler size (decompressed): ", sys.getsizeof(scaler_bin), " bytes")


loaded_scaler = pickle.loads(scaler_bin)

if loaded_scaler is not None:
    print('-' * 30)
    print(loaded_scaler)
    print('-' * 30)

columns = [x.strip() for x in COLUMNS_NAME.split(',')] 
print ("columns : ", columns)
scaled = loaded_scaler.transform(dataframe.filter(items=columns))
scaled_df = pd.DataFrame(scaled, columns=columns)
dataframe_scaled = dataframe.copy()
dataframe_scaled = dataframe_scaled.reset_index(drop=True)
for column in columns:
	dataframe_scaled[column] = scaled_df[column]
print(dataframe.head())

# -------------------------------------------------------------
# Transfer data to the next tasks
#
dataframe_id_test = compress_and_transfer_dataframe(dataframe_scaled)
print("dataframe_id_test (out): ", dataframe_id_test)

resultMetadata.put("task.name", __file__)
resultMetadata.put("task.dataframe_id_test", dataframe_id_test)
resultMetadata.put("task.label_column", input_variables['task.label_column'])

# -------------------------------------------------------------
# Preview results
#
preview_dataframe_in_task_result(dataframe)

# -------------------------------------------------------------
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            960.0694274902344
        </positionTop>
        <positionLeft>
            733.9931335449219
        </positionLeft>
      </metadata>
    </task>
    <task name="Drop_Columns2" 
    
    
    
    preciousResult="true" 
    fork="true">
      <description>
        <![CDATA[ Remove the specified columns from your data. ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="COLUMNS_NAME" value="datetime" inherited="false"  description="List of columns to restrict to. Columns names should be separated by a comma."  advanced="false" hidden="false"/>
        <variable name="LIMIT_OUTPUT_VIEW" value="5" inherited="false" model="PA:Integer" description="Number of rows that will be previewed in the browser."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_drop_columns"/>
      </genericInformation>
      <depends>
        <task ref="Import_Test_Data"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
# -*- coding: utf-8 -*-
"""Proactive Drop Columns for Machine Learning

This module contains the Python script for the Drop Columns task.
"""
import ssl
import urllib.request

global variables, resultMetadata

__file__ = variables.get("PA_TASK_NAME")
print("BEGIN " + __file__)

# -------------------------------------------------------------
# Get schedulerapi access and acquire session id
schedulerapi.connect()
sessionid = schedulerapi.getSession()

# -------------------------------------------------------------
# Import an external python script containing a collection of
# common utility Python functions and classes
PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
PA_PYTHON_UTILS_URL = PA_CATALOG_REST_URL + "/buckets/ai-machine-learning/resources/Utils_Script/raw"
req = urllib.request.Request(PA_PYTHON_UTILS_URL)
req.add_header('sessionid', sessionid)
if PA_PYTHON_UTILS_URL.startswith('https'):
    content = urllib.request.urlopen(req, context=ssl._create_unverified_context()).read()
else:
    content = urllib.request.urlopen(req).read()
exec(content, globals())
global check_task_is_enabled, preview_dataframe_in_task_result
global get_and_decompress_dataframe, compress_and_transfer_dataframe
global assert_not_none_not_empty, get_input_variables

# -------------------------------------------------------------
# Check if the Python task is enabled or not
check_task_is_enabled()

# -------------------------------------------------------------
# Get data from the propagated variables
#
COLUMNS_NAME = variables.get("COLUMNS_NAME")
assert_not_none_not_empty(COLUMNS_NAME, "COLUMNS_NAME should be defined!")

input_variables = {
    'task.dataframe_id_test': None,
    'task.dataframe_id': None,
    'task.label_column': None
}
get_input_variables(input_variables)

dataframe_id = input_variables['task.dataframe_id']
print("dataframe id (in): ", dataframe_id)

dataframe = get_and_decompress_dataframe(dataframe_id)

# Remove desired columns from the DataFrame
columns = [x.strip() for x in COLUMNS_NAME.split(',')]
dataframe.drop(columns, axis=1, inplace=True)

# -------------------------------------------------------------
# Transfer data to the next tasks
#
dataframe_id_test = compress_and_transfer_dataframe(dataframe)
print("dataframe_id_test (out): ", dataframe_id_test)

resultMetadata.put("task.name", __file__)
resultMetadata.put("task.dataframe_id_test", dataframe_id_test)
resultMetadata.put("task.label_column", input_variables['task.label_column'])

# -------------------------------------------------------------
# Preview results
#
preview_dataframe_in_task_result(dataframe)

# -------------------------------------------------------------
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            576.0677185058594
        </positionTop>
        <positionLeft>
            802.9948425292969
        </positionLeft>
      </metadata>
    </task>
    <task name="Start_Visdom_Service" 
    
    onTaskError="cancelJob" 
    
    
    fork="true">
      <description>
        <![CDATA[ Start the Visdom server as a service. ]]>
      </description>
      <variables>
        <variable name="SERVICE_ACTIVATION_WORKFLOW" value="service-automation/Visdom" inherited="false" model="PA:CATALOG_OBJECT(Workflow/psa,,,Visdom%)" description="The service activation workflow. Please keep the default value for this variable."  advanced="false" hidden="false"/>
        <variable name="INSTANCE_NAME" value="$VISDOM_INSTANCE_NAME" inherited="false"  description="Instance name of the server to be used to broadcast the visualization."  advanced="false" hidden="false"/>
        <variable name="PROXYFIED" value="$VISDOM_PROXYFIED" inherited="false"  description="If True, requests to Visdom are sent via a proxy server."  advanced="false" hidden="false"/>
        <variable name="ENGINE" value="$CONTAINER_PLATFORM" inherited="false"  description="Container platform used for executing the workflow tasks."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_visdom_service_start"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Start/raw" language="groovy">
            <arguments>
              <argument value="true"/>
              <argument value="NATIVE_SCHEDULER"/>
              <argument value="NATIVE_SCHEDULER_PARAMS"/>
              <argument value="ENGINE"/>
              <argument value="PROXYFIED"/>
              <argument value="VISDOM_ENABLE_LOGIN"/>
              <argument value="VISDOM_USERNAME"/>
              <argument value="VISDOM_PASSWORD"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
variables.put("ENDPOINT_VISDOM",variables.get("ENDPOINT_" + variables.get("INSTANCE_NAME")))
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            192.07464599609375
        </positionTop>
        <positionLeft>
            675.0000915527344
        </positionLeft>
      </metadata>
    </task>
    <task name="Visdom_Visualize_Results" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ Plot the different results obtained by a predictive model using Visdom ]]>
      </description>
      <variables>
        <variable name="TASK_ENABLED" value="True" inherited="false" model="PA:Boolean" description="If False, the task will be ignored, it will not be executed."  advanced="false" hidden="false"/>
        <variable name="TARGET_CLASS" value="1000" inherited="false"  description="Label/class column name"  advanced="false" hidden="false"/>
        <variable name="VISDOM_ENDPOINT" value="$ENDPOINT_VISDOM" inherited="false"  description="Visdom endpoint to be used."  advanced="false" hidden="false"/>
        <variable name="FILE_PATH" value="predict_electricity_load.csv" inherited="false" model="$IMPORT_FROM"   advanced="false" hidden="false"/>
        <variable name="IMPORT_FROM" value="PA:GLOBAL_FILE" inherited="false"    advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png"/>
        <info name="task.documentation" value="PAIO/PAIOUserGuide.html#_visdom_visualize_results"/>
      </genericInformation>
      <depends>
        <task ref="Predict_Model"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_node_source_name/raw" language="groovy"></file>
        </script>
      </selection>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
# -*- coding: utf-8 -*-
"""Proactive Visdom_Visualize_Results for Machine Learning

This module contains the Python script for the Visdom_Visualize_Results task.
"""
import ssl
import urllib.request
import json
import pandas as pd
import numpy as np

from visdom import Visdom
from sklearn.metrics import *
from pandas.api.types import is_string_dtype
from datetime import datetime

global variables, resultMetadata

__file__ = variables.get("PA_TASK_NAME")
print("BEGIN " + __file__)

# -------------------------------------------------------------
# Get schedulerapi access and acquire session id
schedulerapi.connect()
sessionid = schedulerapi.getSession()

# -------------------------------------------------------------
# Import an external python script containing a collection of
# common utility Python functions and classes
PA_CATALOG_REST_URL = variables.get("PA_CATALOG_REST_URL")
PA_PYTHON_UTILS_URL = PA_CATALOG_REST_URL + "/buckets/ai-machine-learning/resources/Utils_Script/raw"
req = urllib.request.Request(PA_PYTHON_UTILS_URL)
req.add_header('sessionid', sessionid)
if PA_PYTHON_UTILS_URL.startswith('https'):
    content = urllib.request.urlopen(req, context=ssl._create_unverified_context()).read()
else:
    content = urllib.request.urlopen(req).read()
exec(content, globals())
global check_task_is_enabled, get_input_variables, preview_dataframe_in_task_result
global get_and_decompress_dataframe, compress_and_transfer_dataframe, dict_to_obj

# -------------------------------------------------------------
# Check if the Python task is enabled or not
check_task_is_enabled()

# -------------------------------------------------------------
# Get Visdom endpoint
visdom_endpoint = variables.get("ENDPOINT_VISDOM") if variables.get("ENDPOINT_VISDOM") else results[0].__str__()
print("ENDPOINT_VISDOM: ", visdom_endpoint)
assert visdom_endpoint is not None
visdom_endpoint = visdom_endpoint.replace("http://", "")
(VISDOM_HOST, VISDOM_PORT) = visdom_endpoint.split(":")
print("Connecting to %s:%s" % (VISDOM_HOST, VISDOM_PORT))
PA_TASK_ITERATION = variables.get('PA_TASK_ITERATION')
vis = Visdom(server="http://"+VISDOM_HOST, port=int(VISDOM_PORT), env="iteration_"+str(PA_TASK_ITERATION))
assert vis.check_connection()

input_variables = {
    'task.dataframe_id': None,
    'task.dataframe_id_test': None,
    'task.algorithm_json': None,
    'task.label_column': None,
}
get_input_variables(input_variables)

dataframe_id = None
if input_variables['task.dataframe_id'] is not None:
    dataframe_id = input_variables['task.dataframe_id']
if input_variables['task.dataframe_id_test'] is not None:
    dataframe_id = input_variables['task.dataframe_id_test']
print("dataframe id (in): ", dataframe_id)

dataframe = get_and_decompress_dataframe(dataframe_id)
globalspaceapi.connect()
file_path = "predict_electricity_load.csv"
out_file = gateway.jvm.java.io.File(file_path)
globalspaceapi.pullFile(file_path, out_file)
dataframe_date = pd.read_csv(file_path, ";")
print(dataframe_date.head())
print("===================")
#dataframe.index = dataframe_date["datetime"]
dataframe_date["datetime_str"] =  pd.to_datetime(dataframe_date["datetime"]).astype(int)//10**9
dataframe_date.sort_values(by='datetime_str', inplace=True)


print(dataframe.head())

is_labeled_data = False
LABEL_COLUMN = variables.get("LABEL_COLUMN")
if LABEL_COLUMN is not None and LABEL_COLUMN is not "":
    is_labeled_data = True
else:
    LABEL_COLUMN = input_variables['task.label_column']
    if LABEL_COLUMN is not None and LABEL_COLUMN is not "":
        is_labeled_data = True

TARGET_CLASS = variables.get("TARGET_CLASS")
assert TARGET_CLASS is not None, 'The variable TARGET_CLASS is mandatory'
TARGET_CLASS = str(TARGET_CLASS)

algorithm_json = input_variables['task.algorithm_json']
assert algorithm_json is not None
algorithm = json.loads(algorithm_json)
print("algorithm:\n", algorithm)
alg = dict_to_obj(algorithm)

columns = []
if alg.type == 'classification' and is_labeled_data:
    columns = [LABEL_COLUMN, "predictions", "results"]
elif alg.type == 'regression' and is_labeled_data:
    columns = [LABEL_COLUMN, "predictions", "absolute_error"]
elif alg.type == 'clustering' and is_labeled_data:
    columns = [LABEL_COLUMN, "predictions"]
else:
    columns = ["predictions"]

dataframe_features = dataframe.drop(columns, axis=1, inplace=False)

dataframe_features_values = dataframe_features.values
dataframe_features_values_columns = list(dataframe_features.columns.values)

nb_rows = dataframe_features_values.shape[0]
nb_columns = dataframe_features_values.shape[1]

dataframe_predictions = dataframe["predictions"]
dataframe_predictions_values = dataframe_predictions.values.ravel()
dataframe_predictions_values_str = [str(dataframe_predictions[x]) for x in range(nb_rows)]

if alg.type == 'classification':
    df_classes = dataframe[LABEL_COLUMN].unique()
else:
    df_classes = dataframe_predictions.unique()

classes = [str(df_classes[x]) for x in range(0,len(df_classes))]
classes.sort()
classes_stats = [0]*len(classes)

if is_labeled_data:
    dataframe_labels = dataframe[LABEL_COLUMN]
    dataframe_labels_values = dataframe_labels.values.ravel()

if is_labeled_data and alg.type == 'regression':
    dataframe_predictions_values_float = [float(dataframe_predictions_values[x]) for x in range(nb_rows)]
    model_mse = round(mean_squared_error(dataframe_labels_values, dataframe_predictions_values_float), 2)
    model_mae = round(mean_absolute_error(dataframe_labels_values, dataframe_predictions_values_float), 2)
    model_r2s = round(r2_score(dataframe_labels_values, dataframe_predictions_values_float), 2)

# -------------------------------------------------------------
# VISDOM PLOTS
# -------------------------------------------------------------

# list_detected_samples_text = vis.text("List of detected samples in class " + TARGET_CLASS, opts=dict(title='List of indexes'))

target_class_line = vis.line(
    Y=np.array([dataframe_predictions_values[0]]),
    X=np.array([dataframe_date["datetime_str"][0]]),
    opts=dict(
        xlabel='Timestamp',
        ylabel='Predictions',
        title="Power Consumption Forecasting" 
        )
    )
    
features_line = vis.line(
    X=np.column_stack([dataframe_date["datetime_str"][0]]*nb_columns),
    Y=np.column_stack(dataframe_features_values[0][:]),
    opts=dict(
        legend=dataframe_features_values_columns,
        xlabel='Timestamp',
        ylabel='Feature Value',
        title='Values of extracted features for each sample'
        )
    )

# -------------------------------------------------------------

for x in range(nb_rows):
    vis.line(
        X=np.column_stack([dataframe_date["datetime_str"][x]]*nb_columns),
        Y=np.column_stack(dataframe_features_values[x][:]),
        win=features_line,
        update='append')
    if (x>0) and (dataframe_date["datetime_str"][x]> dataframe_date["datetime_str"][x-1]):
        print("float(dataframe_predictions_values[x])")
        print(float(dataframe_predictions_values[x]))
        print("str(dataframe.index[x]")
        print(str(dataframe.index[x]))
        vis.line(Y=np.array([float(dataframe_predictions_values[x])]), X=[dataframe_date["datetime_str"][x]], win=target_class_line, update='append')



if is_labeled_data and alg.type == 'regression':
    score_text = vis.text("<center><b> Regression scores </b></center>")
    vis.text("<b>Mean squared error:</b>" + str(model_mse), win=score_text, append=True)
    vis.text("<b>Mean absolute error:</b> " + str(model_mae), win=score_text, append=True)
    vis.text("<b>Coefficient of determination:</b> " + str(model_r2s) , win=score_text, append=True)

# -------------------------------------------------------------
print("END " + __file__)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            1216.0677185058594
        </positionTop>
        <positionLeft>
            670.0000915527344
        </positionLeft>
      </metadata>
    </task>
    <task name="Start" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png"/>
        <info name="task.documentation" value="user/ProActiveUserGuide.html#_loop"/>
      </genericInformation>
      <depends>
        <task ref="Start_Visdom_Service"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
print('Loop block start ' + variables.get('PA_TASK_ITERATION'))
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <metadata>
        <positionTop>
            320.0694274902344
        </positionTop>
        <positionLeft>
            675.0000915527344
        </positionLeft>
      </metadata>
    </task>
    <task name="Loop" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png"/>
      </genericInformation>
      <depends>
        <task ref="Wait_for_Signal"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
variables.remove("PA_TASK_ITERATION_SIGNAL")
print('Loop block end ' + variables.get('PA_TASK_ITERATION'))
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow  block="end">
        <loop target="Start">
          <script>
            <code language="javascript">
              <![CDATA[
if("New_ML_pipeline_run".equalsIgnoreCase(variables.get('RECEIVED_SIGNAL'))) {
    loop = true;
} else {
    loop = false;
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            1472.0746765136719
        </positionTop>
        <positionLeft>
            670.0000915527344
        </positionLeft>
      </metadata>
    </task>
    <task name="Wait_for_Signal" 
    
    
    
    
    fork="true"
    runAsMe="true" >
      <description>
        <![CDATA[ A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job. ]]>
      </description>
      <variables>
        <variable name="SIGNALS" value="Terminate_Job,New_ML_pipeline_run" inherited="false"  description="The list of comma-separated signals expected by this task."  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png"/>
        <info name="TASK.DOCUMENTATION" value="user/ProActiveUserGuide.html#_task_signal_api"/>
      </genericInformation>
      <depends>
        <task ref="Visdom_Visualize_Results"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import com.google.common.base.Splitter;
import org.ow2.proactive.scheduler.common.job.JobVariable;

public static boolean containsIgnoreCase(String str, String searchStr) {
    if(str == null || searchStr == null) return false;
    final int length = searchStr.length();
    if (length == 0)
        return true;
    for (int i = str.length() - length; i >= 0; i--) {
        if (str.regionMatches(true, i, searchStr, 0, length))
            return true;
    }
    return false;
}

if (variables.get("PA_TASK_ITERATION_SIGNAL") == null) {
	variables.put("PA_TASK_ITERATION_SIGNAL", 0)
}

if (variables.get("PA_TASK_ITERATION_SIGNAL") == 0) {
    List <JobVariable> signalVariables = new java.util.ArrayList<JobVariable>()
    signalVariables.add(new JobVariable("N_SPLITS", "5", "PA:Integer", "Number of splits you want to perform on the data.", "", false, false))
	signalVariables.add(new JobVariable("SCORING", "neg_mean_squared_error", "PA:List(explained_variance,neg_mean_absolute_error,neg_mean_squared_error,neg_mean_squared_log_error,neg_median_absolute_error,r2)", "Function used to evaluate the quality of a given pipeline for the regression problem.", "", false, false))
    signalVariables.add(new JobVariable("SCALER_NAME", "MinMaxScaler", "PA:List(MinMaxScaler,StandardScaler,RobustScaler,Normalizer)", "Scaler type to be used.", "", false, false))
    // Read the variable SIGNALS
    signals = variables.get("SIGNALS")

    // Split the value of the variable SIGNALS and transform it into a list
    Set signalsSet = new HashSet<>(Splitter.on(',').trimResults().omitEmptyStrings().splitToList(signals))

    // Send a ready notification for each signal in the set with updated variables
    println("Ready for signals "+ signalsSet)
    signalsSet.each{ signal ->
        if(signal.equals("Terminate_Job")) {
            signalapi.readyForSignal(signal);
        } else {
            signalapi.readyForSignal(signal, signalVariables)
        }
    }

    // Add the signals set as a variable to be used by next tasks
    variables.put("SIGNALS_SET", signalsSet)
}
variables.put("PA_TASK_ITERATION_SIGNAL", variables.get("PA_TASK_ITERATION_SIGNAL")+1)

//Read the variable SIGNALS_SET
Set signalsSet = variables.get("SIGNALS_SET")

// Check whether one signal among those specified as input is received
println("Checking whether one signal in the set "+ signalsSet +" is received")
receivedSignals = signalapi.checkForSignals(signalsSet)

// If a signal is received, remove ready signals and break the loop
// If a signal is received, remove ready signals and break the loop, else sleep 10 seconds then restart
if (receivedSignals != null && !receivedSignals.isEmpty()) {
    // remove ready signals
    signalapi.removeManySignals(new HashSet<>(signalsSet.collect { signal -> "ready_"+signal }))
    
    // Print the received signal
    println("Received signals: " + receivedSignals.toString())
    terminate = false
    for (String s : Arrays.asList(receivedSignals.keySet())) {
    	if (containsIgnoreCase(s, "Terminate_Job")) {
            println("Terminate_Job")
            result = "Terminate_Job"
            terminate = true
        }
        if (containsIgnoreCase(s, "New_ML_pipeline_run") && !terminate) {
            println("New_ML_pipeline_run")
            updatedVariables = receivedSignals.get("New_ML_pipeline_run")
    		variables.put("N_SPLITS", updatedVariables.get("N_SPLITS"))
            variables.put("SCORING", updatedVariables.get("SCORING"))
            variables.put("SCALER_NAME", updatedVariables.get("SCALER_NAME"))
            result = "New_ML_pipeline_run"
        }
    }
} else {
    result = null
}

variables.put("RECEIVED_SIGNAL", result)
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <loop target="Wait_for_Signal">
          <script>
            <code language="groovy">
              <![CDATA[
if (result!=null){
    loop = false
} else {
    loop = "* * * * *"
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            1344.0712585449219
        </positionTop>
        <positionLeft>
            670.0000915527344
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2388px;
            height:3142px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-187.07464599609375px;left:-536.9965515136719px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_235" style="top: 448.073px; left: 542.005px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Load data from external sources and detect its features type if requested."><img src="/automation-dashboard/styles/patterns/img/wf-icons/import_data.png" width="20px">&nbsp;<span class="name">Import_Train_Data</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_238" style="top: 576.068px; left: 542.005px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Replace all NaN elements of the data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Fill_NaNs</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_241" style="top: 832.075px; left: 542.005px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Scale the specified columns from the data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Scale_Train_Data</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_244" style="top: 960.07px; left: 606.007px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Train a classification/clustering/anomaly detection model."><img src="/automation-dashboard/styles/patterns/img/wf-icons/train.png" width="20px">&nbsp;<span class="name">Train_Model</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_247" style="top: 448.073px; left: 675.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Support Vector Regression are supervised learning models with associated learning algorithms that analyze data used for regression."><img src="/automation-dashboard/styles/patterns/img/wf-icons/ml_regresssion.png" width="20px">&nbsp;<span class="name">Support_Vector_Regression</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_250" style="top: 704.072px; left: 542.005px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Remove the specified columns from your data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Drop_Columns</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_253" style="top: 448.073px; left: 803.003px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Load data from external sources and detect its features type if requested."><img src="/automation-dashboard/styles/patterns/img/wf-icons/import_data.png" width="20px">&nbsp;<span class="name">Import_Test_Data</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_256" style="top: 1088.07px; left: 670.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Generate predictions using a trained model."><img src="/automation-dashboard/styles/patterns/img/wf-icons/predict.png" width="20px">&nbsp;<span class="name">Predict_Model</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_259" style="top: 960.07px; left: 734.001px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Scale the specified columns from the data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Scale_Test_Data</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_262" style="top: 576.068px; left: 803.003px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Remove the specified columns from your data."><img src="/automation-dashboard/styles/patterns/img/wf-icons/data-processing.png" width="20px">&nbsp;<span class="name">Drop_Columns2</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_265" style="top: 192.075px; left: 675.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start the Visdom server as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Start_Visdom_Service</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon" class="glyphicon glyphicon-arrow-right"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_268" style="top: 1216.07px; left: 670.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Plot the different results obtained by a predictive model using Visdom"><img src="/automation-dashboard/styles/patterns/img/wf-icons/visdom.png" width="20px">&nbsp;<span class="name">Visdom_Visualize_Results</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_271" style="top: 320.07px; left: 675.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png" width="20px">&nbsp;<span class="name">Start</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_274" style="top: 1472.07px; left: 670.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_loop.png" width="20px">&nbsp;<span class="name">Loop</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_277" style="top: 1344.07px; left: 670.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png" width="20px">&nbsp;<span class="name">Wait_for_Signal</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><svg style="position:absolute;left:592.5px;top:359.5px" width="143" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 132 50 122 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M14.863103999999998,60.999424000000005 L35.851621418405045,58.08701321556247 L27.316040793493393,54.60220857317104 L29.45440599157608,45.63407642206908 L14.863103999999998,60.999424000000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M14.863103999999998,60.999424000000005 L35.851621418405045,58.08701321556247 L27.316040793493393,54.60220857317104 L29.45440599157608,45.63407642206908 L14.863103999999998,60.999424000000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:581.5px;top:487.5px" width="32" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 21 50 11 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.8930240000000003,66.303232 L8.476136957551759,47.824040972349884 L0.539947820500627,52.5162581434697 L-5.310836898978539,45.39106915184926 L-1.8930240000000003,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.8930240000000003,66.303232 L8.476136957551759,47.824040972349884 L0.539947820500627,52.5162581434697 L-5.310836898978539,45.39106915184926 L-1.8930240000000003,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:584.5px;top:743.5px" width="27.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 6.5 88 C 16.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M8.787796875,66.78168750000002 L13.502214816791486,46.123171980483264 L7.218760132881903,52.86988949607962 L-0.4095831871289066,47.692208722601364 L8.787796875,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M8.787796875,66.78168750000002 L13.502214816791486,46.123171980483264 L7.218760132881903,52.86988949607962 L-0.4095831871289066,47.692208722601364 L8.787796875,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:591px;top:871.5px" width="75.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 54.5 88 C 64.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M51.71200000000001,64.44800000000001 L44.65517122691919,44.46798078911288 L42.95040993512347,53.52854307508581 L33.735714302004986,53.22957085398942 L51.71200000000001,64.44800000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M51.71200000000001,64.44800000000001 L44.65517122691919,44.46798078911288 L42.95040993512347,53.52854307508581 L33.735714302004986,53.22957085398942 L51.71200000000001,64.44800000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:645.5px;top:487.5px" width="122.5" height="473" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 472 C -10 422 111.5 50 101.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M16.755424000000005,368.40268799999996 L28.259473585648756,350.607833599614 L20.045486700988484,354.79476797438383 L14.651553560032632,347.3177708986255 L16.755424000000005,368.40268799999996" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M16.755424000000005,368.40268799999996 L28.259473585648756,350.607833599614 L20.045486700988484,354.79476797438383 L14.651553560032632,347.3177708986255 L16.755424000000005,368.40268799999996" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:714.5px;top:359.5px" width="53.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 32.5 88 C 42.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M32.424265625,65.8307285 L30.274053995957026,44.75048680427156 L26.48234370448013,53.154231985172046 L17.597557481129066,50.69240872479142 L32.424265625,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M32.424265625,65.8307285 L30.274053995957026,44.75048680427156 L26.48234370448013,53.154231985172046 L17.597557481129066,50.69240872479142 L32.424265625,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:581.5px;top:615.5px" width="24" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 3 88 C 13 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.571843749999999,66.78168750000002 L11.211873765446198,46.35645649947359 L4.630943452167807,52.813340903872785 L-2.7564728306810355,47.297356797305774 L5.571843749999999,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.571843749999999,66.78168750000002 L11.211873765446198,46.35645649947359 L4.630943452167807,52.813340903872785 L-2.7564728306810355,47.297356797305774 L5.571843749999999,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:714.5px;top:359.5px" width="158" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 137 88 C 147 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M119.18932075000001,60.59109050000001 L103.86471661471113,45.957003302751005 L106.43869780298155,54.80994749338217 L98.08357360809329,58.70762624976946 L119.18932075000001,60.59109050000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M119.18932075000001,60.59109050000001 L103.86471661471113,45.957003302751005 L106.43869780298155,54.80994749338217 L98.08357360809329,58.70762624976946 L119.18932075000001,60.59109050000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:645.5px;top:999.5px" width="86.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 65.5 88 C 75.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M60.934201,63.554236 L51.876302711302046,44.39818007526428 L51.10456848004559,53.58536823466904 L41.907434945971076,54.227812595218694 L60.934201,63.554236" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M60.934201,63.554236 L51.876302711302046,44.39818007526428 L51.10456848004559,53.58536823466904 L41.907434945971076,54.227812595218694 L60.934201,63.554236" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:711px;top:999.5px" width="91" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 80 50 70 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.077799999999998,63.554236 L24.38921760733801,54.8324729904362 L15.216918385562119,53.900310458358604 L14.735292065696612,44.69335460487409 L5.077799999999998,63.554236" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.077799999999998,63.554236 L24.38921760733801,54.8324729904362 L15.216918385562119,53.900310458358604 L14.735292065696612,44.69335460487409 L5.077799999999998,63.554236" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:591px;top:871.5px" width="211" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 190 88 C 200 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M162.029305,59.788559500000005 L145.13707248653196,46.99588656933639 L148.70300867265905,55.4978921631048 L140.84640514963678,60.32218289667733 L162.029305,59.788559500000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M162.029305,59.788559500000005 L145.13707248653196,46.99588656933639 L148.70300867265905,55.4978921631048 L140.84640514963678,60.32218289667733 L162.029305,59.788559500000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:781px;top:615.5px" width="88.5" height="345" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 344 C -10 294 77.5 50 67.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.385065000000003,268.709204 L20.695617638307528,250.790738691384 L12.527481789491627,255.06643240764674 L7.052846045954266,247.6483219018924 L9.385065000000003,268.709204" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.385065000000003,268.709204 L20.695617638307528,250.790738691384 L12.527481789491627,255.06643240764674 L7.052846045954266,247.6483219018924 L9.385065000000003,268.709204" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:848.5px;top:487.5px" width="24" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 13 50 3 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.5718437499999998,66.78168750000002 L5.7564728306810355,47.297356797305774 L-1.630943452167807,52.813340903872785 L-8.211873765446198,46.35645649947359 L-2.5718437499999998,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.5718437499999998,66.78168750000002 L5.7564728306810355,47.297356797305774 L-1.630943452167807,52.813340903872785 L-8.211873765446198,46.35645649947359 L-2.5718437499999998,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:711px;top:1127.5px" width="48" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 27 88 C 37 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M27.41933025,65.8307285 L26.57638206964205,44.65788177677379 L22.27241606430647,52.81115575873439 L13.556809328376433,49.804795962467324 L27.41933025,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M27.41933025,65.8307285 L26.57638206964205,44.65788177677379 L22.27241606430647,52.81115575873439 L13.556809328376433,49.804795962467324 L27.41933025,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:714.5px;top:231.5px" width="40" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 29 50 19 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.2087360000000011,66.303232 L10.953172104058499,48.95134474620434 L2.5882558001434424,52.82796379229283 L-2.5220961036486633,45.1543529460609 L-1.2087360000000011,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.2087360000000011,66.303232 L10.953172104058499,48.95134474620434 L2.5882558001434424,52.82796379229283 L-2.5220961036486633,45.1543529460609 L-1.2087360000000011,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:709.5px;top:1383.5px" width="26" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 15 50 5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.40953125,66.78168750000002 L6.41844882380946,47.518594087559144 L-1.1087489198275216,52.84224829573104 L-7.520990380459522,46.21781175738666 L-2.40953125,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.40953125,66.78168750000002 L6.41844882380946,47.518594087559144 L-1.1087489198275216,52.84224829573104 L-7.520990380459522,46.21781175738666 L-2.40953125,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:769.5px;top:309.5px" width="56" height="1213" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 5 0 C 55 -50 10 1162 0 1112 " transform="translate(0.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M27.70207,213.34476400000008 L34.923325495348614,233.26594541754903 L27.85724986587487,227.34390394534054 L20.92418555000815,233.4211252834239 L27.70207,213.34476400000008" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M27.70207,213.34476400000008 L34.923325495348614,233.26594541754903 L27.85724986587487,227.34390394534054 L20.92418555000815,233.4211252834239 L27.70207,213.34476400000008" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_327" style="position: absolute; transform: translate(-50%, -50%); left: 794.5px; top: 915.5px;">loop</div><svg style="position:absolute;left:714.5px;top:1255.5px" width="44.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 33.5 50 23.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-0.7343713750000016,65.8307285 L12.45901450614404,49.2495774847288 L3.874081291422615,52.610964356062254 L-0.7607496377937126,44.641124818306196 L-0.7343713750000016,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-0.7343713750000016,65.8307285 L12.45901450614404,49.2495774847288 L3.874081291422615,52.610964356062254 L-0.7607496377937126,44.641124818306196 L-0.7343713750000016,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:769.5px;top:1333.5px" width="61" height="61" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C 50 -10 -10 50 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719789 L22.73126656242089,15.79496617605654 L21.37378389148668,6.675906970298892 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719789 L22.73126656242089,15.79496617605654 L21.37378389148668,6.675906970298892 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_336" style="position: absolute; transform: translate(-50%, -50%); left: 794.5px; top: 1363.5px;">loop</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 593px; top: 478px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 593px; top: 438px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 582px; top: 606px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 582px; top: 566px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 591.5px; top: 862px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 591.5px; top: 822px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 646px; top: 990px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 646px; top: 950px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 747.5px; top: 478px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 747.5px; top: 438px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 585px; top: 734px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 585px; top: 694px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 852px; top: 478px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 852px; top: 438px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 711.5px; top: 1118px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 711.5px; top: 1078px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 781.5px; top: 990px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 781.5px; top: 950px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 849px; top: 606px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 849px; top: 566px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 734px; top: 222px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 738.5px; top: 1246px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 738.5px; top: 1206px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 715px; top: 350px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 715px; top: 310px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 765px; top: 350px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 710px; top: 1502px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 710px; top: 1462px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 760px; top: 1462px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 715px; top: 1374px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 715px; top: 1334px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 770px; top: 1334px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 770px; top: 1374px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>