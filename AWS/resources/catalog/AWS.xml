<?xml version="1.0" encoding="UTF-8"?>
<job xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:proactive:jobdescriptor:3.8"
	xsi:schemaLocation="urn:proactive:jobdescriptor:3.8 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.8/schedulerjob.xsd"
	name="AWS" projectName="Cloud Automation - Deployment" priority="normal"
	onTaskError="continueJobExecution" maxNumberOfExecution="2">
	<variables>
		<variable name="infrastructure_name" value="PrivateCloud" />
		<variable name="instance_name" value="instance_name" />
		<variable name="instance_image" value="eu-west-1/ami-31328842" />
	</variables>
	<description>
    <![CDATA[ Deployment of an AWS VM. ]]>
  </description>
	<genericInformation>
		<info name="group" value="public-objects"/>
		<info name="pca.service.id" value="AWS"/>
		<info name="pca.states" value="(VOID,RUNNING)"/>
		<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/amazon.png"/>
	</genericInformation>
	<taskFlow>

		<task name="cloud_file">
			<scriptExecutable>
				<script>
					<code language="bash">
						<![CDATA[
touch results_$variables_PA_JOB_ID.txt
]]>
					</code>
				</script>
			</scriptExecutable>
			<controlFlow block="none"></controlFlow>
		</task>

		<task name="aws_vm_creation">
			<depends>
				<task ref="cloud_file" />
			</depends>
			<scriptExecutable>
				<script>
					<code language="bash">
            <![CDATA[
curl -i  -o results_$variables_PA_JOB_ID.txt -H "Accept: application/json" -H "Content-Type: application/json" -X POST -d '{"tag":"'$variables_instance_name'","image":"'$variables_instance_image'","number":"1","hardware":{"minRam":"512", "minCores":"1"}}'  http://localhost:8080/connector-iaas/infrastructures/$variables_infrastructure_name/instances
]]>
					</code>
				</script>
			</scriptExecutable>
			<controlFlow block="none"></controlFlow>
			<post>
				<script>
					<code language="bash">
            <![CDATA[
echo $result
]]>
					</code>
				</script>
			</post>
			<outputFiles>
				<files includes="results_$PA_JOB_ID.txt" accessMode="transferToUserSpace" />
			</outputFiles>
		</task>

		<task name="results">
			<depends>
				<task ref="aws_vm_creation" />
			</depends>
			<inputFiles>
				<files includes="results_$PA_JOB_ID.txt" accessMode="transferFromUserSpace" />
			</inputFiles>
			<scriptExecutable>
				<script>
					<code language="bash">
            <![CDATA[
tail -n 1 results_$variables_PA_JOB_ID.txt > results2_$variables_PA_JOB_ID.txt
]]>
					</code>
				</script>
			</scriptExecutable>
			<controlFlow block="none"></controlFlow>
			<outputFiles>
				<files includes="results2_$PA_JOB_ID.txt" accessMode="transferToUserSpace" />
			</outputFiles>
		</task>

		<task name="ruby_read_file">
			<depends>
				<task ref="results" />
			</depends>
			<inputFiles>
				<files includes="results2_$PA_JOB_ID.txt" accessMode="transferFromUserSpace" />
			</inputFiles>
			<scriptExecutable>
				<script>
					<code language="ruby">
            <![CDATA[
text = File.read("results2_" + $variables['PA_JOB_ID']+".txt");
result = text;
]]>
					</code>
				</script>
			</scriptExecutable>
			<controlFlow block="none"></controlFlow>
		</task>

		<task name="get_aws_instance_infos">
			<depends>
				<task ref="ruby_read_file" />
			</depends>
			<scriptExecutable>
				<script>
					<code language="javascript">
            <![CDATA[
var res = results[0].value();
res = res.substr(0, res.length-1);
res = res .substr(1);

var obj = JSON.parse(res);

variables.put("aws_instance_id", obj.id)
variables.put("aws_instance_status", obj.status)
]]>
					</code>
				</script>
			</scriptExecutable>
			<controlFlow block="none"></controlFlow>
		</task>

		<task name="update_service_instance">
			<depends>
				<task ref="get_aws_instance_infos" />
			</depends>
			<inputFiles>
				<files  includes="cloud-automation-service-client-8.2.0-SNAPSHOT.jar" accessMode="transferFromGlobalSpace"/>
			</inputFiles>
			<forkEnvironment >
				<additionalClasspath>
					<pathElement path="cloud-automation-service-client-8.2.0-SNAPSHOT.jar"/>
				</additionalClasspath>
			</forkEnvironment>
			<scriptExecutable>
				<script>
					<code language="groovy">
						<![CDATA[
org.ow2.proactive.pca.service.client.ApiClient
org.ow2.proactive.pca.service.client.api.ServiceInstanceRestApi
org.ow2.proactive.pca.service.client.model.ServiceInstanceData

// Retrieve variables
def scheduler_rest_url = variables.get("PA_SCHEDULER_REST_URL")
def service_instance_id = variables.get("PCA_INSTANCE_ID") as Long
def aws_instance_id = variables.get("aws_instance_id")
def aws_instance_status = variables.get("aws_instance_status")

// Define other variables
def pca_url = scheduler_rest_url.replaceAll("/rest\\z", "/cloud-automation-service")

// Connect to APIs
def api_client = new ApiClient()
api_client.setBasePath(pca_url)
def service_instance_rest_api = new ServiceInstanceRestApi(api_client)

// Update the related service infos
def service_instance_data = service_instance_rest_api.getServiceInstanceUsingGET(service_instance_id)
service_instance_data.setInstanceStatus("RUNNING")
service_instance_data.getVariables().put("aws_instance_id", aws_instance_id)
service_instance_data.getVariables().put("aws_instance_status", aws_instance_status)
service_instance_rest_api.updateServiceInstanceUsingPUT(service_instance_id, service_instance_data)
]]>
					</code>
				</script>
			</scriptExecutable>
		</task>

	</taskFlow>
</job>
