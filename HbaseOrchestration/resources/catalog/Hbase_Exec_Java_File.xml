<?xml version="1.0" encoding="UTF-8"?>
<job
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:proactive:jobdescriptor:3.13" xsi:schemaLocation="urn:proactive:jobdescriptor:3.13 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.13/schedulerjob.xsd"  name="Hbase_Exec_Java_File" projectName="11. HBase Workflows" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
    <variables>
        <variable name="hbase_service_instance_id" value="xx" model="PA:NOT_EMPTY_STRING" description="The instance ID of Hbase running service"  advanced="false" hidden="false"/>
        <variable name="Hbase_java_file" value="HelloHBase.java" model="PA:GLOBAL_FILE" description="Upload a java file to execute HBase commands"  advanced="false" hidden="false"/>
        <variable name="main" value="HelloHBase"  description="Write the main class in the java file here to be executed after compiling the file, for this example the java file is HelloHBase.java and the main class is HelloHBase"  advanced="false" hidden="false"/>
    </variables>
    <description>
        <![CDATA[ A workflow that executes Java file to run Hbase commands. Note that in order to connect with the running cluster, you need to add the corresponding configuration to the java file manually :
Configuration conf = HBaseConfiguration.create();
        conf.set("hbase.zookeeper.quorum","ZOOKEEPER-replacement");
        Connection connection = ConnectionFactory.createConnection(conf);
        Admin admin = connection.getAdmin();
And change the hbase.zookeeper.quorum value with the current running zookeeper. ]]>
    </description>
    <genericInformation>
        <info name="group" value="public-objects"/>
        <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/hbase.png"/>
        <info name="bucketName" value="big-data"/>
    </genericInformation>
    <taskFlow>
        <task name="retrieve_service_variables"




              fork="true"
              runAsMe="true" >
            <genericInformation>
                <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/hbase.png"/>
            </genericInformation>
            <scriptExecutable>
                <script>
                    <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Retrieve_variables_from_service_instance_id/raw" language="groovy">
                        <arguments>
                            <argument value="$hbase_service_instance_id"/>
                            <argument value="zookeeper_endpoint"/>
                            <argument value="zookeeper_endpoint"/>
                            <argument value="hdfs_path"/>
                            <argument value="hdfs_path"/>
                            <argument value="targeted_network_name"/>
                            <argument value="targeted_network_name"/>
                        </arguments>
                    </file>
                </script>
            </scriptExecutable>
            <metadata>
                <positionTop>
                    204.36111450195312
                </positionTop>
                <positionLeft>
                    427.1111145019531
                </positionLeft>
            </metadata>
        </task>
        <task name="Compile_and_exec_java_file"




              fork="true"
              runAsMe="true" >
            <genericInformation>
                <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/hbase.png"/>
            </genericInformation>
            <depends>
                <task ref="retrieve_service_variables"/>
            </depends>
            <inputFiles>
                <files  includes="$Hbase_java_file" accessMode="transferFromGlobalSpace"/>
            </inputFiles>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
println variables.get("hdfs_path")
println variables.get("zookeeper_endpoint")
println variables.get("Hbase_java_file")
println variables.get("targeted_network_name")
println variables.get("main")

def main = variables.get("main")
def hdfs_path = variables.get("hdfs_path")
def zookeeper_endpoint = variables.get("zookeeper_endpoint")
def targeted_network_name = variables.get("targeted_network_name")
def hbase_docker_image_name = "activeeon/hadoop-hbase:latest"

def Hbase_java_file = variables.get("Hbase_java_file")
def java_file_path = new File(localspace, Hbase_java_file)

def hbase_example_container_name = "HBase_Java_API"

println java_file_path


def cmd = ["docker", "run", "--rm","-v", localspace + ":" + localspace, "-dit", "--name", hbase_example_container_name, "--net", targeted_network_name, hbase_docker_image_name]
println cmd
def hbase_container_id = new StringBuilder()
cmd.execute().waitForProcessOutput(hbase_container_id, System.err)


// hbase configuration
def hbase_site_config_command = "sed -i 's/HDFS-replacement/" + hdfs_path + "/g' \$HBASE_HOME/conf/hbase-site.xml"
def hbase_site_config_command2 = "sed -i 's/ZOOKEEPER-replacement/" + zookeeper_endpoint + "/g' \$HBASE_HOME/conf/hbase-site.xml"
def hbase_hdfs_site_config = "sed -i 's/HDFS-replacement/" + hdfs_path + "/g' \$HBASE_HOME/conf/hdfs-site.xml"
def hbase_core_site_config = "sed -i 's/HDFS-replacement/" + hdfs_path + "/g' \$HBASE_HOME/conf/core-site.xml"
def hdfs_core_site_config = "cp -fr \$HBASE_HOME/conf/core-site.xml \$HADOOP_HOME/etc/hadoop/"
def hdfs_hdfs_site_config = "cp -fr \$HBASE_HOME/conf/hdfs-site.xml \$HADOOP_HOME/etc/hadoop/"


def command_in_container =   hbase_site_config_command + ";" + hbase_site_config_command2 + ";"  + hbase_hdfs_site_config + ";" + hbase_core_site_config + ";" + hdfs_core_site_config + ";" + hdfs_hdfs_site_config
cmd = ["docker", "exec", hbase_example_container_name, "/bin/sh", "-c", command_in_container]
println cmd
cmd.execute().waitForProcessOutput(System.out, System.err)


def hbase_Java_file_config_command = "sed -i 's/ZOOKEEPER-replacement/" + zookeeper_endpoint + "/g' " +  java_file_path
cmd = ["docker", "exec", hbase_example_container_name, "/bin/sh", "-c", hbase_Java_file_config_command]
println cmd
cmd.execute().waitForProcessOutput(System.out, System.err)

// Compile java file
println "compiling java file"
def Java_compile_exec_command = "javac -Xlint " + java_file_path
println Java_compile_exec_command
cmd = ["docker", "exec", hbase_example_container_name, "/bin/sh", "-c", Java_compile_exec_command]
println cmd
def docker_exec_output = new StringBuilder()
cmd.execute().waitForProcessOutput(docker_exec_output, System.err)
def java_compile_ok = !docker_exec_output.toString().contains("error")
sleep(1)

//Run java file
if(java_compile_ok) {
def Java_exec_command = "cd " + localspace +  ";" + " java " + main
println Java_exec_command
cmd = ["docker", "exec", hbase_example_container_name, "/bin/sh", "-c", Java_exec_command]
println cmd
    // 10 attempts to try to compile the java file (usually it compiles from the first or second attempt)
    for(int i = 1; i<10; i++){
        println "attempt  " + i + "  ..."
        docker_exec_output = new StringBuilder()
		cmd.execute().waitForProcessOutput(docker_exec_output, System.err)
        println(docker_exec_output)
        if (docker_exec_output.toString().contains("connecting")) break
        sleep(3)
    }
println "done ... please check Tables details in the Master web UI "
} else println "Faild to compile Java file"

cmd = ["docker", "rm", "-f", hbase_example_container_name]
println cmd
cmd.execute().waitForProcessOutput(System.out, System.err)
]]>
                    </code>
                </script>
            </scriptExecutable>
            <metadata>
                <positionTop>
                    319.375
                </positionTop>
                <positionLeft>
                    427.1111145019531
                </positionLeft>
            </metadata>
        </task>
    </taskFlow>
    <metadata>
        <visualization>
            <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2508px;
            height:2764px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-199.36111450195312px;left:-422.1111145019531px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_841" style="top: 204.375px; left: 427.125px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/hbase.png" width="20px">&nbsp;<span class="name">retrieve_service_variables</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_ active-task" id="jsPlumb_1_844" style="top: 319.389px; left: 427.125px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/hbase.png" width="20px">&nbsp;<span class="name">Compile_and_exec_java_file</span></a></div><svg style="position:absolute;left:492.5px;top:243.5px" width="27.5" height="76" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 6.5 75 C 16.5 25 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M8.795808000000001,56.14560000000001 L13.39106583477264,35.460252397603746 L7.146605614034534,42.24307751341054 L-0.511456651816828,37.10945478356921 L8.795808000000001,56.14560000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M8.795808000000001,56.14560000000001 L13.39106583477264,35.460252397603746 L7.146605614034534,42.24307751341054 L-0.511456651816828,37.10945478356921 L8.795808000000001,56.14560000000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 493px; top: 234px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 499.5px; top: 349px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 499.5px; top: 309px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
        </visualization>
    </metadata>
</job>