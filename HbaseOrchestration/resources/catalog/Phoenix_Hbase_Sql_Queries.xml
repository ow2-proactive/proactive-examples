<?xml version="1.0" encoding="UTF-8"?>

<job
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Phoenix_Hbase_Sql_Queries" projectName="12. HBase Phoenix Workflows"  priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
    <variables>
        <variable name="HBASE_SERVICE_INSTANCE_ID" value="xx" model="PA:NOT_EMPTY_STRING" description="The instance ID of Hbase running service"  advanced="false" hidden="false"/>
    </variables>
    <description>
        <![CDATA[ A workflow that executes SQL queries using Phoenix on HBase platform.
You can change the SQL queries using the workflow studio.
Default query :
create table test (mykey integer not null primary key, mycolumn varchar);
upsert into test values (1,'Hello');
upsert into test values (2,'World!');
select * from test; ]]>
    </description>
    <genericInformation>
        <info name="bucketName" value="big-data"/>
        <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/phoenix.png"/>
        <info name="Documentation" value="https://phoenix.apache.org/language/index.html"/>
        <info name="group" value="public-objects"/>
    </genericInformation>
    <taskFlow>
        <task name="retrieve_service_variables"




              fork="true"
              runAsMe="true" >
            <genericInformation>
                <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/phoenix.png"/>
            </genericInformation>
            <scriptExecutable>
                <script>
                    <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Retrieve_variables_from_service_instance_id/raw" language="groovy">
                        <arguments>
                            <argument value="$HBASE_SERVICE_INSTANCE_ID"/>
                            <argument value="zookeeper_endpoint"/>
                            <argument value="zookeeper_endpoint"/>
                            <argument value="hdfs_path"/>
                            <argument value="hdfs_path"/>
                            <argument value="targeted_network_name"/>
                            <argument value="targeted_network_name"/>
                        </arguments>
                    </file>
                </script>
            </scriptExecutable>
            <metadata>
                <positionTop>
                    489.11111068725586
                </positionTop>
                <positionLeft>
                    533.2638854980469
                </positionLeft>
            </metadata>
        </task>
        <task name="Run_Phoenix_commands"



              preciousResult="true"
              fork="true"
              runAsMe="true" >
            <genericInformation>
                <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/phoenix.png"/>
                <info name="PRE_SCRIPT_AS_FILE" value="commands.sql"/>
            </genericInformation>
            <depends>
                <task ref="retrieve_service_variables"/>
            </depends>
            <pre>
                <script>
                    <code language="python">
                        <![CDATA[
#create table test (mykey integer not null primary key, mycolumn varchar);
#upsert into test values (1,'Hello');
#upsert into test values (2,'World!');
select * from test;
]]>
                    </code>
                </script>
            </pre>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
println variables.get("hdfs_path")
println variables.get("zookeeper_endpoint")
println variables.get("targeted_network_name")


def hdfs_path = variables.get("hdfs_path")
def zookeeper_endpoint = variables.get("zookeeper_endpoint")
def targeted_network_name = variables.get("targeted_network_name")
def hbase_docker_image_name = "activeeon/hadoop-hbase-phoenix:latest"

def hbaseLocalFile = genericInformation.get("PRE_SCRIPT_AS_FILE")
def pre_script_path = new File(localspace, hbaseLocalFile )

println " Prescript generic information : "
println hbaseLocalFile +  " #### \n" + pre_script_path


def phoenix_example_container_name = "run_phoenix_hbase_sql_querries"


// hbase configuration
def hbase_site_config_command = "sed -i 's/HDFS-replacement/" + hdfs_path + "/g' \$HBASE_HOME/conf/hbase-site.xml"
def hbase_site_config_command2 = "sed -i 's/ZOOKEEPER-replacement/" + zookeeper_endpoint + "/g' \$HBASE_HOME/conf/hbase-site.xml"
def hbase_hdfs_site_config = "sed -i 's/HDFS-replacement/" + hdfs_path + "/g' \$HBASE_HOME/conf/hdfs-site.xml"
def hbase_core_site_config = "sed -i 's/HDFS-replacement/" + hdfs_path + "/g' \$HBASE_HOME/conf/core-site.xml"
def hdfs_core_site_config = "cp -fr \$HBASE_HOME/conf/core-site.xml \$HADOOP_HOME/etc/hadoop/"
def hdfs_hdfs_site_config = "cp -fr \$HBASE_HOME/conf/hdfs-site.xml \$HADOOP_HOME/etc/hadoop/"
def phoenix_command = " \$PHOENIX_HOME/bin/sqlline.py "+ zookeeper_endpoint + " " + pre_script_path + " --color=false --verbose=false"

def command_in_container = hbase_site_config_command + ";" + hbase_site_config_command2 + ";"  + hbase_hdfs_site_config + ";" + hbase_core_site_config + ";" + hdfs_core_site_config + ";" + hdfs_hdfs_site_config + ";" + phoenix_command

cmd = ["docker","run", "--rm", "-v", localspace + ":" + localspace, "--net", targeted_network_name,  hbase_docker_image_name,  "/bin/sh", "-c", command_in_container]
println cmd
result = cmd.execute().text
def pattern = ~/^[^+]*\+/
result = result.replaceAll(pattern, "")
println result


]]>
                    </code>
                </script>
            </scriptExecutable>
            <metadata>
                <positionTop>
                    616.1111106872559
                </positionTop>
                <positionLeft>
                    533.2500305175781
                </positionLeft>
            </metadata>
        </task>
    </taskFlow>
    <metadata>
        <visualization>
            <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2509px;
            height:2764px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-484.11111068725586px;left:-528.2500305175781px"><div class="task ui-draggable" id="jsPlumb_1_145" style="top: 489.124px; left: 533.264px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/phoenix.png" width="20px">&nbsp;<span class="name">retrieve_service_variables</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_ active-task" id="jsPlumb_1_148" style="top: 616.124px; left: 533.25px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title=""><img src="/automation-dashboard/styles/patterns/img/wf-icons/phoenix.png" width="20px">&nbsp;<span class="name">Run_Phoenix_commands</span></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected endpointDrag" style="position: absolute; height: 20px; width: 20px; left: 598.5px; top: 519px; visibility: visible;" dragid="jsPlumb_1_161" elid="jsPlumb_1_145"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 598.5px; top: 646px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 598.5px; top: 606px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><svg style="position:absolute;left:593.5235032915331px;top:528.5px" width="15.47649670846693" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 87 C -10 37 -10 50 0 0 " transform="translate(14.97649670846693,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(14.97649670846693,0.5)"></path></svg></div></div>
    </body>
</html>
 ]]>
        </visualization>
    </metadata>
</job>