<?xml version="1.0" encoding="UTF-8"?>
<job
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:proactive:jobdescriptor:3.13" xsi:schemaLocation="urn:proactive:jobdescriptor:3.13 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.13/schedulerjob.xsd"  name="Connect_To_Hive_Cluster_With_Beeline" projectName="13. Hive_connectors" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="cluster_name" value=""  description="The service instance id of the targeted Hive."  advanced="false" hidden="false"/>
    <variable name="cluster_password" value=""    advanced="false" hidden="false"/>
    <variable name="cluster_ip" value=""    advanced="false" hidden="false"/>
    <variable name="cluster_port" value=""    advanced="false" hidden="false"/>
    <variable name="cluster_docker_network" value=""    advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ A workflow that allows you to connect to an external Hive cluster and execute SQL commands. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="big-data"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/hive.png"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Execute_querries"




          fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/hive.png"/>
      </genericInformation>
      <depends>
        <task ref="Here_write_your_sql_querries"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
// Retrieve variables
def cluster_name = variables.get("cluster_name").trim()
def cluster_password = variables.get("cluster_password").trim()
def cluster_ip = variables.get("cluster_ip").trim()
def cluster_port = variables.get("cluster_port").trim()
def cluster_docker_network = variables.get("cluster_docker_network")
def commands_init = variables.get("commands_init")

println "\n =================================== \n \n"
println """ cluster name = $cluster_name
			cluster password = $cluster_password
            cluster_ip = $cluster_ip
            cluster_port = $cluster_port
"""
println "\n =================================== \n \n"
println variables.get("commands_init")

command_to_file = "echo " + '\"'  + commands_init + '\"' +" > commands.sql"

println "=================================== \n \n"
println command_to_file
println "=================================== \n \n"

def container_name = "hive_beeline_connector"
if (cluster_docker_network?.trim()) {
    println "\n ============================ \n"
    println "With docker network : " + cluster_docker_network
    println "\n ============================ \n"
    cmd = ["docker", "run", "--rm", "-dit", "--name", container_name, "--net", cluster_docker_network,   "activeeon/hive:latest"]
println cmd
def hive_container_id = new StringBuilder()
cmd.execute().waitForProcessOutput(hive_container_id, System.err)
} else {
    println "\n ============================= \n"
    println "Without docker network "
    println "\n ============================= \n"
    cmd = ["docker", "run", "--rm", "-dit", "--name", container_name,  "activeeon/hive:latest"]
println cmd
def hive_container_id = new StringBuilder()
cmd.execute().waitForProcessOutput(hive_container_id, System.err)
}


cmd = ["docker", "exec", container_name, "/bin/sh", "-c", command_to_file]
println "=================================== \n \n"
println cmd
println "=================================== \n \n"
cmd.execute().waitForProcessOutput(System.out, System.err)

println "=================================== \n \n"

// Submit the hive job
def hive_beeline_command = "beeline -n " +  cluster_name + " -p " + cluster_password + " -u jdbc:hive2://" + cluster_ip + ":"  + cluster_port + " -f commands.sql"
println hive_beeline_command
cmd = ["docker", "exec", container_name, "/bin/sh", "-c", hive_beeline_command]
println cmd
cmd.execute().waitForProcessOutput(System.out, System.err)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
          414.8055648803711
        </positionTop>
        <positionLeft>
          518.5000305175781
        </positionLeft>
      </metadata>
    </task>
    <task name="Here_write_your_sql_querries"




          fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/hive.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
//Here write your sql querries
//use '\"'   for double quotes (")

def commands_init = """show tables;"""








variables.put("commands_init",commands_init)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
          286.8055648803711
        </positionTop>
        <positionLeft>
          518.4722595214844
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2509px;
            height:2764px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-281.8055648803711px;left:-513.4722595214844px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_166" style="top: 414.819px; left: 518.514px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/hive.png" width="20px">&nbsp;<span class="name">Execute_querries</span></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_169" style="top: 286.819px; left: 518.486px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/hive.png" width="20px">&nbsp;<span class="name">Here_write_your_sql_querries</span></a></div><svg style="position:absolute;left:565px;top:326.5px" width="47.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 36.5 50 26.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-0.46433612500000154,65.8307285 L13.305241650258269,49.72486845183389 L4.607172766652641,52.7815983542053 L0.2561115044635631,44.65335956018125 L-0.46433612500000154,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-0.46433612500000154,65.8307285 L13.305241650258269,49.72486845183389 L4.607172766652641,52.7815983542053 L0.2561115044635631,44.65335956018125 L-0.46433612500000154,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 565.5px; top: 445px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 565.5px; top: 405px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 592px; top: 317px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>