<?xml version="1.0" encoding="UTF-8"?>

<job
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:proactive:jobdescriptor:3.13" xsi:schemaLocation="urn:proactive:jobdescriptor:3.13 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.13/schedulerjob.xsd"  name="Hive_Hbase_Connector" projectName="13. Hive_connectors" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="hive_service_instance_id" value="xx" model="PA:NOT_EMPTY_STRING" description="The service instance id of the targeted Hive."   />
    <variable name="HBASE_SERVICE_INSTANCE_ID" value="xx" model="PA:NOT_EMPTY_STRING"   advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ Use Hive connector to load data from HBase ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="big-data"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/hive.png"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="retrieve_service_variables"




          fork="true"
          runAsMe="true" >
      <pre>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Retrieve_variables_from_service_instance_id/raw" language="groovy">
            <arguments>
              <argument value="$HBASE_SERVICE_INSTANCE_ID"/>
              <argument value="zookeeper_endpoint"/>
              <argument value="zookeeper_endpoint"/>
            </arguments>
          </file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Retrieve_variables_from_service_instance_id/raw" language="groovy">
            <arguments>
              <argument value="$hive_service_instance_id"/>
              <argument value="targeted_network_name"/>
              <argument value="targeted_network_name"/>
              <argument value="hive_container_ip"/>
              <argument value="hive_container_ip"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
          317.27777099609375
        </positionTop>
        <positionLeft>
          604.4861755371094
        </positionLeft>
      </metadata>
    </task>
    <task name="Execute_commands"




          fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/hive.png"/>
      </genericInformation>
      <depends>
        <task ref="Map_Hbase_External_Table"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
// Retrieve variables
def targeted_network_name = variables.get("targeted_network_name")
def hive_container_ip = variables.get("hive_container_ip").trim()
def zookeeper_endpoint = variables.get("zookeeper_endpoint")
def commands_init = variables.get("commands_init")


println variables.get("zookeeper_endpoint")
println variables.get("targeted_network_name")
println variables.get("commands_init")

def set_zookeeper = "set hbase.zookeeper.quorum=" + zookeeper_endpoint + ";"
command_to_file = "echo " + '\"' + set_zookeeper + "\n"  + commands_init + '\"' +" > commands.sql"

println "=================================== \n \n"
println command_to_file
println "=================================== \n \n"

def container_name = "hive_hbase_connector"

cmd = ["docker", "run", "--rm", "-dit", "--name", container_name, "--net", targeted_network_name,  "activeeon/hive:latest"]
println cmd
def hive_hbase_container_id = new StringBuilder()
cmd.execute().waitForProcessOutput(hive_hbase_container_id, System.err)

cmd = ["docker", "exec", container_name, "/bin/sh", "-c", command_to_file]
println "=================================== \n \n"
println cmd
println "=================================== \n \n"
cmd.execute().waitForProcessOutput(System.out, System.err)

println "=================================== \n \n"

// Submit the hive job
def hive_beeline_command = "beeline -n root -p 123456 -u jdbc:hive2://" + hive_container_ip + ":"  + 10000 + " -f commands.sql"
println hive_beeline_command
cmd = ["docker", "exec", container_name, "/bin/sh", "-c", hive_beeline_command]
println cmd
cmd.execute().waitForProcessOutput(System.out, System.err)


]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
          572.263916015625
        </positionTop>
        <positionLeft>
          604.4861755371094
        </positionLeft>
      </metadata>
    </task>
    <task name="Map_Hbase_External_Table"




          fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/hive.png"/>
      </genericInformation>
      <depends>
        <task ref="retrieve_service_variables"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
//this example is to map table user on Hbase to the external hive table hbase_table_1. To create the table user in hbase you need to execute Hbase_Exec_Java_File from workflow example bigdata bucket
//You can change the parameter of the external table to map another table.
//use '\"'   for double quotes (")

def commands_init = """CREATE external TABLE hbase_table_1(key string, value1 string, value2 string, value3 string, value4 string, value5 string, value6 string)
STORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('\"'hbase.columns.mapping'\"' = '\"':key,PersonalData:address,PersonalData:name,PersonalData:tel,ProfessionalData:company,ProfessionalData:profession,ProfessionalData:salary'\"')
TBLPROPERTIES('\"'hbase.table.name'\"' = '\"'user'\"');"""








variables.put("commands_init",commands_init)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
          432.2638854980469
        </positionTop>
        <positionLeft>
          351.4861145019531
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2509px;
            height:2764px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-312.27777099609375px;left:-346.4861145019531px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_16" style="top: 317.281px; left: 604.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title=""><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">retrieve_service_variables</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_19" style="top: 572.265px; left: 604.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title=""><img src="/automation-dashboard/styles/patterns/img/wf-icons/hive.png" width="20px">&nbsp;<span class="name">Execute_commands</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_ active-task" id="jsPlumb_1_22" style="top: 432.265px; left: 351.5px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title=""><img src="/automation-dashboard/styles/patterns/img/wf-icons/hive.png" width="20px">&nbsp;<span class="name">Map_Hbase_External_Table</span></a></div><svg style="position:absolute;left:420.5px;top:471.5px" width="244" height="101" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 223 100 C 233 50 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M187.06569524999998,68.9227875 L170.16781850899181,56.137570972866186 L173.73750659266946,64.638001961072 L165.88303297006385,69.4657596301967 L187.06569524999998,68.9227875" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M187.06569524999998,68.9227875 L170.16781850899181,56.137570972866186 L173.73750659266946,64.638001961072 L165.88303297006385,69.4657596301967 L187.06569524999998,68.9227875" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:420.5px;top:356.5px" width="269.5" height="76" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 75 C -10 25 258.5 50 248.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M40.35742637500001,48.25918125 L61.3146289808617,51.38898299082385 L54.10962526195326,45.636772858143054 L58.69222058900476,37.636784103870596 L40.35742637500001,48.25918125" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M40.35742637500001,48.25918125 L61.3146289808617,51.38898299082385 L54.10962526195326,45.636772858143054 L58.69222058900476,37.636784103870596 L40.35742637500001,48.25918125" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 669.5px; top: 347px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 644px; top: 602px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 644px; top: 562px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 421px; top: 462px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 421px; top: 422px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>