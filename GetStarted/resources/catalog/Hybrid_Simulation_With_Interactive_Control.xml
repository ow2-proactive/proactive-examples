<?xml version="1.0" encoding="UTF-8"?>
<job
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Hybrid_Simulation_With_Interactive_Control" projectName="2. Advanced Workflows" tags="Interactive Control,Signal,Simulation,Endpoint" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
    <variables>
        <variable name="numberOfLights" value="1" model="PA:LIST(1,2,3,4,5)" description="Number of lights used to calculate the coverage (must be between 1 and 5)"  advanced="false" hidden="false"/>
        <variable name="minRequiredAngle" value="120" model="PA:INTEGER" description="Minimum total angle to cover"  advanced="false" hidden="false"/>
        <variable name="coveredAnglePerLight" value="90" model="PA:INTEGER" description="Angle covered by each light"  advanced="false" hidden="false"/>
        <variable name="currentCoverage" value="0" model="PA:INTEGER" description="Angle already covered before the calculation starts"  advanced="true" hidden="false"/>
        <variable name="TARGET_INFRASTRUCTURE" value="" model="PA:MODEL_FROM_URL(${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/nodesources?infrastructure=%5E(%3F!(Default)).*$)" description="The node source where the job will be executed" group="Job Execution Parameters" advanced="false" hidden="false"/>
        <variable name="TOKEN" value="" model="PA:MODEL_FROM_URL(${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/tokens?nodeSource=${TARGET_INFRASTRUCTURE})" description="(Optional) Please select a value in case the node source access is restricted with tokens" group="Job Execution Parameters" advanced="false" hidden="false"/>
        <variable name="NB_NODES" value="4" model="PA:INTEGER" description="Number of nodes to use in the calculation step" group="Job Execution Parameters" advanced="false" hidden="false"/>
    </variables>
    <description>
        <![CDATA[ This workflow calculates the maximum angular coverage according to the number of lights and their covering angle defined in the Job Variables. For this simulation, the user can:
1- Selects the target infrastructure along with the reservation token if defined as well as the number of nodes to be acquired to execute the job.
2- Controls a Job execution with Signals having Variables. When sending the signal, the user can provide specific new values to interactively control the Job execution.
It is possible to rerun the simulation by sending "Rerun_simulation" signal with updated number of nodes and on a different target infrastructure. ]]>
    </description>
    <genericInformation>
        <info name="bucketName" value="basic-examples"/>
        <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/hybrid_simulation.png"/>
        <info name="Documentation" value="user/ProActiveUserGuide.html#_task_signal_api"/>
        <info name="group" value="public-objects"/>
    </genericInformation>
    <taskFlow>
        <task name="DisplayVariables"




              fork="true">
            <description>
                <![CDATA[ The simplest task, ran by a groovy engine. ]]>
            </description>
            <genericInformation>
                <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/variables_propagation.png"/>
                <info name="NODE_SOURCE" value="${NODE_SOURCE_INTERNAL}"/>
                <info name="NODE_ACCESS_TOKEN" value="${TOKEN_INTERNAL}"/>
            </genericInformation>
            <depends>
                <task ref="Start"/>
            </depends>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
println "This workflow will calculate the maximum angular coverage according to the number of lights and their"
println "covering angle defined in the Job Variables."

Integer coveredAnglePerLight=variables.get("coveredAnglePerLight").toInteger()
Integer numberOfLights=variables.get("numberOfLights").toInteger()
Integer minRequiredAngle=variables.get("minRequiredAngle").toInteger()

println " "
println "You chose to use: "+numberOfLights+ " light(s)."
println "Each light might cover: "+coveredAnglePerLight+" degrees."
println "You want to cover an angle of: "+minRequiredAngle+" degrees."
]]>
                    </code>
                </script>
            </scriptExecutable>
            <controlFlow block="start"></controlFlow>
            <metadata>
                <positionTop>
                    337.171875
                </positionTop>
                <positionLeft>
                    387.52734375
                </positionLeft>
            </metadata>
        </task>
        <task name="Condition"




              fork="true">
            <genericInformation>
                <info name="NODE_SOURCE" value="${NODE_SOURCE_INTERNAL}"/>
                <info name="NODE_ACCESS_TOKEN" value="${TOKEN_INTERNAL}"/>
            </genericInformation>
            <depends>
                <task ref="Process"/>
            </depends>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
print ""
]]>
                    </code>
                </script>
            </scriptExecutable>
            <controlFlow >
                <if target="If"
                    else="Else"
                    continuation="Continuation">
                    <script>
                        <code language="groovy">
                            <![CDATA[
Integer currentCoverage=variables.get("currentCoverage").toInteger()
Integer coveredAnglePerLight=variables.get("coveredAnglePerLight").toInteger()
Integer numberOfLights=variables.get("numberOfLights").toInteger()
Integer minRequiredAngle=variables.get("minRequiredAngle").toInteger()
Integer i=(numberOfLights * coveredAnglePerLight)

println " "


if(currentCoverage <= minRequiredAngle)
{
    branch = "if";
} else {
    branch = "else";
}
]]>
                        </code>
                    </script>
                </if>
            </controlFlow>
            <metadata>
                <positionTop>
                    722.16796875
                </positionTop>
                <positionLeft>
                    387.52734375
                </positionLeft>
            </metadata>
        </task>
        <task name="If"




              fork="true">
            <genericInformation>
                <info name="NODE_SOURCE" value="${NODE_SOURCE_INTERNAL}"/>
                <info name="NODE_ACCESS_TOKEN" value="${TOKEN_INTERNAL}"/>
            </genericInformation>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
println "You haven't enough lights!"
variables.put("LIGHT", false)

Integer numberOfLights=variables.get("numberOfLights").toInteger()
numberOfLights++
variables.put("numberOfLights", numberOfLights)

println " "
println "Adding one more light..."
println "We will now try with "+numberOfLights+" lights!"
]]>
                    </code>
                </script>
            </scriptExecutable>
            <controlFlow block="none"></controlFlow>
            <metadata>
                <positionTop>
                    849.1640625
                </positionTop>
                <positionLeft>
                    260.53125
                </positionLeft>
            </metadata>
        </task>
        <task name="Else"




              fork="true">
            <genericInformation>
                <info name="NODE_SOURCE" value="${NODE_SOURCE_INTERNAL}"/>
                <info name="NODE_ACCESS_TOKEN" value="${TOKEN_INTERNAL}"/>
            </genericInformation>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
println "You have enough lights!"
]]>
                    </code>
                </script>
            </scriptExecutable>
            <controlFlow block="none"></controlFlow>
            <metadata>
                <positionTop>
                    849.1640625
                </positionTop>
                <positionLeft>
                    387.52734375
                </positionLeft>
            </metadata>
        </task>
        <task name="Continuation"




              fork="true">
            <genericInformation>
                <info name="NODE_SOURCE" value="${NODE_SOURCE_INTERNAL}"/>
                <info name="NODE_ACCESS_TOKEN" value="${TOKEN_INTERNAL}"/>
            </genericInformation>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
Integer currentCoverage=variables.get("currentCoverage").toInteger()
Integer coveredAnglePerLight=variables.get("coveredAnglePerLight").toInteger()
Integer numberOfLights=variables.get("numberOfLights").toInteger()
Integer minRequiredAngle=variables.get("minRequiredAngle").toInteger()

println " "
println "With "+numberOfLights+ " lights, you can cover "+currentCoverage+" degrees maximum."
println "You wanted to cover "+minRequiredAngle+" degrees."
]]>
                    </code>
                </script>
            </scriptExecutable>
            <controlFlow block="none"></controlFlow>
            <metadata>
                <positionTop>
                    850.171875
                </positionTop>
                <positionLeft>
                    516.52734375
                </positionLeft>
            </metadata>
        </task>
        <task name="VariableOverridingForCoverage"




              fork="true">
            <description>
                <![CDATA[ The simplest task, ran by a groovy engine. ]]>
            </description>
            <genericInformation>
                <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/variables_propagation.png"/>
                <info name="NODE_SOURCE" value="${NODE_SOURCE_INTERNAL}"/>
                <info name="NODE_ACCESS_TOKEN" value="${TOKEN_INTERNAL}"/>
            </genericInformation>
            <depends>
                <task ref="DisplayVariables"/>
            </depends>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
Integer currentCoverage=variables.get("currentCoverage").toInteger()
Integer coveredAnglePerLight=variables.get("coveredAnglePerLight").toInteger()
Integer numberOfLights=variables.get("numberOfLights").toInteger()
Integer minRequiredAngle=variables.get("minRequiredAngle").toInteger()

println "Calculation in progress..."

Integer i=(numberOfLights * coveredAnglePerLight)
variables.put("currentCoverage", i)
]]>
                    </code>
                </script>
            </scriptExecutable>
            <controlFlow >
                <replicate>
                    <script>
                        <code language="groovy">
                            <![CDATA[
runs = Integer.parseInt(variables.get("NB_NODES"))
]]>
                        </code>
                    </script>
                </replicate>
            </controlFlow>
            <metadata>
                <positionTop>
                    465.1640625
                </positionTop>
                <positionLeft>
                    386.53125
                </positionLeft>
            </metadata>
        </task>
        <task name="Start"




              fork="true">
            <genericInformation>
                <info name="NODE_SOURCE" value="${NODE_SOURCE_INTERNAL}"/>
                <info name="NODE_ACCESS_TOKEN" value="${TOKEN_INTERNAL}"/>
            </genericInformation>
            <depends>
                <task ref="Init"/>
            </depends>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
println "######################"
println "### NEW SIMULATION ###"
println "######################"
println "Starting the simulation!"
variables.put("LIGHT", true)
variables.put("input_numberOfLights", variables.get("numberOfLights"))
]]>
                    </code>
                </script>
            </scriptExecutable>
            <controlFlow block="start"></controlFlow>
            <metadata>
                <positionTop>
                    203.15625
                </positionTop>
                <positionLeft>
                    683.53125
                </positionLeft>
            </metadata>
        </task>
        <task name="Loop"




              fork="true">
            <genericInformation>
                <info name="NODE_SOURCE" value="${NODE_SOURCE_INTERNAL}"/>
                <info name="NODE_ACCESS_TOKEN" value="${TOKEN_INTERNAL}"/>
            </genericInformation>
            <depends>
                <task ref="Continuation"/>
            </depends>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
println "Loop in progress..."
]]>
                    </code>
                </script>
            </scriptExecutable>
            <controlFlow  block="end">
                <loop target="DisplayVariables">
                    <script>
                        <code language="groovy">
                            <![CDATA[
Integer currentCoverage=variables.get("currentCoverage").toInteger()
Integer minRequiredAngle=variables.get("minRequiredAngle").toInteger()

if(currentCoverage < minRequiredAngle) {
    loop = true;
} else {
    loop = false;
}
]]>
                        </code>
                    </script>
                </loop>
            </controlFlow>
            <metadata>
                <positionTop>
                    977.16796875
                </positionTop>
                <positionLeft>
                    515.53125
                </positionLeft>
            </metadata>
        </task>
        <task name="Print_Result"




              fork="true">
            <description>
                <![CDATA[ The simplest task, ran by a groovy engine. ]]>
            </description>
            <genericInformation>
                <info name="NODE_SOURCE" value="${NODE_SOURCE_INTERNAL}"/>
                <info name="NODE_ACCESS_TOKEN" value="${TOKEN_INTERNAL}"/>
            </genericInformation>
            <depends>
                <task ref="Loop"/>
            </depends>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
Integer coveredAnglePerLight=variables.get("coveredAnglePerLight").toInteger()
Integer numberOfLights=variables.get("numberOfLights").toInteger()
Integer minRequiredAngle=variables.get("minRequiredAngle").toInteger()
variables.put("waitForSignals", true)

println " "
println "With " + numberOfLights + " lights, you have enough lights to cover " + minRequiredAngle + " degrees."


css_style = """table {
  border: 1px solid #999999;
  text-align: center;
  border-collapse: collapse;
  width: 100%;
}
.container {
	width: max-content;
    margin: auto;
}
.container p {
    background: #262822;
    color: #fff;
    padding: 10px;
}
td {
  border: 2px solid #999999;
  border-bottom: 1px solid #999999;
}
th {
  font-size: 17px;
  font-weight: bold;
  color: #FFFFFF;
  text-align: center;
  background: #0B6FA4;
  border-left: 2px solid #999999;
}"""

result = String.format("""
 <!DOCTYPE html>
            <html>
            <style>%s</style>
              <head>
                <meta charset="UTF-8">
                  <title>Hybrid Simulation With Interactive Control</title>
              </head>
              <body>
              <h1 style="text-align:center">Hybrid Simulation With Interactive Control</h1>
              <div class="container">
              <h2>Simulation Inputs:</h2>
              <table border="1" cellpadding="1" cellspacing="1" style="width:500px;height:150px">
              <thead>
              <tr>
              <th scope="col">Variable</th>
              <th scope="col">Value</th>
              </tr>
              </thead>
              <tbody>
    	""", css_style)

result = result + "<tr><td>numberOfLights</td><td>" + variables.get("input_numberOfLights") + "</td></tr>" +
    "<tr><td>minRequiredAngle</td><td>" + variables.get("minRequiredAngle") + "</td></tr>" +
    "<tr><td>coveredAnglePerLight</td><td>" + variables.get("coveredAnglePerLight") + "</td></tr>" +
    "<tr><td>targetInfrastructure</td><td>" + variables.get("NODE_SOURCE_INTERNAL") + "</td></tr>" +
    "<tr><td>nbNodes</td><td>" + variables.get("NB_NODES") + "</td></tr>" +
    "</tbody></table><h2>Simulation Results:</h2>"
if (variables.get("LIGHT").toBoolean()) {
    result = result + "<p><code>You have enough lights! <br>With " + variables.get("input_numberOfLights") + " lights, you can cover " + variables.get("input_numberOfLights").toInteger()*variables.get("coveredAnglePerLight").toInteger()   + " degrees maximum. <br>You wanted to cover " + variables.get("minRequiredAngle") + " degrees.</code></p></div>" +
    "</body></html>"
} else {
    result = result + "<p><code>Unfortunately you don't have enough lights! <br>With " + variables.get("input_numberOfLights") + " lights, you can only cover " + variables.get("input_numberOfLights").toInteger()*variables.get("coveredAnglePerLight").toInteger()   + " degrees maximum. <br>However, you wanted to cover " + variables.get("minRequiredAngle") + " degrees.</code></p></div>" +
    "</body></html>"
}

result = result.getBytes()
resultMetadata.put("file.extension", ".html")
resultMetadata.put("file.name", "result.html")
resultMetadata.put("content.type", "text/html")
]]>
                    </code>
                </script>
            </scriptExecutable>
            <controlFlow block="none"></controlFlow>
            <post>
                <script>
                    <code language="groovy">
                        <![CDATA[
import java.nio.charset.StandardCharsets

schedulerapi.connect()
url = variables.get("PA_SCHEDULER_REST_PUBLIC_URL") + "/scheduler/jobs/" + variables.get("PA_JOB_ID") + "/tasks/" + URLEncoder.encode(variables.get("PA_TASK_NAME"), StandardCharsets.UTF_8.toString()) + "/result/download?destination=browser&sessionToken=\$PROACTIVE_SESSION_ID"
// Add external endpoint
schedulerapi.addExternalEndpointUrl(variables.get("PA_JOB_ID"), "Simulation Results", url, "/automation-dashboard/styles/patterns/window-view.png")
]]>
                    </code>
                </script>
            </post>
            <metadata>
                <positionTop>
                    1105.171875
                </positionTop>
                <positionLeft>
                    515.53125
                </positionLeft>
            </metadata>
        </task>
        <task name="Rerun_Simulation"




              fork="true">
            <description>
                <![CDATA[ A template task that waits for a Signal with variables, allowing to rerun the loop with new variable values. ]]>
            </description>
            <genericInformation>
                <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-send.png"/>
                <info name="NODE_SOURCE" value="${NODE_SOURCE_INTERNAL}"/>
                <info name="NODE_ACCESS_TOKEN" value="${TOKEN_INTERNAL}"/>
            </genericInformation>
            <depends>
                <task ref="Wait_For_Signals_With_Variables"/>
            </depends>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
schedulerapi.connect()
// Remove external endpoint
schedulerapi.removeExternalEndpointUrl(variables.get("PA_JOB_ID"), "Simulation Results")
]]>
                    </code>
                </script>
            </scriptExecutable>
            <controlFlow  block="end">
                <loop target="Start">
                    <script>
                        <code language="groovy">
                            <![CDATA[
loop = ! variables.get("Terminate_Job")
]]>
                        </code>
                    </script>
                </loop>
            </controlFlow>
            <metadata>
                <positionTop>
                    1443.1640625
                </positionTop>
                <positionLeft>
                    823.5234375
                </positionLeft>
            </metadata>
        </task>
        <task name="Wait_For_Signals_With_Variables"




              fork="true">
            <description>
                <![CDATA[ A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job. ]]>
            </description>
            <variables>
                <variable name="SIGNALS" value="stop, kill" inherited="false"  description="List of comma-separated signals expected by this task."  advanced="false" hidden="false"/>
            </variables>
            <genericInformation>
                <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png"/>
                <info name="TASK.DOCUMENTATION" value="user/ProActiveUserGuide.html#_task_signal_api"/>
                <info name="NODE_SOURCE" value="${NODE_SOURCE_INTERNAL}"/>
                <info name="NODE_ACCESS_TOKEN" value="${TOKEN_INTERNAL}"/>
            </genericInformation>
            <depends>
                <task ref="Print_Result"/>
            </depends>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
import org.ow2.proactive.scheduler.common.job.JobVariable
import java.util.*;

if (variables.get("waitForSignals")){

    List <JobVariable> signalVariables = new java.util.ArrayList<JobVariable>()
    signalVariables.add(new JobVariable("numberOfLights", "" + variables.get("numberOfLights"), "PA:LIST(1,2,3,4,5)", "number of lights used to calculate the coverage (must be between 1 and 5)", "", false, false))
    signalVariables.add(new JobVariable("minRequiredAngle", "" + variables.get("minRequiredAngle"), "PA:INTEGER", "minimum total angle to cover", "", false, false))
    signalVariables.add(new JobVariable("coveredAnglePerLight", "" + variables.get("coveredAnglePerLight"), "PA:INTEGER", "Angle covered by each light", "", false, false))
    signalVariables.add(new JobVariable("NB_NODES", "" + variables.get("NB_NODES"), "PA:INTEGER", "Number of nodes to use in the calculation step", "Job Execution Parameters", false, false))
    signalVariables.add(new JobVariable("TARGET_INFRASTRUCTURE", "" + variables.get("TARGET_INFRASTRUCTURE"), "PA:MODEL_FROM_URL(\${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/nodesources?infrastructure=%5E(%3F!(Default)).*\$)", "The node source where the job will be executed", "Job Execution Parameters", false, false))
    signalVariables.add(new JobVariable("TOKEN", "" + variables.get("TOKEN"), "PA:MODEL_FROM_URL(\${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/tokens?nodeSource=\${TARGET_INFRASTRUCTURE})", "(Optional) Please select a value in case the node source access is restricted with tokens", "Job Execution Parameters", false, false))

    signalapi.readyForSignal("Terminate_Job")
    signalapi.readyForSignal("Rerun_Simulation", signalVariables)

    variables.put("Terminate_Job", false)
}
variables.put("waitForSignals", false)

signals = new HashSet()
signals.add("Terminate_Job")
signals.add("Rerun_Simulation")
now = new Date()
receivedSignal = signalapi.waitForAny(signals)
receivedSignalName = receivedSignal.getName()
println "Received signal = " + receivedSignalName + " At: " + now.format("yyyy/MM/dd hh:mm:ss")

if (receivedSignalName == "Terminate_Job") {
    variables.put("Terminate_Job", true)
    result = receivedSignalName
} else {
    if (receivedSignalName == "Rerun_Simulation") {
        println "### Input parameters of the new simulation ###"
        updatedVariables = receivedSignal.getUpdatedVariables()
        variables.put("numberOfLights", updatedVariables.get("numberOfLights"))
        println "numberOfLights : " + updatedVariables.get("numberOfLights")
        variables.put("minRequiredAngle",  updatedVariables.get("minRequiredAngle"))
        println "minRequiredAngle : " + updatedVariables.get("minRequiredAngle")
        variables.put("coveredAnglePerLight",  updatedVariables.get("coveredAnglePerLight"))
        println "coveredAnglePerLight : " + updatedVariables.get("coveredAnglePerLight")
        variables.put("NB_NODES", updatedVariables.get("NB_NODES"))
        println "NB_NODES : " + updatedVariables.get("NB_NODES")
        variables.put("NODE_SOURCE_INTERNAL", updatedVariables.get("TARGET_INFRASTRUCTURE"))
        variables.put("TOKEN_INTERNAL", updatedVariables.get("TOKEN"))
        variables.put("TARGET_INFRASTRUCTURE", updatedVariables.get("TARGET_INFRASTRUCTURE"))
        println "TARGET_INFRASTRUCTURE : " + updatedVariables.get("TARGET_INFRASTRUCTURE")
        variables.put("TOKEN", updatedVariables.get("TOKEN"))
        println "TOKEN : " + updatedVariables.get("TOKEN")
	println "###############"
        signalapi.removeSignal("ready_Terminate_Job")
        variables.put("PA_TASK_ITERATION", 0)
        schedulerapi.connect()
        // Remove external endpoint
        schedulerapi.removeExternalEndpointUrl(variables.get("PA_JOB_ID"), "Simulation Results")
        result = receivedSignalName
    }
    else{
        result = null
    }
}
]]>
                    </code>
                </script>
            </scriptExecutable>
            <metadata>
                <positionTop>
                    1235.16796875
                </positionTop>
                <positionLeft>
                    515.53125
                </positionLeft>
            </metadata>
        </task>
        <task name="Process"




              fork="true">
            <description>
                <![CDATA[ The simplest task, ran by a Groovy engine. ]]>
            </description>
            <genericInformation>
                <info name="NODE_SOURCE" value="${NODE_SOURCE_INTERNAL}"/>
                <info name="NODE_ACCESS_TOKEN" value="${TOKEN_INTERNAL}"/>
            </genericInformation>
            <depends>
                <task ref="VariableOverridingForCoverage"/>
            </depends>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
println "Processing on the following compute node: " + variables.get("PA_NODE_NAME")
Thread.sleep(20000)
println "Processing completed"
]]>
                    </code>
                </script>
            </scriptExecutable>
            <metadata>
                <positionTop>
                    593.16796875
                </positionTop>
                <positionLeft>
                    387.52734375
                </positionLeft>
            </metadata>
        </task>
        <task name="Init"




              fork="true">
            <description>
                <![CDATA[ The simplest task, ran by a Groovy engine. ]]>
            </description>
            <genericInformation>
                <info name="NODE_SOURCE" value="${TARGET_INFRASTRUCTURE}"/>
                <info name="NODE_ACCESS_TOKEN" value="${TOKEN}"/>
            </genericInformation>
            <scriptExecutable>
                <script>
                    <code language="groovy">
                        <![CDATA[
variables.put("NODE_SOURCE_INTERNAL", variables.get("TARGET_INFRASTRUCTURE"))
variables.put("TOKEN_INTERNAL", variables.get("TOKEN"))
]]>
                    </code>
                </script>
            </scriptExecutable>
            <metadata>
                <positionTop>
                    46.875
                </positionTop>
                <positionLeft>
                    727.5234375
                </positionLeft>
            </metadata>
        </task>
    </taskFlow>
    <metadata>
        <visualization>
            <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:3227px;
            height:4524px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-41.875px;left:-255.53125px"><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1" style="top: 337.183px; left: 387.527px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a groovy engine."><img src="/automation-dashboard/styles/patterns/img/wf-icons/variables_propagation.png" width="20px">&nbsp;<span class="name">DisplayVariables</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_4" style="top: 722.179px; left: 387.527px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Condition</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_7" style="top: 849.175px; left: 260.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title=""><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">If</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_10" style="top: 849.175px; left: 387.527px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Else</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_13" style="top: 850.183px; left: 516.527px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title=""><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Continuation</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_16" style="top: 465.175px; left: 386.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a groovy engine."><img src="/automation-dashboard/styles/patterns/img/wf-icons/variables_propagation.png" width="20px">&nbsp;<span class="name">VariableOverridingForCoverage</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_19" style="top: 203.168px; left: 683.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title=""><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Start</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_22" style="top: 977.179px; left: 515.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Loop</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_ active-task" id="jsPlumb_1_25" style="top: 1105.18px; left: 515.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a groovy engine."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Print_Result</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_28" style="top: 1443.18px; left: 823.523px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A template task that waits for a Signal with variables, allowing to rerun the loop with new variable values."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-send.png" width="20px">&nbsp;<span class="name">Rerun_Simulation</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_31" style="top: 1235.18px; left: 515.531px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png" width="20px">&nbsp;<span class="name">Wait_For_Signals_With_Variables</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_34" style="top: 593.179px; left: 387.527px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Groovy engine."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Process</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_37" style="top: 46.8863px; left: 727.523px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Groovy engine."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Init</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><svg style="position:absolute;left:434.5px;top:242.5px" width="310" height="95" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 94 C -10 44 299 50 289 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M49.107546,63.542704 L70.16006345970045,65.94925934094015 L62.76132620518544,60.448469666843195 L67.06582912654365,52.295479135754704 L49.107546,63.542704" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M49.107546,63.542704 L70.16006345970045,65.94925934094015 L62.76132620518544,60.448469666843195 L67.06582912654365,52.295479135754704 L49.107546,63.542704" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:423.02524878489737px;top:632.5px" width="15.474751215102632" height="90" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 89 C -10 39 -10 50 0 0 " transform="translate(14.974751215102632,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,67.21769599999999 L-1.2118624308468808,46.27356892016489 L-6.993714776082329,53.45480721574424 L-14.974751215102632,48.83928369624722 L-4.427999999999998,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(14.974751215102632,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,67.21769599999999 L-1.2118624308468808,46.27356892016489 L-6.993714776082329,53.45480721574424 L-14.974751215102632,48.83928369624722 L-4.427999999999998,67.21769599999999" class="" stroke="#666" fill="#666" transform="translate(14.974751215102632,0.5)"></path></svg><svg style="position:absolute;left:250.5px;top:761.5px" width="148" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 87 C -10 37 137 50 127 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M15.588863999999997,60.14457600000001 L36.63561361892134,57.68808857311703 L28.17762597207894,54.01896811095429 L30.510005729875626,45.099326601038086 L15.588863999999997,60.14457600000001" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M15.588863999999997,60.14457600000001 L36.63561361892134,57.68808857311703 L28.17762597207894,54.01896811095429 L30.510005729875626,45.099326601038086 L15.588863999999997,60.14457600000001" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_51" style="position: absolute; transform: translate(-50%, -50%); left: 324px; top: 805px;">if</div><svg style="position:absolute;left:373.0235032915331px;top:761.5px" width="15.47649670846693" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 87 C -10 37 -10 50 0 0 " transform="translate(14.97649670846693,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#00f" fill="#00f" transform="translate(14.97649670846693,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.331249999999999,65.86284375000001 L-1.2275778407318203,44.90175553569722 L-6.970801092219563,52.1139248822649 L-14.97649670846693,47.54130662791678 L-4.331249999999999,65.86284375000001" class="" stroke="#00f" fill="#00f" transform="translate(14.97649670846693,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_55" style="position: absolute; transform: translate(-50%, -50%); left: 380px; top: 805px;">else</div><svg style="position:absolute;left:377.5px;top:761.5px" width="150" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 129 88 C 139 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M113.120832,60.999424000000005 L98.20213187221535,45.95175353254099 L100.53306420135704,54.87177340230373 L92.07448127451906,58.53952133118395 L113.120832,60.999424000000005" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M113.120832,60.999424000000005 L98.20213187221535,45.95175353254099 L100.53306420135704,54.87177340230373 L92.07448127451906,58.53952133118395 L113.120832,60.999424000000005" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_59" style="position: absolute; transform: translate(-50%, -50%); left: 452px; top: 805.5px;">continuation</div><svg style="position:absolute;left:434.5px;top:376.5px" width="53" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 32 88 C 42 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M31.969271499999998,65.8307285 L29.934733623259604,44.739008427229535 L26.096979356082812,53.12182669943169 L17.22583182269129,50.61130057114673 L31.969271499999998,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M31.969271499999998,65.8307285 L29.934733623259604,44.739008427229535 L26.096979356082812,53.12182669943169 L17.22583182269129,50.61130057114673 L31.969271499999998,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:457.5px;top:494.5px" width="84" height="99" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 88 C -10 88 73 -10 63 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#e5db3d" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.255718749999998,75.46271875 L22.43946300802005,63.06437477691379 L13.265542097178542,63.980439797327165 L10.957184055347218,55.05455142973525 L5.255718749999998,75.46271875" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.255718749999998,75.46271875 L22.43946300802005,63.06437477691379 L13.265542097178542,63.980439797327165 L10.957184055347218,55.05455142973525 L5.255718749999998,75.46271875" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_68" style="position: absolute; transform: translate(-50%, -50%); left: 499px; top: 544.75px;">replicate</div><svg style="position:absolute;left:723.5px;top:86.5px" width="65" height="117" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 116 C -10 66 54 50 44 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M2.3410704999999976,87.7891405 L17.446098815063497,72.92851737709125 L8.51716596140918,75.22507090247066 L4.882029217534164,66.75242191568208 L2.3410704999999976,87.7891405" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M2.3410704999999976,87.7891405 L17.446098815063497,72.92851737709125 L8.51716596140918,75.22507090247066 L4.882029217534164,66.75242191568208 L2.3410704999999976,87.7891405" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:555.5px;top:889.5px" width="22" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 87 C -10 37 11 50 1 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.73415625,65.86284375000001 L5.097889276531336,46.17378427854886 L-2.1474192361323814,51.875144165130536 L-8.88981030833814,45.58704726468124 L-2.73415625,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.73415625,65.86284375000001 L5.097889276531336,46.17378427854886 L-2.1474192361323814,51.875144165130536 L-8.88981030833814,45.58704726468124 L-2.73415625,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:501.5px;top:326.5px" width="115" height="701" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 0 C 50 -50 104 650 114 600 " transform="translate(0.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M42.61354200000001,105.28256250000004 L53.13915430886739,123.67308955942441 L45.1634301840964,119.04839230603082 L39.373324502836596,126.22297774352079 L42.61354200000001,105.28256250000004" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M42.61354200000001,105.28256250000004 L53.13915430886739,123.67308955942441 L45.1634301840964,119.04839230603082 L39.373324502836596,126.22297774352079 L42.61354200000001,105.28256250000004" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_80" style="position: absolute; transform: translate(-50%, -50%); left: 573.5px; top: 676.5px;">loop</div><svg style="position:absolute;left:550.9817132113825px;top:1016.5px" width="15.518286788617468" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 88 C -10 38 -10 50 0 0 " transform="translate(15.018286788617468,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path></svg><svg style="position:absolute;left:600.5px;top:1274.5px" width="293.5" height="169" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 272.5 168 C 282.5 118 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M226.351465,124.271988 L211.67010256075204,108.99266874397813 L213.86114257220586,117.94807737051264 L205.3461919312647,121.48299117177226 L226.351465,124.271988" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M226.351465,124.271988 L211.67010256075204,108.99266874397813 L213.86114257220586,117.94807737051264 L205.3461919312647,121.48299117177226 L226.351465,124.271988" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:783.5px;top:192.5px" width="160" height="1301" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 0 C 50 -50 149 1250 159 1200 " transform="translate(0.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M52.497018000000004,231.25470000000007 L62.03157816424041,250.17802324076516 L54.312588530940616,245.13647595436484 L48.14980220987564,251.99359377170575 L52.497018000000004,231.25470000000007" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M52.497018000000004,231.25470000000007 L62.03157816424041,250.17802324076516 L54.312588530940616,245.13647595436484 L48.14980220987564,251.99359377170575 L52.497018000000004,231.25470000000007" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_92" style="position: absolute; transform: translate(-50%, -50%); left: 878px; top: 842.5px;">loop</div><svg style="position:absolute;left:555.5px;top:1144.5px" width="66" height="91" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 45 90 C 55 40 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M43.40660625,66.70471500000001 L38.50473423114627,46.089874454636124 L35.85030660918774,54.91903149252958 L26.719050723675846,53.64617409544838 L43.40660625,66.70471500000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M43.40660625,66.70471500000001 L38.50473423114627,46.089874454636124 L35.85030660918774,54.91903149252958 L26.719050723675846,53.64617409544838 L43.40660625,66.70471500000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:427.5px;top:504.5px" width="60" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 88 C -10 38 49 50 39 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M0.8261579999999977,65.364084 L16.769100218015062,51.4061975757224 L7.721817134665953,53.1800828058726 L4.58509902388766,44.510538441056454 L0.8261579999999977,65.364084" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M0.8261579999999977,65.364084 L16.769100218015062,51.4061975757224 L7.721817134665953,53.1800828058726 L4.58509902388766,44.510538441056454 L0.8261579999999977,65.364084" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 435px; top: 367px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 435px; top: 327px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 492px; top: 367px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 428px; top: 752px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 428px; top: 712px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint if-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 378px; top: 752px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 301px; top: 879px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 251px; top: 839px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 428px; top: 879px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 378px; top: 839px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 557px; top: 880px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 507px; top: 840px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 467px; top: 495px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 467px; top: 455px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint replicate-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 521px; top: 495px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 724px; top: 233px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 724px; top: 193px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 774px; top: 233px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 556px; top: 1007px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 556px; top: 967px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 606px; top: 967px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 556px; top: 1135px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 556px; top: 1095px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 873.5px; top: 1473px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 873.5px; top: 1433px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 933px; top: 1433px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 601px; top: 1265px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 601px; top: 1225px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 428px; top: 623px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint replicate-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 458px; top: 583px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 428px; top: 583px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 768px; top: 77px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
        </visualization>
    </metadata>
</job>
