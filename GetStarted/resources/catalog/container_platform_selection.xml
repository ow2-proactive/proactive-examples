<?xml version="1.0" encoding="UTF-8"?>
<job
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Container_Platform_Selection" tags="Samples,Get started,Building blocks" projectName="2. Advanced Workflows" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="CONTAINER_PLATFORM" value="docker" model="PA:LIST(no-container,docker,podman,singularity)" description="Choose the container platform" group="Container Parameters" advanced="false" hidden="false"/>
    <variable name="CONTAINER_IMAGE" value="docker://python:3.7" model="PA:NOT_EMPTY_STRING" description="Enter the container image reference. It can use the singularity format (url) or a docker image name and version." group="Container Parameters" advanced="false" hidden="false"/>
    <variable name="CONTAINER_GPU_ENABLED" value="False" model="PA:Boolean" description="Set to true if the container should use GPU drivers" group="Container Parameters" advanced="false" hidden="false"/>
    <variable name="CONTAINER_ROOTLESS_ENABLED" value="False" model="PA:Boolean" description="Set to true if the container should run in rootless mode" group="Container Parameters" advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ A workflow that runs a task in various container platforms. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="basic-examples"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/container.jpg"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="python_script"




          fork="true"
    >
      <description>
        <![CDATA[ The simplest task, ran by a bash engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/container.jpg"/>
      </genericInformation>
      <forkEnvironment javaHome="/usr" >
        <envScript>
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_ai/raw" language="groovy"></file>
          </script>
        </envScript>
      </forkEnvironment>
      <pre>
        <script>
          <code language="bash">
            <![CDATA[
pip install py4j
]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
#import os
import socket
import platform
print('-------------------------------------------------------------')
print('Interpreter')
print('platform.python_version:    ', platform.python_version())
print('platform.python_compiler:   ', platform.python_compiler())
print('platform.python_build:      ', platform.python_build())
print()
print('Platform')
print('platform.platform(Normal):  ', platform.platform())
print('platform.platform(Aliased): ', platform.platform(aliased=True))
print('platform.platform(Terse):   ', platform.platform(terse=True))
print()
print('Operating System and Hardware Info')
print('platform.uname:             ', platform.uname())
print('platform.system:            ', platform.system())
print('platform.node:              ', platform.node())
print('platform.release:           ', platform.release())
print('platform.version:           ', platform.version())
print('platform.machine:           ', platform.machine())
print('platform.processor:         ', platform.processor())
print()
print('Executable Architecture')
print('platform.architecture:      ', platform.architecture())
#print()
#print('OS')
#print('os.uname:                   ', os.uname())
#print('os.getcwd:                  ', os.getcwd())
print()
print('Network')
print('socket.gethostname:         ', socket.gethostname())
print('socket.gethostbyname        ', socket.gethostbyname(socket.gethostname()))
print('-------------------------------------------------------------')
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
          548.28125
        </positionTop>
        <positionLeft>
          651
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2832px;
            height:3312px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-543.28125px;left:-646px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable active-task" id="jsPlumb_1_721" style="top: 548.281px; left: 651px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a bash engine."><img src="/automation-dashboard/styles/patterns/img/wf-icons/container.jpg" width="20px">&nbsp;<span class="name">python_script</span></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 691px; top: 578px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
