<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Docker_Swarm" projectName="6. IT" tags="Swarm,Container,Docker,VM,Big Data,Service Automation" priority="normal" onTaskError="cancelJob"  maxNumberOfExecution="1"  >
  <variables>
    <variable name="INSTANCE_NAME" value="swarm-$PA_JOB_ID" model="PA:NOT_EMPTY_STRING" description="The name of the service to be deployed."  advanced="false" hidden="false"/>
    <variable name="NODE_SOURCE" value="" model="PA:MODEL_FROM_URL(${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/nodesources)" description="If not empty, the workflow tasks will be run only on nodes belonging to the specified node source."  advanced="false" hidden="false"/>
    <variable name="TARGETED_NB_PA_NODES" value="3" model="PA:NOT_EMPTY_STRING" description="The number of targeted deployment nodes."  advanced="false" hidden="false"/>
    <variable name="TARGETED_NB_PA_HOSTS" value="1" model="PA:Integer" description="Minimum number of machines (hosts) that will be contained in the docker swarm infrastructure. This should correspond to the number of machines (VMs) contained in the target node source."  advanced="true" hidden="false"/>
    <variable name="HOST_CHECK" value="" model="PA:SPEL(T(Integer).parseInt(variables[&#x27;TARGETED_NB_PA_NODES&#x27;]) &gt;= T(Integer).parseInt(variables[&#x27;TARGETED_NB_PA_HOSTS&#x27;]))" description="Check NB_NODES &gt;= NB_HOSTS"  advanced="false" hidden="true"/>
  </variables>
  <description>
    <![CDATA[ Create a Docker Swarm. NODE_SOURCE refers to the targeted node source from which TARGETED_NB_PA_NODES ProActive nodes will be reserved for the Docker Swarm. The TARGETED_NB_PA_HOSTS refers to Minimum number of machines (hosts) that will be contained in the docker swarm infrastructure. This should correspond to the number of machines (VMs) contained in the target node source. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="service-automation"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png"/>
    <info name="pca.states" value="(VOID,RUNNING)"/>
    <info name="Documentation" value="https://docs.docker.com/engine/swarm/"/>
    <info name="pca.service.id" value="Docker_Swarm"/>
    <info name="group" value="public-objects"/>
    <info name="NODE_SOURCE" value="${NODE_SOURCE}"/>
  </genericInformation>
  <taskFlow>
    <task name="start_swarm_manager" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.objectweb.proactive.core.util.ProActiveInet

// Get variables
def instance_name = variables.get("INSTANCE_NAME")
def pa_node_name = variables.get("PA_NODE_NAME")
def service_instance_id = variables.get("PCA_INSTANCE_ID") as Long

//Empty Hashset for Hosts
variables.put("CURRENT_HOSTS", new java.util.HashSet())

// Get the current IP address
def swarm_manager_ip = ProActiveInet.getInstance().getInetAddress().getHostAddress()

// Start the swarm manager
def swarm_manager_listen_ip_port = "0.0.0.0:2377"
def swarm_manager_listen_port = swarm_manager_listen_ip_port.split(":")[1]
def cmd = ["docker", "swarm", "init", "--advertise-addr", swarm_manager_ip, "--listen-addr", swarm_manager_listen_ip_port]
println cmd
def swarm_init_output = new StringBuilder()
def swarm_init_error = new StringBuilder()
cmd.execute().waitForProcessOutput(swarm_init_output, swarm_init_error)

// If no error
if (swarm_init_error.toString().isEmpty()) {

  def swarm_manager_key = swarm_init_output.toString().split("--token ")[1].split(" ")[0]
  // Propagate
  variables.put( "swarm_manager_key", swarm_manager_key)
  variables.put("swarm_manager_ip", swarm_manager_ip)
  variables.put("swarm_manager_listen_port", swarm_manager_listen_port)
  variables.put("swarm_manager_and_workers_pa_node_names", pa_node_name)
  resultMap.put("swarm_service_instance_id", service_instance_id)
  variables.put("NODE_ACCESS_TOKEN_INTERNAL", "PSA_" + instance_name)

} else {

  println "DEPLOY_ERROR_OCCURRED. Exiting"
  // Update variables
  variables.put("DEPLOY_ERROR_OCCURRED",true)
  variables.put("TARGETED_NB_PA_NODES", 0)
  def swarm_error_message = "\n" +
  "***************************************************************************************************\n" +
  "Deployment cannot continue as the following error occurred during the deployment of Swarm Service:\n" +
  swarm_init_error.toString() + "\n" +
  "***************************************************************************************************\n"
  variables.put("DEPLOY_ERROR_MESSAGE", swarm_error_message)


  // Skip tokens
  variables.put("NODE_ACCESS_TOKEN_INTERNAL", "")
  // Exit from the script
  return
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
import groovy.json.JsonOutput

// Leave if DEPLOY_ERROR_OCCURRED
if (variables.get("DEPLOY_ERROR_OCCURRED")){
  println "DEPLOY_ERROR_OCCURRED. Exiting"
  return
}


// Retrieve variables
def instance_name = variables.get("INSTANCE_NAME")
def pa_node_name = variables.get("PA_NODE_NAME")
def pa_node_host = variables.get("PA_NODE_HOST")
def pa_node_source_name = variables.get("PA_NODE_SOURCE")
def pa_node_url = variables.get("PA_NODE_URL")

// Create the deployment map and json
def deployment_map = ["endpoint":["id":instance_name],"node":["name":pa_node_name,"host":pa_node_host,"node_source_name":pa_node_source_name,"url":pa_node_url]]
def deployment_json = JsonOutput.toJson(deployment_map)

// Propagate the deployment map
variables.put("swarm_deployment_json_0", deployment_json)

// Add token to the current node (RM API)
rmapi.connect()
println "Adding token " + instance_name + " to node " + pa_node_url
rmapi.addNodeToken(pa_node_url, "PSA_" + instance_name)
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            133.58750915527344
        </positionTop>
        <positionLeft>
            434.7499694824219
        </positionLeft>
      </metadata>
    </task>
    <task name="nothing" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png"/>
      </genericInformation>
      <depends>
        <task ref="start_swarm_manager"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println ""
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <metadata>
        <positionTop>
            261.58750915527344
        </positionTop>
        <positionLeft>
            434.7499694824219
        </positionLeft>
      </metadata>
    </task>
    <task name="start_swarm_worker" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png"/>
      </genericInformation>
      <depends>
        <task ref="nothing"/>
      </depends>
      <selection>
        <script type="static">
          <code language="groovy">
            <![CDATA[
// Leave if DEPLOY_ERROR_OCCURRED
if (variables.get("DEPLOY_ERROR_OCCURRED")){
  println "DEPLOY_ERROR_OCCURRED. Exiting"
  selected = true
  return
}

def task_iteration_id = variables.get("PA_TASK_ITERATION") as Integer
def target_nb_nodes = variables.get("TARGETED_NB_PA_NODES") as Integer
def target_nb_hosts = variables.get("TARGETED_NB_PA_HOSTS") as Integer


// CURRENT_HOSTS contains the set of hosts (Vms) already registered in this deployment.
// target_nb_hosts is the number of hosts we want to deploy on.
// if target_nb_hosts is not yet reached, we try to find a host that is not already registered.

selected = (variables.get("CURRENT_HOSTS").size() >= target_nb_hosts || (variables.get("CURRENT_HOSTS").size() < target_nb_hosts  && !variables.get("CURRENT_HOSTS").contains(nodehost) ))
]]>
          </code>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.objectweb.proactive.core.util.ProActiveInet

// Leave if DEPLOY_ERROR_OCCURRED
if (variables.get("DEPLOY_ERROR_OCCURRED")){
  println "DEPLOY_ERROR_OCCURRED. Exiting"
  return
}

// Retrieve variables
def swarm_manager_key = variables.get("swarm_manager_key")
def swarm_manager_ip = variables.get("swarm_manager_ip")
def swarm_manager_listen_port = variables.get("swarm_manager_listen_port")
def swarm_manager_and_workers_pa_node_names = variables.get("swarm_manager_and_workers_pa_node_names")
def pa_node_name = variables.get("PA_NODE_NAME")

// Get the current IP address
def swarm_worker_ip = ProActiveInet.getInstance().getInetAddress().getHostAddress()

// Start a swarm worker
def cmd = ["docker", "swarm", "join", "--token", swarm_manager_key, "--advertise-addr", swarm_worker_ip, swarm_manager_ip + ":" + swarm_manager_listen_port]
println cmd
cmd.execute().waitForProcessOutput(System.out, System.err)

// Save the current pa node name
variables.put("swarm_manager_and_workers_pa_node_names", swarm_manager_and_workers_pa_node_names + "," + pa_node_name)

// Save the current node host
variables.get("CURRENT_HOSTS").add(variables.get( "PA_NODE_HOST" ))
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow  block="end">
        <loop target="nothing">
          <script>
            <code language="groovy">
              <![CDATA[
// Loop condition
def task_iteration_id = variables.get("PA_TASK_ITERATION") as Integer
def nb_max_iterations = (variables.get("TARGETED_NB_PA_NODES") as Integer) - 2

if(task_iteration_id  < nb_max_iterations) {
    loop = true;
} else {
    loop = false;
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
import groovy.json.JsonOutput

// Leave if DEPLOY_ERROR_OCCURRED
if (variables.get("DEPLOY_ERROR_OCCURRED")){
  println "DEPLOY_ERROR_OCCURRED. Exiting"
  return
}

// Retrieve variables
def pa_task_iteration = variables.get("PA_TASK_ITERATION")
def instance_name = variables.get("INSTANCE_NAME")
def pa_node_name = variables.get("PA_NODE_NAME")
def pa_node_host = variables.get("PA_NODE_HOST")
def pa_node_source_name = variables.get("PA_NODE_SOURCE")
def pa_node_url = variables.get("PA_NODE_URL")

// Create the deployment map and json
def endpoint_id = instance_name + "_" + pa_task_iteration
def deployment_map = ["endpoint":["id":endpoint_id],"node":["name":pa_node_name,"host":pa_node_host,"node_source_name":pa_node_source_name,"url":pa_node_url]]
def deployment_json = JsonOutput.toJson(deployment_map)

// Propagate the deployment map
variables.put("swarm_deployment_json_" + ((pa_task_iteration as Integer) + 1), deployment_json)

// Add token to the current node (RM API)
rmapi.connect()
println "Adding token " + instance_name + " to node " + pa_node_url
rmapi.addNodeToken(pa_node_url, "PSA_" + instance_name)
]]>
          </code>
        </script>
      </post>
      <metadata>
        <positionTop>
            389.58750915527344
        </positionTop>
        <positionLeft>
            434.7499694824219
        </positionLeft>
      </metadata>
    </task>
    <task name="propagate_variables_to_current_service" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png"/>
        <info name="NODE_ACCESS_TOKEN" value="$NODE_ACCESS_TOKEN_INTERNAL"/>
      </genericInformation>
      <depends>
        <task ref="start_swarm_worker"/>
      </depends>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Propagate_variables_to_current_service/raw" language="groovy">
            <arguments>
              <argument value="swarm_manager_and_workers_pa_node_names"/>
              <argument value="VARIABLE_VALUE"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            517.5875091552734
        </positionTop>
        <positionLeft>
            434.7499694824219
        </positionLeft>
      </metadata>
    </task>
    <task name="add_deployments_and_update_service" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png"/>
        <info name="NODE_ACCESS_TOKEN" value="$NODE_ACCESS_TOKEN_INTERNAL"/>
      </genericInformation>
      <depends>
        <task ref="propagate_variables_to_current_service"/>
      </depends>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Add_deployments_and_update_service/raw" language="groovy">
            <arguments>
              <argument value="swarm_deployment_json_"/>
              <argument value="$TARGETED_NB_PA_NODES"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <cleaning>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Clean_Start_Service/raw" language="groovy"></file>
        </script>
      </cleaning>
      <metadata>
        <positionTop>
            645.5875091552734
        </positionTop>
        <positionLeft>
            434.7499694824219
        </positionLeft>
      </metadata>
    </task>
    <task name="throw_exception_if_deploy_error" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png"/>
      </genericInformation>
      <depends>
        <task ref="add_deployments_and_update_service"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
if (variables.get("DEPLOY_ERROR_OCCURRED")){
  println variables.get("DEPLOY_ERROR_MESSAGE")
  throw new Exception()
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <metadata>
        <positionTop>
            773.5875091552734
        </positionTop>
        <positionLeft>
            434.7499694824219
        </positionLeft>
      </metadata>
    </task>
    <task name="nothing3" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png"/>
      </genericInformation>
      <depends>
        <task ref="throw_exception_if_deploy_error"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println ""
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <replicate>
          <script>
            <code language="groovy">
              <![CDATA[
runs = variables.get("TARGETED_NB_PA_NODES")
]]>
            </code>
          </script>
        </replicate>
      </controlFlow>
      <metadata>
        <positionTop>
            901.5875701904297
        </positionTop>
        <positionLeft>
            434.7499694824219
        </positionLeft>
      </metadata>
    </task>
    <task name="check_swarm_worker_status" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png"/>
        <info name="NODE_ACCESS_TOKEN" value="$NODE_ACCESS_TOKEN_INTERNAL"/>
      </genericInformation>
      <depends>
        <task ref="nothing3"/>
      </depends>
      <selection>
        <script type="static">
          <code language="groovy">
            <![CDATA[
def task_replication_id = variables.get("PA_TASK_REPLICATION") as Integer
def swarm_manager_and_workers_pa_node_names = variables.get("swarm_manager_and_workers_pa_node_names")

def targeted_pa_node_name = swarm_manager_and_workers_pa_node_names.split(",")[task_replication_id]

selected = (nodename == targeted_pa_node_name)
]]>
          </code>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import org.apache.commons.lang3.StringUtils

// Retrieve variables
def instance_name = variables.get("INSTANCE_NAME")
def task_replication_id = variables.get("PA_TASK_REPLICATION")

// Get the status of the platform
def my_out = new StringBuilder()
def my_err = new StringBuilder()
["docker", "node", "ls"].execute().waitForProcessOutput(my_out, my_err)

def is_swarm_manager = my_out.contains("HOSTNAME")
def nb_listed_swarm_workers_ready = StringUtils.countMatches(my_out, "Ready")
def nb_listed_swarm_workers = StringUtils.countMatches(my_out, "\n") - 1
def is_swarm_manager_and_listed_swarm_workers_ready = is_swarm_manager && (nb_listed_swarm_workers_ready == nb_listed_swarm_workers)
def is_swarm_worker = my_err.toString().contains("Worker nodes can't be used to view or modify cluster state")

def is_swarm_worker_ok = is_swarm_manager_and_listed_swarm_workers_ready || is_swarm_worker

// Propagate the status
println "DEBUG is_swarm_worker_ok " + is_swarm_worker_ok
variables.put("SWARM_WORKER_" + task_replication_id + "_STATUS", is_swarm_worker_ok)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            1029.5875701904297
        </positionTop>
        <positionLeft>
            434.7499694824219
        </positionLeft>
      </metadata>
    </task>
    <task name="keep_platform_alive_while_ok" 
    
    
    
    
    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png"/>
      </genericInformation>
      <depends>
        <task ref="check_swarm_worker_status"/>
      </depends>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[
// Retrieve variables
def instance_name = variables.get("INSTANCE_NAME")
def targeted_nb_pa_nodes = variables.get("TARGETED_NB_PA_NODES") as Integer

// Get and deduce the swarm platform status
def is_swarm_ok = true
for (i = 0; i < targeted_nb_pa_nodes; i++) {
    if (!variables.get("SWARM_WORKER_" + i + "_STATUS").toBoolean()){
       is_swarm_ok = false
       break
    }
}

def is_docker_based_service = false
def token_to_remove = "PSA_" + instance_name
def main_container_name = null

// Propagate to the current task script
new File(localspace, "arguments.txt").text = String.valueOf(is_swarm_ok) + "," + String.valueOf(is_docker_based_service) + "," + token_to_remove + "," + main_container_name
]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Loop_over_service_instance_status/raw" language="groovy"></file>
        </script>
      </scriptExecutable>
      <controlFlow  block="end">
        <loop target="throw_exception_if_deploy_error">
          <script>
            <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Fetch_Logs/raw" language="groovy"></file>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            1157.5875701904297
        </positionTop>
        <positionLeft>
            434.7499694824219
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2257px;
            height:2539px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-128.58750915527344px;left:-429.7499694824219px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_223" style="top: 133.588px; left: 434.75px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png" width="20px">&nbsp;<span class="name">start_swarm_manager</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_226" style="top: 261.588px; left: 434.75px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png" width="20px">&nbsp;<span class="name">nothing</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_229" style="top: 389.588px; left: 434.75px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png" width="20px">&nbsp;<span class="name">start_swarm_worker</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_232" style="top: 517.588px; left: 434.75px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png" width="20px">&nbsp;<span class="name">propagate_variables_to_current_service</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_235" style="top: 645.588px; left: 434.75px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png" width="20px">&nbsp;<span class="name">add_deployments_and_update_service</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_238" style="top: 773.588px; left: 434.75px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png" width="20px">&nbsp;<span class="name">throw_exception_if_deploy_error</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_241" style="top: 901.587px; left: 434.75px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png" width="20px">&nbsp;<span class="name">nothing3</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_244" style="top: 1029.59px; left: 434.75px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png" width="20px">&nbsp;<span class="name">check_swarm_worker_status</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_247" style="top: 1157.59px; left: 434.75px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/swarm.png" width="20px">&nbsp;<span class="name">keep_platform_alive_while_ok</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><svg style="position:absolute;left:474.5px;top:173.5px" width="40.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 29.5 50 19.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.1659680000000008,66.303232 L11.101334505106049,49.025694870877146 L2.712976460524842,52.8513254484303 L-2.3505720464636433,45.1467504103523 L-1.1659680000000008,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.1659680000000008,66.303232 L11.101334505106049,49.025694870877146 L2.712976460524842,52.8513254484303 L-2.3505720464636433,45.1467504103523 L-1.1659680000000008,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:474.5px;top:301.5px" width="36" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 15 88 C 25 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M16.55088,66.303232 L18.90737940053047,45.245052815291274 L13.424194637075896,52.656846447727325 L5.260993848257804,48.37173817821538 L16.55088,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M16.55088,66.303232 L18.90737940053047,45.245052815291274 L13.424194637075896,52.656846447727325 L5.260993848257804,48.37173817821538 L16.55088,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:534.5px;top:251.5px" width="51" height="189" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 0 C 50 -50 20 138 30 88 " transform="translate(0.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M22.966874999999995,-3.025687500000001 L36.74645662585395,13.071614454564562 L28.04649028661866,10.020289218511724 L23.700479907342228,18.15122974118323 L22.966874999999995,-3.025687500000001" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M22.966874999999995,-3.025687500000001 L36.74645662585395,13.071614454564562 L28.04649028661866,10.020289218511724 L23.700479907342228,18.15122974118323 L22.966874999999995,-3.025687500000001" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_261" style="position: absolute; transform: translate(-50%, -50%); left: 564.5px; top: 345.5px;">loop</div><svg style="position:absolute;left:489.5px;top:429.5px" width="65" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 44 88 C 54 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M42.5058515,64.9032055 L37.54752513004034,44.30187060128621 L34.91729425353529,53.13826610716299 L25.78258573720334,51.89042784775093 L42.5058515,64.9032055" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M42.5058515,64.9032055 L37.54752513004034,44.30187060128621 L34.91729425353529,53.13826610716299 L25.78258573720334,51.89042784775093 L42.5058515,64.9032055" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:532px;top:557.5px" width="22.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 11.5 50 1.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.6935781249999997,66.78168750000002 L5.255142286972582,47.139441095571364 L-2.0238641657164482,52.79771513115072 L-8.72883008187672,46.46972713628781 L-2.6935781249999997,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.6935781249999997,66.78168750000002 L5.255142286972582,47.139441095571364 L-2.0238641657164482,52.79771513115072 L-8.72883008187672,46.46972713628781 L-2.6935781249999997,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:517px;top:685.5px" width="36" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 25 50 15 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.5508800000000005,66.303232 L9.739006151742196,48.37173817821538 L1.575805362924103,52.656846447727325 L-3.9073794005304716,45.245052815291274 L-1.5508800000000005,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.5508800000000005,66.303232 L9.739006151742196,48.37173817821538 L1.575805362924103,52.656846447727325 L-3.9073794005304716,45.245052815291274 L-1.5508800000000005,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:474.5px;top:813.5px" width="63.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 52.5 50 42.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M1.3452806249999978,64.9032055 L17.87588921653294,51.64654756545491 L8.760465319975065,53.028230302577164 L6.0009140191101045,44.23136287047984 L1.3452806249999978,64.9032055" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M1.3452806249999978,64.9032055 L17.87588921653294,51.64654756545491 L8.760465319975065,53.028230302577164 L6.0009140191101045,44.23136287047984 L1.3452806249999978,64.9032055" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:504.5px;top:931.5px" width="76.20000000000005" height="99" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 55.200000000000045 88 C 65.20000000000005 88 -10 -10 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#e5db3d" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M51.24337920000004,75.963888 L46.73471860213148,55.25949282377648 L43.91274290896864,64.03653407850453 L34.80736468063601,62.59012911480788 L51.24337920000004,75.963888" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M51.24337920000004,75.963888 L46.73471860213148,55.25949282377648 L43.91274290896864,64.03653407850453 L34.80736468063601,62.59012911480788 L51.24337920000004,75.963888" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_279" style="position: absolute; transform: translate(-50%, -50%); left: 542.1px; top: 981.75px;">replicate</div><svg style="position:absolute;left:474.5px;top:941.5px" width="55.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 34.5 88 C 44.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M34.099461000000005,65.364084 L31.33125102231483,44.35606140101549 L27.787913096988127,52.867509946765 L18.834676969079823,50.66760930402736 L34.099461000000005,65.364084" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M34.099461000000005,65.364084 L31.33125102231483,44.35606140101549 L27.787913096988127,52.867509946765 L18.834676969079823,50.66760930402736 L34.099461000000005,65.364084" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:509px;top:1069.5px" width="23.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 2.5 88 C 12.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.112421874999999,66.78168750000002 L10.884335710384326,46.39333271897615 L4.261814091853611,52.80755187738454 L-3.0897999122311486,47.243940502122534 L5.112421874999999,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.112421874999999,66.78168750000002 L10.884335710384326,46.39333271897615 L4.261814091853611,52.80755187738454 L-3.0897999122311486,47.243940502122534 L5.112421874999999,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:608.5px;top:763.5px" width="62" height="445" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 11 0 C 61 -50 10 394 0 344 " transform="translate(0.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M32.28878125,50.27893750000001 L39.76839215834482,70.10456285356122 L32.625929957544656,64.27487729513349 L25.772452363211336,70.44171156110588 L32.28878125,50.27893750000001" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M32.28878125,50.27893750000001 L39.76839215834482,70.10456285356122 L32.625929957544656,64.27487729513349 L25.772452363211336,70.44171156110588 L32.28878125,50.27893750000001" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_291" style="position: absolute; transform: translate(-50%, -50%); left: 636.5px; top: 985.5px;">loop</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 494.5px; top: 164px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 475px; top: 292px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 475px; top: 252px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 525px; top: 292px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 490px; top: 420px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 490px; top: 380px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 555px; top: 380px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 534px; top: 548px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 534px; top: 508px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 532.5px; top: 676px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 532.5px; top: 636px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 517.5px; top: 804px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 517.5px; top: 764px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 610px; top: 804px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 475px; top: 932px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 475px; top: 892px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint replicate-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 505px; top: 932px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 509.5px; top: 1060px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint replicate-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 560.2px; top: 1020px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 509.5px; top: 1020px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 512px; top: 1188px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 512px; top: 1148px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 599px; top: 1148px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>