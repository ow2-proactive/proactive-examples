{
  "nodeSourceName": "K8SClusterElastic",
  "nodesRecoverable": true,
  "infrastructurePluginDescriptor": {
    "pluginName": "org.ow2.proactive.resourcemanager.nodesource.infrastructure.KubernetesInfrastructure",
    "pluginDescription": "Kubernetes node source, which deploys ProActive nodes on a Kubernetes cluster. It allows dynamic resource allocation in ProActive by using Kubernetes.",
    "configurableFields": [
      {
        "name": "kubeConfigFile",
        "value": "[please put your Kubernetes configuration or upload your configuration file]",
        "meta": {
          "type": "FILEBROWSER",
          "description": "Kube config file",
          "dynamic": false,
          "sectionSelector": 1,
          "important": true
        }
      },
      {
        "name": "nodeJarDownloadCommand",
        "value": "wget -P [please put the download destination]  http://[please put the address of the server]:80/rest/node.jar",
        "meta": {
          "type": "NONE",
          "description": "Node.jar download command. Example: 'wget -P /opt/proactive/ --https-only https://yourServer/rest/node.jar'",
          "dynamic": false,
          "sectionSelector": 3,
          "important": true
        }
      },
      {
        "name": "rmCredentials",
        "value": "[please put your Resource Manager credentials or upload your credentials file]",
        "meta": {
          "type": "CREDENTIAL",
          "description": "RM Credential File",
          "dynamic": false,
          "sectionSelector": 3,
          "important": true
        }
      },
      {
        "name": "scale",
        "value": "2",
        "meta": {
          "type": "NONE",
          "description": "Number of ProActive nodes.",
          "dynamic": false,
          "sectionSelector": 2,
          "important": true
        }
      },
      {
        "name": "javaNodeJarCommand",
        "value": "java -jar /opt/proactive/node.jar",
        "meta": {
          "type": "NONE",
          "description": "Node jar command. Example: /usr/bin/java -jar /opt/proactive/node.jar",
          "dynamic": false,
          "sectionSelector": 3,
          "important": true
        }
      },
      {
        "name": "jvmProperties",
        "value": "",
        "meta": {
          "type": "NONE",
          "description": "Java virtual machine properties. Example: -Dproactive.pamr.router.address=myServer.com -Dproactive.communication.protocol=pamr",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "kubernetesNamespace",
        "value": "",
        "meta": {
          "type": "NONE",
          "description": "(Optional) Kubernetes namespace if different from 'default' namespace.",
          "dynamic": false,
          "sectionSelector": 1,
          "important": false
        }
      },
      {
        "name": "nodeTimeout",
        "value": "600000",
        "meta": {
          "type": "NONE",
          "description": "(Optional) Node timeout in milliseconds. Default value 10 minutes.",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "cleaningDelaySeconds",
        "value": "120",
        "meta": {
          "type": "NONE",
          "description": "(Optional) Cleaning delay, in seconds until cleaning service starts.",
          "dynamic": false,
          "sectionSelector": 1,
          "important": false
        }
      },
      {
        "name": "cleaningFrequencySeconds",
        "value": "30",
        "meta": {
          "type": "NONE",
          "description": "(Optional) Cleaning frequency, Kubernetes node cleaning is done every x seconds.",
          "dynamic": false,
          "sectionSelector": 1,
          "important": false
        }
      }
    ],
    "defaultValues": {},
    "sectionDescriptions": {
      "1": "Kubernetes Configuration",
      "2": "Deployment Configuration",
      "3": "Node Configuration"
    },
    "meta": {
      "elastic": "true"
    }
  },
  "policyPluginDescriptor": {
    "pluginName": "org.ow2.proactive.resourcemanager.nodesource.policy.DynamicPolicy",
    "pluginDescription": "Allocates as many resources as scheduler required according\nto loading factor. Releases resources smoothly.",
    "configurableFields": [
      {
        "name": "userAccessType",
        "value": "ALL",
        "meta": {
          "type": "NONE",
          "description": "ME|users=name1,name2;groups=group1,group2;tokens=t1,t2|ALL",
          "dynamic": false,
          "sectionSelector": 1,
          "important": false
        }
      },
      {
        "name": "providerAccessType",
        "value": "ME",
        "meta": {
          "type": "NONE",
          "description": "ME|users=name1,name2;groups=group1,group2|ALL",
          "dynamic": false,
          "sectionSelector": 1,
          "important": false
        }
      },
      {
        "name": "minNodes",
        "value": "1",
        "meta": {
          "type": "NONE",
          "description": "Minimum number of nodes deployed.",
          "dynamic": true,
          "sectionSelector": 2,
          "important": true
        }
      },
      {
        "name": "maxNodes",
        "value": "5",
        "meta": {
          "type": "NONE",
          "description": "Maximum number of nodes deployed.",
          "dynamic": true,
          "sectionSelector": 2,
          "important": true
        }
      },
      {
        "name": "schedulerUrl",
        "value": "pnp://[please put the address of the server]:64738/",
        "meta": {
          "type": "NONE",
          "description": "URL used to contact the scheduler (e.g. pnp://SCHEDULER_IP:PORT).",
          "dynamic": false,
          "sectionSelector": 3,
          "important": true
        }
      },
      {
        "name": "schedulerCredentialsPath",
        "value": "[please put your Scheduler credentials or upload your credentials file]",
        "meta": {
          "type": "CREDENTIAL",
          "description": "Credentials used when contacting the scheduler.",
          "dynamic": false,
          "sectionSelector": 3,
          "important": true
        }
      },
      {
        "name": "schedulerConnectionTimeout",
        "value": "3000",
        "meta": {
          "type": "NONE",
          "description": "Timeout in ms to establish connection with the scheduler.",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "schedulerConnectionTrialsNumber",
        "value": "3",
        "meta": {
          "type": "NONE",
          "description": "Number of attempts to connect with the scheduler.",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "refreshTime",
        "value": "30000",
        "meta": {
          "type": "NONE",
          "description": "Refresh frequency (ms).",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "loadFactor",
        "value": "1",
        "meta": {
          "type": "NONE",
          "description": "Desired number of tasks per node.",
          "dynamic": false,
          "sectionSelector": 4,
          "important": false
        }
      },
      {
        "name": "initDelay",
        "value": "120000",
        "meta": {
          "type": "NONE",
          "description": "Delay to initialize the infrastructure (eg. in a scaleSet this must cover the creation of Azure's resources).",
          "dynamic": false,
          "sectionSelector": 4,
          "important": false
        }
      },
      {
        "name": "minUptime",
        "value": "30000",
        "meta": {
          "type": "NONE",
          "description": "Minimal uptime of a new free node to be candidate for deletion (ms).",
          "dynamic": false,
          "sectionSelector": 4,
          "important": false
        }
      },
      {
        "name": "globalScope",
        "value": "false",
        "meta": {
          "type": "CHECKBOX",
          "description": "Specify the scope of the policy: consider specific tasks ('false': target generic information NODESOURCENAME) or all tasks ('true': use only if a single DynamicPolicy is activated).",
          "dynamic": true,
          "sectionSelector": 4,
          "important": true
        }
      }
    ],
    "defaultValues": {},
    "sectionDescriptions": {
      "1": "Authorizations",
      "2": "Node Limits",
      "3": "Scheduler Configuration",
      "4": "Dynamic Policy Configuration"
    }
  }
}