{
  "nodeSourceName": "AwsEC2CloudElastic",
  "nodesRecoverable": true,
  "infrastructurePluginDescriptor": {
    "pluginName": "org.ow2.proactive.resourcemanager.nodesource.infrastructure.AWSEC2Infrastructure",
    "pluginDescription": "Handles nodes from the Amazon Elastic Compute Cloud Service.",
    "configurableFields": [
      {
        "name": "awsKey",
        "value": "",
        "meta": {
          "type": "NONE",
          "description": "Your AWS access key ID (e.g., AKIAIOSFODNN7EXAMPLE)",
          "dynamic": false,
          "sectionSelector": 1,
          "important": true
        }
      },
      {
        "name": "awsSecretKey",
        "value": "",
        "meta": {
          "type": "NONE",
          "description": "Your AWS secret access key (e.g., wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY)",
          "dynamic": false,
          "sectionSelector": 1,
          "important": true
        }
      },
      {
        "name": "numberOfInstances",
        "value": "10",
        "meta": {
          "type": "NONE",
          "description": "The number of VMs to create (maximum number of VMs in case of dynamic policy)",
          "dynamic": false,
          "sectionSelector": 2,
          "important": true
        }
      },
      {
        "name": "numberOfNodesPerInstance",
        "value": "2",
        "meta": {
          "type": "NONE",
          "description": "The number of nodes to create on each VM",
          "dynamic": false,
          "sectionSelector": 2,
          "important": true
        }
      },
      {
        "name": "image",
        "value": "eu-west-3/ami-03bca18cb3dc173c9",
        "meta": {
          "type": "NONE",
          "description": "VM image id, format region/imageId (optional, default value: eu-west-3/ami-03bca18cb3dc173c9)",
          "dynamic": false,
          "sectionSelector": 3,
          "important": true
        }
      },
      {
        "name": "vmUsername",
        "value": "ubuntu",
        "meta": {
          "type": "NONE",
          "description": "Default username of your VM image, make sure it's adapted to 'image' (optional, default value: ubuntu)",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "vmKeyPairName",
        "value": "",
        "meta": {
          "type": "NONE",
          "description": "The name of your AWS key pair for accessing VM (optional)",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "vmPrivateKey",
        "value": "",
        "meta": {
          "type": "FILEBROWSER",
          "description": "Your AWS private key file corresponding to 'vmKeyPairName' for accessing VM (optional)",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "ram",
        "value": "4096",
        "meta": {
          "type": "NONE",
          "description": "The minimum RAM required (in Mega Bytes) for each VM (optional, default value: 2048)",
          "dynamic": false,
          "sectionSelector": 3,
          "important": true
        }
      },
      {
        "name": "cores",
        "value": "2",
        "meta": {
          "type": "NONE",
          "description": "The minimum number of CPU cores required for each VM (optional, default value: 2)",
          "dynamic": false,
          "sectionSelector": 3,
          "important": true
        }
      },
      {
        "name": "securityGroupIds",
        "value": "",
        "meta": {
          "type": "NONE",
          "description": "The ids(s) of the security group(s) for VMs, spearated by comma in case of multiple ids. (optional)",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "subnetId",
        "value": "",
        "meta": {
          "type": "NONE",
          "description": "The subnet ID which is added to a specific Amazon VPC. (optional)",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "rmHostname",
        "value": "try.activeeon.com",
        "meta": {
          "type": "NONE",
          "description": "Resource Manager hostname or ip address (must be accessible from nodes)",
          "dynamic": false,
          "sectionSelector": 4,
          "important": false
        }
      },
      {
        "name": "connectorIaasURL",
        "value": "http://try.activeeon.com:8080/connector-iaas",
        "meta": {
          "type": "NONE",
          "description": "Connector-iaas URL",
          "dynamic": false,
          "sectionSelector": 4,
          "important": false
        }
      },
      {
        "name": "nodeJarURL",
        "value": "try.activeeon.com/rest/node.jar",
        "meta": {
          "type": "NONE",
          "description": "URL used to download the node jar on the VM",
          "dynamic": false,
          "sectionSelector": 4,
          "important": false
        }
      },
      {
        "name": "additionalProperties",
        "value": "",
        "meta": {
          "type": "NONE",
          "description": "Additional Java command properties (e.g. \"-Dpropertyname=propertyvalue\") (optional)",
          "dynamic": false,
          "sectionSelector": 5,
          "important": false
        }
      },
      {
        "name": "nodeTimeout",
        "value": "300000",
        "meta": {
          "type": "NONE",
          "description": "The timeout for nodes to connect to RM (in ms). After this timeout expired, the node is considered to be lost. (optional, default value: 300000)",
          "dynamic": false,
          "sectionSelector": 5,
          "important": false
        }
      },
      {
        "name": "startupScript",
        "value": "mkdir -p /tmp/node && cd /tmp/node\r\n if ! type -p jre/bin/java; then wget -nv -N https://s3.amazonaws.com/ci-materials/Latest_jre/jre-8u131-linux-x64.tar.gz; tar -xf jre-8u131-linux-x64.tar.gz; mv jre1.8.0_131/ jre; fi\r\nwget -nv %nodeJarUrl%\r\nnohup jre/bin/java -jar node.jar -Dproactive.communication.protocol=%protocol% -Dpython.path=%jythonPath% -Dproactive.pamr.router.address=%rmHostname% -D%instanceIdNodeProperty%=%instanceId% -r %rmUrl% -s %nodeSourceName% %nodeNamingOption% -v %credentials% -w %numberOfNodesPerInstance% %additionalProperties% &",
        "meta": {
          "type": "TEXTAREA",
          "description": "VM startup script to launch the ProActive nodes (optional). Please refer to the documentation for full description.",
          "dynamic": false,
          "sectionSelector": 5,
          "important": false
        }
      }
    ],
    "defaultValues": {},
    "sectionDescriptions": {
      "1": "AWS Configuration",
      "2": "Deployment Configuration",
      "3": "VM Configuration",
      "4": "PA Server Configuration",
      "5": "Node Configuration"
    },
    "meta": {
      "elastic": "true"
    }
  },
  "policyPluginDescriptor": {
    "pluginName": "org.ow2.proactive.resourcemanager.nodesource.policy.DynamicPolicy",
    "pluginDescription": "Allocates as many resources as scheduler required according\nto loading factor. Releases resources smoothly.",
    "configurableFields": [
      {
        "name": "userAccessType",
        "value": "ME",
        "meta": {
          "type": "NONE",
          "description": "ME|users=name1,name2;groups=group1,group2;tokens=t1,t2|ALL",
          "dynamic": false,
          "sectionSelector": 1,
          "important": false
        }
      },
      {
        "name": "providerAccessType",
        "value": "ME",
        "meta": {
          "type": "NONE",
          "description": "ME|users=name1,name2;groups=group1,group2|ALL",
          "dynamic": false,
          "sectionSelector": 1,
          "important": false
        }
      },
      {
        "name": "minNodes",
        "value": "0",
        "meta": {
          "type": "NONE",
          "description": "Minimum number of nodes deployed.",
          "dynamic": true,
          "sectionSelector": 2,
          "important": true
        }
      },
      {
        "name": "maxNodes",
        "value": "10",
        "meta": {
          "type": "NONE",
          "description": "Maximum number of nodes deployed.",
          "dynamic": true,
          "sectionSelector": 2,
          "important": true
        }
      },
      {
        "name": "schedulerUrl",
        "value": "pamr://4096/",
        "meta": {
          "type": "NONE",
          "description": "URL used to contact the scheduler (e.g. pnp://SCHEDULER_IP:PORT).",
          "dynamic": false,
          "sectionSelector": 3,
          "important": true
        }
      },
      {
        "name": "schedulerCredentialsPath",
        "value": "",
        "meta": {
          "type": "CREDENTIAL",
          "description": "Credentials used when contacting the scheduler.",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "schedulerConnectionTimeout",
        "value": "3000",
        "meta": {
          "type": "NONE",
          "description": "Timeout in ms to establish connection with the scheduler.",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "schedulerConnectionTrialsNumber",
        "value": "3",
        "meta": {
          "type": "NONE",
          "description": "Number of attempts to connect with the scheduler.",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "refreshTime",
        "value": "30000",
        "meta": {
          "type": "NONE",
          "description": "Refresh frequency (ms).",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "loadFactor",
        "value": "1.0",
        "meta": {
          "type": "NONE",
          "description": "Desired number of tasks per node.",
          "dynamic": false,
          "sectionSelector": 4,
          "important": false
        }
      },
      {
        "name": "initDelay",
        "value": "120000",
        "meta": {
          "type": "NONE",
          "description": "Delay to initialize the infrastructure (eg. in a scaleSet this must cover the creation of Azure's resources).",
          "dynamic": false,
          "sectionSelector": 4,
          "important": false
        }
      },
      {
        "name": "minUptime",
        "value": "300000",
        "meta": {
          "type": "NONE",
          "description": "Minimal uptime of a new free node to be candidate for deletion (ms).",
          "dynamic": false,
          "sectionSelector": 4,
          "important": false
        }
      },
      {
        "name": "globalScope",
        "value": "false",
        "meta": {
          "type": "CHECKBOX",
          "description": "Specify the scope of the policy: consider specific tasks ('false': target generic information NODESOURCENAME) or all tasks ('true': use only if a single DynamicPolicy is activated).",
          "dynamic": true,
          "sectionSelector": 4,
          "important": true
        }
      }
    ],
    "defaultValues": {},
    "sectionDescriptions": {
      "1": "Authorizations",
      "2": "Node Limits",
      "3": "Scheduler Configuration",
      "4": "Dynamic Policy Configuration"
    },
    "meta": {}
  }
}