<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.14" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="2" name="Post_Action_File_Export_To_DB" onTaskError="continueJobExecution" priority="normal" projectName="3. Post Actions" tags="Data Connectors,PostgreSQL,SQL" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd">
  <variables>
    <variable advanced="false" description="The database name" group="PostgreSQL Connection" hidden="false" model="PA:NOT_EMPTY_STRING" name="DATABASE" value="demo"/>
    <variable advanced="false" description="Hostname or IP address of the database host machine. Default value is localhost" group="PostgreSQL Connection" hidden="false" model="PA:NOT_EMPTY_STRING" name="HOST" value="ns3006693.ip-149-202-64.eu"/>
    <variable advanced="false" description="The listening port of the database. Default value is 5432" group="PostgreSQL Connection" hidden="false" model="PA:INTEGER" name="PORT" value="58690"/>
    <variable advanced="false" description="Database user name" group="PostgreSQL Connection" hidden="false" model="PA:NOT_EMPTY_STRING" name="USER" value="demo"/>
    <variable advanced="true" description="Third-party credential storing the password associated with the given user name" group="PostgreSQL Connection" hidden="false" model="PA:Credential" name="CREDENTIALS_KEY" value="postgresql://${USER}@${HOST}:${PORT}"/>
  </variables>
  <description>
    <![CDATA[ Export the found file from the monitored folder to the PostgreSQL database.
It requires the following third-party credential: {key: postgresql://<username>@<host>:<port>, value: POSTGRESQL_PASSWORD}. Please refer to the User documentation to learn how to add third-party credentials. ]]>
  </description>
  <genericInformation>
<info name="bucketName" value="event-file-listener"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/postgresql.png"/>
<info name="Documentation" value="user/ProActiveUserGuide.html#_sql"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task fork="true" name="Export_to_PostgreSQL">
      <description>
        <![CDATA[ Export the found file from the monitored folder to the PostgreSQL database.
It requires the following third-party credential: {key: postgresql://<username>@<host>:<port>, value: POSTGRESQL_PASSWORD}. Please refer to the User documentation to learn how to add third-party credentials. ]]>
      </description>
      <variables>
        <variable advanced="true" description="If true, the workflow tasks will be executed inside a docker container" group="Docker Parameters" inherited="true" model="PA:Boolean" name="DOCKER_ENABLED" value="True"/>
        <variable advanced="true" description="Name of the docker image used to execute the task" group="Docker Parameters" hidden="false" inherited="true" name="DOCKER_IMAGE" value="activeeon/dlm3"/>
        <variable description="The database name" group="PostgreSQL Connection" inherited="true" model="PA:NOT_EMPTY_STRING" name="DATABASE" value="my_database"/>
        <variable description="Hostname or IP address of the database host machine. Default value is localhost" group="PostgreSQL Connection" inherited="true" model="PA:NOT_EMPTY_STRING" name="HOST" value="localhost"/>
        <variable description="The listening port of the database. Default value is 5432" group="PostgreSQL Connection" inherited="true" model="PA:INTEGER" name="PORT" value="5432"/>
        <variable advanced="false" description="Database user name" group="PostgreSQL Connection" hidden="false" inherited="true" model="PA:NOT_EMPTY_STRING" name="USER" value="my_user"/>
        <variable description="Third-party credential storing the password associated with the given user name" group="PostgreSQL Connection" inherited="true" model="PA:Credential" name="CREDENTIALS_KEY" value="postgresql://${USER}@${HOST}:${PORT}"/>
        <variable advanced="false" description="The name of the table where data will be inserted" group="PostgreSQL Parameters" hidden="false" inherited="false" model="PA:NOT_EMPTY_STRING" name="TABLE" value="${FILE_BASE_NAME}"/>
        <variable description="Indicates the behavior to follow when the table exists in the database amongst: fail, replace and append(default)" group="PostgreSQL Parameters" inherited="false" model="PA:LIST(fail, replace, append)" name="INSERT_MODE" value="append"/>
        <variable advanced="false" description="A relative path of a CSV file in the Global Data Space that contains data to be imported. The string could also be a URL. Valid URL schemes include http, ftp, s3, and file" group="PostgreSQL Parameters" hidden="false" inherited="false" model="PA:NOT_EMPTY_STRING" name="INPUT_FILE" value="${SOURCE_FILE}"/>
        <variable advanced="false" description="The post action notification message" group="Notification Setup" hidden="false" inherited="false" model="PA:NOT_EMPTY_STRING" name="POST_ACTION_MESSAGE" value="Action Completed - The detected file &quot; ${DETECTED_FILE_NAME_AND_PATH} &quot; has been successfully exported to the postgresql database."/>
        <variable advanced="false" description="The notification severity. It can be one of &lt;b&gt;INFO&lt;/b&gt;,&lt;b&gt;WARNING&lt;/b&gt;,&lt;b&gt;ERROR&lt;/b&gt;,&lt;b&gt;CRITICAL&lt;/b&gt;" group="Notification Setup" hidden="false" inherited="false" model="PA:LIST(INFO,WARNING,ERROR,CRITICAL)" name="SEVERITY" value="INFO"/>
        <variable advanced="false" description="The pre action notification message" group="Notification Setup" hidden="false" inherited="false" model="PA:NOT_EMPTY_STRING" name="PRE_ACTION_MESSAGE" value="Action Started - The detected file &quot; ${DETECTED_FILE_NAME_AND_PATH} &quot; is to be exported to the postgresql database."/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/postgresql.png"/>
        <info name="task.documentation" value="user/ProActiveUserGuide.html#_sql"/>
      </genericInformation>
      <inputFiles>
        <files accessMode="transferFromGlobalSpace" includes="$INPUT_FILE"/>
      </inputFiles>
      <forkEnvironment javaHome="/usr">
        <envScript>
          <script>
            <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/fork_env_docker_vars/raw"/>
          </script>
        </envScript>
      </forkEnvironment>
      <pre>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/event-file-listener/resources/Web_Notification/raw">
            <arguments>
              <argument value="pre"/>
            </arguments>
          </file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file language="cpython" url="${PA_CATALOG_REST_URL}/buckets/data-connectors/resources/ExportToSqlDB/raw">
            <arguments>
              <argument value="postgresql"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <post>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/event-file-listener/resources/Web_Notification/raw">
            <arguments>
              <argument value="post"/>
            </arguments>
          </file>
        </script>
      </post>
      <cleaning>
        <script>
          <code language="groovy">
            <![CDATA[
import java.nio.file.Paths
import java.nio.file.Files

detectedFoundFile = variables.get("DELETE_DETECTED_FILE").toBoolean()
filePath = variables.get("DETECTED_FILE_NAME_AND_PATH")
if (detectedFoundFile) {
    boolean result = Files.deleteIfExists(Paths.get(filePath))
    if (result) {
        println("File " + filePath + " is deleted!")
    } else {
        println("Sorry, unable to delete the file.")
    }
}
]]>
          </code>
        </script>
      </cleaning>
      <metadata>
        <positionTop>
            225.234375
        </positionTop>
        <positionLeft>
            472.490234375
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2688px;
            height:3700px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-220.234375px;left:-467.490234375px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable active-task" id="jsPlumb_1_604" style="top: 225.234px; left: 472.49px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Export the found file from the monitored folder to the PostgreSQL database.
It requires the following third-party credential: {key: postgresql://<username>@<host>:<port>, value: POSTGRESQL_PASSWORD}. Please refer to the User documentation to learn how to add third-party credentials."><img src="/automation-dashboard/styles/patterns/img/wf-icons/postgresql.png" width="20px">&nbsp;<span class="name">Export_to_PostgreSQL</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 533px; top: 255px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
