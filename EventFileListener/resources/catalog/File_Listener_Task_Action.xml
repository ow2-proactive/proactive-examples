<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.14" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="2" name="File_Listener_Task_Action" onTaskError="suspendTask" priority="normal" projectName="2. File Listeners" tags="Post Action,Triggers" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd">
  <variables>
    <variable advanced="false" description="Hostname or IP address of the server to be monitored" group="File Listener Rules" hidden="false" model="PA:MODEL_FROM_URL(${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/hosts)" name="SERVER_TO_MONITOR" value=""/>
    <variable advanced="false" description="Folder on the given server that will be monitored for new files presence" group="File Listener Rules" hidden="false" model="PA:REGEXP(^$|^.+/$)" name="SOURCE_FOLDER_PATH" value="/tmp/source-folder/"/>
    <variable advanced="false" description="Only filenames which match the supplied regular expression are be considered" group="File Listener Rules" hidden="false" model="PA:NOT_EMPTY_STRING" name="FILENAME_PATTERN" value=".*"/>
    <variable name="DELETE_DETECTED_FILE" value="False" model="PA:BOOLEAN" description="A boolean indicating whether to delete the detected file after the post action. Default value is False." group="Post Action" advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ This file listener workflow monitors a folder (SOURCE_FOLDER_PATH) on a given server (SERVER_TO_MONITOR). A file event is detected when a new file matching a specific pattern (FILENAME_PATTERN) arrives to this folder or an existing one has been modified.
For each new file detected, an appropriate Web Notification (the message contains the file path) is sent to ProActive Notification Portal.
The user is able to drag and drop a subsequent post action task and add it after the file listener to process the detected file.

The file listener can be interactively terminated by sending the Terminate_Monitoring signal. ]]>
  </description>
  <genericInformation>
<info name="bucketName" value="event-file-listener"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/file_trigger.png"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task fork="true" name="File_Listener">
      <description>
        <![CDATA[ This file listener workflow monitors a folder (SOURCE_FOLDER_PATH) on a given server (SERVER_TO_MONITOR). A file event is detected when a new file matching a specific pattern (FILENAME_PATTERN) arrives to this folder or an existing one has been modified.
For each new file detected, an appropriate Web Notification (the message contains the file path) is sent to ProActive Notification Portal.
The user is able to drag and drop a subsequent post action task and add it after the file listener to process the detected file.

The file listener can be interactively terminated by sending the Terminate_Monitoring signal. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/file_trigger.png"/>
      </genericInformation>
      <depends>
        <task ref="Start_Loop"/>
      </depends>
      <selection>
        <script type="static">
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw">
            <arguments>
              <argument value="${SERVER_TO_MONITOR}"/>
            </arguments>
          </file>
        </script>
        <script type="dynamic">
          <code language="groovy">
            <![CDATA[
import groovy.io.FileType
import java.nio.file.attribute.BasicFileAttributes
import java.nio.file.Files
import java.time.ZonedDateTime

if (signalapi.isReceived("Terminate_Monitoring")) {
    selected = true;
    return;
}

inputFilesFolder = new File(variables.get("SOURCE_FOLDER_PATH"));
filesToProcess = new ArrayList();
channelId = variables.get("CHANNEL_ID")
selected = false;
pattern = variables.get("FILENAME_PATTERN")
checkSubFolders = false
if(variables.get("CHECK_SUB-FOLDERS")) {
    checkSubFolders = variables.get("CHECK_SUB-FOLDERS").toBoolean()
}
endDate = variables.get("END_DATE")
parsedEndDate = null
if(endDate){
    parsedEndDate = ZonedDateTime.parse(endDate)
}

detectedFilesList = synchronizationapi.get(channelId, "detectedFilesList")
if(detectedFilesList == null) {
    detectedFilesList = []
}

// list files in the monitored folder
if(checkSubFolders){
    inputFilesFolder.eachFileRecurse(FileType.FILES, { file->
        key = file.getAbsolutePath()
        attr = Files.readAttributes(file.toPath(), BasicFileAttributes.class)
        //value = attr.size()
        value = attr.lastModifiedTime().toMillis()
        if ((!synchronizationapi.containsKey(channelId, key) || (synchronizationapi.get(channelId, key) != null && synchronizationapi.get(channelId, key) != value) )&& file.getName() ==~ /${pattern}/ || (parsedEndDate && parsedEndDate.isBefore(ZonedDateTime.now())) || detectedFilesList.size() > 0) {
            // if key is not there then we spotted a new file
            selected = true;
        }
    })
} else {
    inputFilesFolder.eachFile(FileType.FILES, { file->
        key = file.getAbsolutePath()
        attr = Files.readAttributes(file.toPath(), BasicFileAttributes.class)
        //value = attr.size()
        value = attr.lastModifiedTime().toMillis()
        if ((!synchronizationapi.containsKey(channelId, key) || (synchronizationapi.get(channelId, key) != null && synchronizationapi.get(channelId, key) != value) )&& file.getName() ==~ /${pattern}/ || (parsedEndDate && parsedEndDate.isBefore(ZonedDateTime.now())) || detectedFilesList.size() > 0) {
            // if key is not there then we spotted a new file
            selected = true;
        }
    })
}
]]>
          </code>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import groovy.io.FileType
//import org.apache.commons.io.FilenameUtils
import java.nio.file.attribute.BasicFileAttributes
import java.nio.file.Files
import java.sql.Timestamp


if (signalapi.isReceived("Terminate_Monitoring")) {
    result = true;
    return;
}

sourceFolderPath = new File(variables.get("SOURCE_FOLDER_PATH"))
schedulerapi.connect()
pattern = variables.get("FILENAME_PATTERN")
checkSubFolders = false
//if true, list files in the monitored folder and in its sub-folders
if (variables.get("CHECK_SUB-FOLDERS")?.trim()) {
    checkSubFolders = variables.get("CHECK_SUB-FOLDERS").toBoolean()
}
channelId = variables.get("CHANNEL_ID")

if(checkSubFolders){
    sourceFolderPath.eachFileRecurse(FileType.FILES, { file->
        fileTrigger(file)
    })
} else {
    sourceFolderPath.eachFile(FileType.FILES, { file->
        fileTrigger(file)
    })
}

/*
* check the presence of a new file arrival in the monitored folder matching the defined pattern
*
* @param file
*/
void fileTrigger(def file) {
    key = file.getAbsolutePath()
    attr = Files.readAttributes(file.toPath(), BasicFileAttributes.class)
    //value = attr.size()
    value = attr.lastModifiedTime().toMillis()
    previousValue = synchronizationapi.putIfAbsent(channelId, key, value)
    detectedFilesList = synchronizationapi.putIfAbsent(channelId, "detectedFilesList", [])
    if (((previousValue == null || previousValue != value) && file.getName() ==~ /${pattern}/)) {
        //the listener has detected a new file arrival matching the defined pattern
        if(previousValue != null ){
            synchronizationapi.put(channelId, key, value)
        }
        fileDetected = true
        println "Detected file : " + key
        if (detectedFilesList == null) {
            detectedFilesList = []
        }
        detectedFilesList.add(key)
        resultMap.put("File path: " + key, "Date: " + new Timestamp(value))
        synchronizationapi.put(channelId, "detectedFilesList", detectedFilesList)
    }
}

schedulerapi.disconnect()
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow>
        <loop target="File_Listener">
          <script>
            <code language="groovy">
              <![CDATA[
schedulerapi.connect()

channelId = variables.get("CHANNEL_ID")
detectedFilesList = synchronizationapi.get(channelId, "detectedFilesList")
if (detectedFilesList.size() > 0) {
    variables.put("DETECTED_FILE_NAME_AND_PATH", detectedFilesList.removeAt(0))
    synchronizationapi.put(channelId, "detectedFilesList", detectedFilesList)
    loop = false
} else {
    if (signalapi.isReceived("Terminate_Monitoring")) {
        loop = false;
    } else {
         loop = true
    }
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            426.162109375
        </positionTop>
        <positionLeft>
            328.0078125
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Init">
      <description>
        <![CDATA[ The simplest task, ran by a Groovy engine. ]]>
      </description>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
channelId = "FileTrigger_" + variables.get("PA_JOB_ID")
variables.put("CHANNEL_ID", channelId)
synchronizationapi.createChannel(channelId, true)
signalapi.readyForSignal("Terminate_Monitoring")
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            170.15625
        </positionTop>
        <positionLeft>
            328.0078125
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Start_Loop">
      <depends>
        <task ref="Init"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println variables.get("PA_TASK_NAME")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"/>
      <metadata>
        <positionTop>
            298.154296875
        </positionTop>
        <positionLeft>
            328.0078125
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="End">
      <description>
        <![CDATA[ Clean up the synchronization api channel used by this workflow. ]]>
      </description>
      <depends>
        <task ref="Web_Notification"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
synchronizationapi.deleteChannel(variables.get("CHANNEL_ID"))
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            682.158203125
        </positionTop>
        <positionLeft>
            328.0078125
        </positionLeft>
      </metadata>
    </task>
    <task fork="true" name="Web_Notification">
      <description>
        <![CDATA[ Task to send a message to the notification service ]]>
      </description>
      <variables>
        <variable advanced="false" description="The notification message" hidden="false" inherited="false" name="MESSAGE" value="The file listener has detected the file &quot; ${DETECTED_FILE_NAME_AND_PATH} &quot; to be processed by a post action task"/>
        <variable advanced="false" description="The notification severity. It can be one of &lt;b&gt;INFO&lt;/b&gt;,&lt;b&gt;WARNING&lt;/b&gt;,&lt;b&gt;ERROR&lt;/b&gt;,&lt;b&gt;CRITICAL&lt;/b&gt;" hidden="false" inherited="false" model="PA:LIST(INFO,WARNING,ERROR,CRITICAL)" name="SEVERITY" value="INFO"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/web_notification.png"/>
      </genericInformation>
      <depends>
        <task ref="File_Listener"/>
      </depends>
      <scriptExecutable>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/control-notification/resources/Web_Notification_Script/raw"/>
        </script>
      </scriptExecutable>
      <controlFlow block="end">
        <loop target="Start_Loop">
          <script>
            <code language="groovy">
              <![CDATA[
import java.time.ZonedDateTime
frequency = variables.get("FREQUENCY")
pollTime = variables.get("POLLING_INTERVAL")
endDate = variables.get("END_DATE")
parsedEndDate = null
if(endDate){
    parsedEndDate = ZonedDateTime.parse(endDate)
}
if (frequency == "Until success" || signalapi.isReceived("Terminate_Monitoring")) {
    loop = false;
} else {
    if(parsedEndDate == null || (parsedEndDate && parsedEndDate.isAfter(ZonedDateTime.now()))) {
        if (pollTime && pollTime != '0') {
            println("Polling the folder " + variables.get("SOURCE_FOLDER_PATH") + " for new file(s) arrival")
            loop = '*/' + pollTime + ' * * * *'
        } else {
            loop = true
        }
    } else {
        println "The end date is reached so the file listener schedule is interrupted"
        loop = false
    }
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            554.16015625
        </positionTop>
        <positionLeft>
            328.0078125
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2688px;
            height:3710px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-165.15625px;left:-323.0078125px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_ active-task" id="jsPlumb_1_169" style="top: 426.163px; left: 328.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This file listener workflow monitors a folder (SOURCE_FOLDER_PATH) on a given server (SERVER_TO_MONITOR). A file event is detected when a new file matching a specific pattern (FILENAME_PATTERN) arrives to this folder or an existing one has been modified.
For each new file detected, an appropriate Web Notification (the message contains the file path) is sent to ProActive Notification Portal.
The user is able to drag and drop a subsequent post action task and add it after the file listener to process the detected file.

The file listener can be interactively terminated by sending the Terminate_Monitoring signal."><img src="/automation-dashboard/styles/patterns/img/wf-icons/file_trigger.png" width="20px">&nbsp;<span class="name">File_Listener</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_172" style="top: 170.163px; left: 328.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Groovy engine."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Init</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_175" style="top: 298.163px; left: 328.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Start_Loop</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_178" style="top: 682.163px; left: 328.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Clean up the synchronization api channel used by this workflow."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">End</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_181" style="top: 554.163px; left: 328.008px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Task to send a message to the notification service"><img src="/automation-dashboard/styles/patterns/img/wf-icons/web_notification.png" width="20px">&nbsp;<span class="name">Web_Notification</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><svg style="position:absolute;left:362.98171321138256px;top:337.5px" width="15.518286788617468" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 88 C -10 38 -10 50 0 0 " transform="translate(15.018286788617468,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path></svg><svg style="position:absolute;left:417.5px;top:415.5px" width="61" height="61" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 40 C 50 -10 -10 50 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_192" style="position: absolute; transform: translate(-50%, -50%); left: 442.5px; top: 445.5px;">loop</div><svg style="position:absolute;left:362.98171321138256px;top:209.5px" width="15.518286788617468" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 88 C -10 38 -10 50 0 0 " transform="translate(15.018286788617468,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path></svg><svg style="position:absolute;left:367.5px;top:593.5px" width="28.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 17.5 50 7.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.1923999999999997,66.303232 L7.334892955184595,47.37624890849568 L-0.382160168186493,52.42075989481225 L-6.5475791500031475,45.56600907668218 L-2.1923999999999997,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.1923999999999997,66.303232 L7.334892955184595,47.37624890849568 L-0.382160168186493,52.42075989481225 L-6.5475791500031475,45.56600907668218 L-2.1923999999999997,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:367.5px;top:465.5px" width="28.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 7.5 88 C 17.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.6924,66.303232 L14.047579150003148,45.56600907668218 L7.882160168186493,52.42075989481225 L0.1651070448154046,47.37624890849568 L9.6924,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M9.6924,66.303232 L14.047579150003148,45.56600907668218 L7.882160168186493,52.42075989481225 L0.1651070448154046,47.37624890849568 L9.6924,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:427.5px;top:287.5px" width="51" height="317" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 0 C 50 -50 5 266 15 216 " transform="translate(0.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M22.527318750000006,23.734804500000006 L31.187464598887058,43.07393255366375 L23.70684277768225,37.68502754725342 L17.237241551633648,44.253456581346 L22.527318750000006,23.734804500000006" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M22.527318750000006,23.734804500000006 L31.187464598887058,43.07393255366375 L23.70684277768225,37.68502754725342 L17.237241551633648,44.253456581346 L22.527318750000006,23.734804500000006" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_207" style="position: absolute; transform: translate(-50%, -50%); left: 450px; top: 445.5px;">loop</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 368px; top: 456px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 368px; top: 416px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 418px; top: 416px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 418px; top: 456px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 368px; top: 200px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 368px; top: 328px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 368px; top: 288px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 418px; top: 328px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 368px; top: 712px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 368px; top: 672px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 375.5px; top: 584px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 375.5px; top: 544px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 433px; top: 544px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
