<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.14" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="2" name="Post_Action_File_Transfer" onTaskError="suspendTask" priority="normal" projectName="3. Post Actions" tags="Memory,Triggers" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd">
  <variables>
    <variable advanced="false" description="Path of the folder on the given TARGET HOST where the file be transferred." group="Transfer Settings" hidden="false" model="PA:REGEXP(^$|^.+/$)" name="DESTINATION_FOLDER_PATH" value="/tmp/destination-folder/"/>
    <variable advanced="false" group="Transfer Settings" hidden="false" model="PA:LIST(Replace,Cancel,Append,Alert And Wait)" name="IF_FILE_EXISTS_AT_DESTINATION" value="Replace"/>
  </variables>
  <description>
    <![CDATA[ Transfer the detected file from the monitored folder to the destination folder. ]]>
  </description>
  <genericInformation>
<info name="bucketName" value="event-file-listener"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/file_transfer.png"/>
<info name="submission.mode" value="workflow-api"/>
<info name="PARENT_JOB_ID" value="67"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task fork="true" name="Transfer_File_With_Pattern">
      <description>
        <![CDATA[ Transfer the found file from the monitored folder to the destination folder. ]]>
      </description>
      <variables>
        <variable advanced="false" description="The pre action notification message" group="Notification Setup" hidden="false" inherited="false" model="PA:NOT_EMPTY_STRING" name="PRE_ACTION_MESSAGE" value="Action Started - The detected file &quot; ${DETECTED_FILE_NAME_AND_PATH} &quot; is to be transferred to the destination folder."/>
        <variable advanced="false" description="The notification severity. It can be one of &lt;b&gt;INFO&lt;/b&gt;,&lt;b&gt;WARNING&lt;/b&gt;,&lt;b&gt;ERROR&lt;/b&gt;,&lt;b&gt;CRITICAL&lt;/b&gt;" hidden="false" inherited="false" model="PA:LIST(INFO,WARNING,ERROR,CRITICAL)" name="SEVERITY" value="INFO"/>
        <variable advanced="false" description="The post action notification message" group="Notification Setup" hidden="false" inherited="false" model="PA:NOT_EMPTY_STRING" name="POST_ACTION_MESSAGE" value="Action Completed - The detected file &quot; ${DETECTED_FILE_NAME_AND_PATH} &quot; has been successfully transferred to the destination folder."/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/file_transfer.png"/>
      </genericInformation>
      <pre>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/event-file-listener/resources/Web_Notification/raw">
            <arguments>
              <argument value="pre"/>
            </arguments>
          </file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import java.nio.file.Path
import java.nio.file.Paths
import java.nio.file.Files
import java.nio.file.StandardCopyOption
import groovy.io.FileType

sourceFilesFolder = new File(variables.get("SOURCE_FOLDER_PATH"))
destinationFilesFolder = variables.get("DESTINATION_FOLDER_PATH")
filePath = variables.get("DETECTED_FILE_NAME_AND_PATH")
fileExist = variables.get("IF_FILE_EXISTS_AT_DESTINATION")
println "**** FILE TRANSFER TO DESTINATION FOLDER ***"

try {
    file = new File(filePath)
    Path source = Paths.get(file.getAbsolutePath())
    println("File source path: " + source.toString())
    Path destination = Paths.get(destinationFilesFolder, file.getName())
    println("File destination path: " + destination.toString())
    if (fileExist == "Cancel" && new File(destination.toString()).exists()) {
        println "-- FILE TRANSFER CANCELLED -- the file " + file.getName() + " cannot be transferred as you have chosen to cancel the operation if it exists in the destination folder."
        return
    }
    Files.copy(source, destination, StandardCopyOption.REPLACE_EXISTING)
    println "SUCCESSFUL - file transfer from $source to $destination"
}
catch (IOException e) {
    println "FAILURE - file transfer from $source to $destination " + e.getMessage()
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
      <post>
        <script>
          <file language="groovy" url="${PA_CATALOG_REST_URL}/buckets/event-file-listener/resources/Web_Notification/raw">
            <arguments>
              <argument value="post"/>
            </arguments>
          </file>
        </script>
      </post>
      <cleaning>
        <script>
          <code language="groovy">
            <![CDATA[
import java.nio.file.Paths
import java.nio.file.Files

detectedFoundFile = variables.get("DELETE_DETECTED_FILE").toBoolean()
filePath = variables.get("DETECTED_FILE_NAME_AND_PATH")
if (detectedFoundFile) {
    boolean result = Files.deleteIfExists(Paths.get(filePath))
    if (result) {
        println("File " + filePath + " is deleted!")
    } else {
        println("Sorry, unable to delete the file.")
    }
}
]]>
          </code>
        </script>
      </cleaning>
      <metadata>
        <positionTop>
            66.23046875
        </positionTop>
        <positionLeft>
            367.001953125
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2688px;
            height:3700px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-61.23046875px;left:-362.001953125px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_637" style="top: 66.2305px; left: 367.002px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Transfer the found file from the monitored folder to the destination folder."><img src="/automation-dashboard/styles/patterns/img/wf-icons/file_transfer.png" width="20px">&nbsp;<span class="name">Transfer_File_With_Pattern</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 438px; top: 96px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
