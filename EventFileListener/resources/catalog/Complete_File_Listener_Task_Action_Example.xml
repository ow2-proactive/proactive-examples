<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Complete_File_Listener_Task_Action_Example" projectName="4. File Listener Examples" tags="Sub-Folders,Triggers" priority="normal" onTaskError="suspendTask"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="SERVER_TO_MONITOR" value="" model="PA:MODEL_FROM_URL(${PA_SCHEDULER_REST_PUBLIC_URL}/rm/model/hosts)" description="Hostname or IP address of the server to be monitored" group="Source Settings" advanced="false" hidden="false"/>
    <variable name="SOURCE_FOLDER_PATH" value="/tmp/source-folder/" model="PA:REGEXP(^$|^.+/$)" description="Folder on the given server that will be monitored for new files presence" group="Source Settings" advanced="false" hidden="false"/>
    <variable name="FILENAME_PATTERN" value=".*" model="PA:NOT_EMPTY_STRING" description="Only filenames which match the supplied regular expression are be considered" group="Source Settings" advanced="false" hidden="false"/>
    <variable name="DELETE_DETECTED_FILE" value="False" model="PA:BOOLEAN" description="A boolean indicating whether to delete the detected file after the workflow action. Default value is False." group="Source Settings" advanced="false" hidden="false"/>
    <variable name="HOST" value="demo.activeeon.com" model="PA:NOT_EMPTY_STRING" description="Hostname or IP address of the SFTP server. Default value is localhost" group="Destination Settings" advanced="false" hidden="false"/>
    <variable name="PORT" value="22" model="PA:INTEGER?" description="The listening port of the SFTP server. Default value is 22" group="Destination Settings" advanced="false" hidden="false"/>
    <variable name="USERNAME" value="demo" model="PA:NOT_EMPTY_STRING" description="SFTP server user name" group="Destination Settings" advanced="false" hidden="false"/>
    <variable name="SSH_PASSWORD" value="sftp://${USERNAME}@${HOST}" model="PA:CREDENTIAL" description="SSH server password" group="Destination Settings" advanced="true" hidden="true"/>
    <variable name="PASSPHRASE" value="ENC(ZOB1TurNPWWUPw2lMXU2nSel9cCs83Wg)" model="PA:HIDDEN" description="SSH private key passphrase" group="Destination Settings" advanced="false" hidden="true"/>
    <variable name="SSH_PRIVATE_KEY" value="ssh_key://${USERNAME}@${HOST}" model="PA:CREDENTIAL" description="SSH private key" group="Destination Settings" advanced="false" hidden="true"/>
    <variable name="AUTHENTICATION_METHOD" value="SSH_PASSWORD" model="PA:LIST(SSH_PASSWORD,SSH_PRIVATE_KEY)" description="Authentication method to use either password or private key" group="Destination Settings" advanced="true" hidden="false"/>
    <variable name="AUTHENTICATION_METHOD_HANDLER" value="" model="PA:SPEL(variables[&#x27;AUTHENTICATION_METHOD&#x27;] == &#x27;SSH_PASSWORD&#x27; ? showVar(&#x27;SSH_PASSWORD&#x27;) &amp;&amp; hideVar(&#x27;SSH_PRIVATE_KEY&#x27;) &amp;&amp; hideVar(&#x27;PASSPHRASE&#x27;) &amp;&amp; t(models[&#x27;SSH_PASSWORD&#x27;] = &#x27;PA:CREDENTIAL&#x27;) &amp;&amp; t(variables[&#x27;SSH_PASSWORD&#x27;] = &#x27;sftp://${USERNAME}@${HOST}&#x27;) &amp;&amp; t(models[&#x27;SSH_PRIVATE_KEY&#x27;] = &#x27;&#x27;) : showVar(&#x27;SSH_PRIVATE_KEY&#x27;) &amp;&amp;  showVar(&#x27;PASSPHRASE&#x27;) &amp;&amp; hideVar(&#x27;SSH_PASSWORD&#x27;) &amp;&amp; t(models[&#x27;SSH_PRIVATE_KEY&#x27;] = &#x27;PA:CREDENTIAL&#x27;) &amp;&amp; t(variables[&#x27;SSH_PRIVATE_KEY&#x27;] = &#x27;ssh_key://${USERNAME}@${HOST}&#x27;) &amp;&amp; t(models[&#x27;SSH_PASSWORD&#x27;] = &#x27;&#x27;))" description="Handler which enables SSH_PASSWORD field or SSH_PRIVATE_KEY based on the chosen AUTHENTICATION_METHOD" group="Destination Settings" advanced="false" hidden="true"/>
    <variable name="DESTINATION_FOLDER_PATH" value="destination-folder/" model="PA:REGEXP(^$|^.+/$)" description="The remote relative path on the FTP/SFTP server where transferred file(s) will be stored." group="Destination Settings" advanced="false" hidden="false"/>
    <variable name="FREQUENCY" value="Repeat indefinitely" model="PA:LIST(Until success,Repeat indefinitely)" description="If the until success option is selected, the file listener stops listening to the folder when the listener rules are met. Otherwise, the file listener notifies the registered application on events and continues to listen for subsequent events." group="Frequency" advanced="false" hidden="false"/>
    <variable name="POLLING_INTERVAL" value="0" model="PA:INTEGER" description="The time window (minutes) between two checking for the presence of new files arrival. A value of 0 means that the listener is reactive." group="Frequency" advanced="false" hidden="true"/>
    <variable name="FREQUENCY_HANDLER" value="" model="PA:SPEL(variables[&#x27;FREQUENCY&#x27;] == &#x27;Repeat indefinitely&#x27; ? showVar(&#x27;POLLING_INTERVAL&#x27;) : true)"  group="Frequency" advanced="false" hidden="true"/>
    <variable name="START_NOW" value="True" model="PA:BOOLEAN" description="If true, the file listener will be activated immediately." group="Listener Schedule" advanced="false" hidden="false"/>
    <variable name="START_DATE" value="2024-04-01T00:00:00+01:00" model="PA:DATETIME(yyyy-MM-dd&#x27;T&#x27;HH:mm:ssXXX)?" description="Select a specific date to activate the file listener" group="Listener Schedule" advanced="false" hidden="true"/>
    <variable name="DAYS_TO_RUN" value="1" model="PA:INTEGER" description="Number of days the file listener is running." group="Listener Schedule" advanced="false" hidden="false"/>
    <variable name="HOURS_TO_RUN" value="10" model="PA:INTEGER" description="Number of hours the file listener is running." group="Listener Schedule" advanced="false" hidden="false"/>
    <variable name="MINUTES_TO_RUN" value="5" model="PA:INTEGER" description="Number of minutes the file listener is running." group="Listener Schedule" advanced="false" hidden="false"/>
    <variable name="END_DATE" value="2024-12-31T00:00:00+01:00" model="PA:DATETIME(yyyy-MM-dd&#x27;T&#x27;HH:mm:ssXXX)?" description="Select a specific date until which the file listener runs" group="Listener Schedule" advanced="false" hidden="true"/>
    <variable name="START_DATE_HANDLER" value="" model="PA:SPEL(variables[&#x27;START_NOW&#x27;].toLowerCase() == &#x27;false&#x27; ? showVar(&#x27;START_DATE&#x27;) : hideVar(&#x27;START_DATE&#x27;))" description="Handler which shows START_DATE in case START_NOW value is false" group="Listener Schedule" advanced="false" hidden="true"/>
    <variable name="END_DATE_HANDLER" value="" model="PA:SPEL(variables[&#x27;DAYS_TO_RUN&#x27;] == &#x27;0&#x27;  &amp;&amp; variables[&#x27;HOURS_TO_RUN&#x27;] == &#x27;0&#x27;  &amp;&amp; variables[&#x27;MINUTES_TO_RUN&#x27;] == &#x27;0&#x27;  ? showVar(&#x27;END_DATE&#x27;) &amp;&amp; hideVar(&#x27;DAYS_TO_RUN&#x27;) &amp;&amp; hideVar(&#x27;HOURS_TO_RUN&#x27;) &amp;&amp; hideVar(&#x27;MINUTES_TO_RUN&#x27;) : hideVar(&#x27;END_DATE&#x27;))" description="Handler which shows START_DATE based on DAYS and HOURS values" group="Listener Schedule" advanced="false" hidden="true"/>
    <variable name="CHECK_SUB-FOLDERS" value="True" model="PA:BOOLEAN" description="A boolean indicating whether to seek files  in sub-folders under the folder to monitor you specified" group="Sub Folders" advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ This file listener workflow monitors a folder (`SOURCE_FOLDER_PATH`) on a given server (`SERVER_TO_MONITOR`). A file event is detected when a new file matching a specific pattern (`FILENAME_PATTERN`) arrives to this folder or an existing one has been modified.
For each new file detected, this sample workflow transfers it to an SFTP server and sends an appropriate web notification (the message contains the path to the file) to the ProActive notification portal.

The file listener can be interactively terminated by sending the Terminate\_Monitoring signal. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="event-file-listener"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/file_trigger.png"/>
    <info name="Documentation" value="user/ProActiveUserGuide.html#_file"/>
    <info name="group" value="public-objects"/>
    <info name="START_AT" value="${START_DATE}"/>
  </genericInformation>
  <taskFlow>
    <task name="File_Listener"




    fork="true">
      <description>
        <![CDATA[ This file listener workflow monitors a folder (SOURCE_FOLDER_PATH) on a given server (SERVER_TO_MONITOR). A file event is detected when a new file matching a specific pattern (FILENAME_PATTERN) arrives to this folder or an existing one has been modified.
For each new file detected, an appropriate Web Notification (the message contains the file path) is sent to ProActive Notification Portal.
The user is able to drag and drop a subsequent post action task and add it after the file listener to process the detected file.

The file listener can be interactively terminated by sending the Terminate_Monitoring signal. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/file_trigger.png"/>
      </genericInformation>
      <depends>
        <task ref="Start_Loop"/>
      </depends>
      <selection>
        <script type="static">
          <file url="${PA_CATALOG_REST_URL}/buckets/scripts/resources/check_host_name/raw" language="groovy">
            <arguments>
              <argument value="${SERVER_TO_MONITOR}"/>
            </arguments>
          </file>
        </script>
        <script type="dynamic">
          <code language="groovy">
            <![CDATA[
import groovy.io.FileType
import java.nio.file.attribute.BasicFileAttributes
import java.nio.file.Files
import java.time.ZonedDateTime

if (signalapi.isReceived("Terminate_Monitoring")) {
    selected = true;
    return;
}

inputFilesFolder = new File(variables.get("SOURCE_FOLDER_PATH"));
filesToProcess = new ArrayList();
channelId = variables.get("CHANNEL_ID")
selected = false;
pattern = variables.get("FILENAME_PATTERN")
checkSubFolders = false
if(variables.get("CHECK_SUB-FOLDERS")) {
    checkSubFolders = variables.get("CHECK_SUB-FOLDERS").toBoolean()
}
endDate = variables.get("END_DATE")
parsedEndDate = null
if(endDate){
    parsedEndDate = ZonedDateTime.parse(endDate)
}

detectedFilesList = synchronizationapi.get(channelId, "detectedFilesList")
if(detectedFilesList == null) {
    detectedFilesList = []
}

// list files in the monitored folder
if(checkSubFolders){
    inputFilesFolder.eachFileRecurse(FileType.FILES, { file->
        key = file.getAbsolutePath()
        attr = Files.readAttributes(file.toPath(), BasicFileAttributes.class)
        //value = attr.size()
        value = attr.lastModifiedTime().toMillis()
        if ((!synchronizationapi.containsKey(channelId, key) || (synchronizationapi.get(channelId, key) != null && synchronizationapi.get(channelId, key) != value) )&& file.getName() ==~ /${pattern}/ || (parsedEndDate && parsedEndDate.isBefore(ZonedDateTime.now())) || detectedFilesList.size() > 0) {
            // if key is not there then we spotted a new file
            selected = true;
        }
    })
} else {
    inputFilesFolder.eachFile(FileType.FILES, { file->
        key = file.getAbsolutePath()
        attr = Files.readAttributes(file.toPath(), BasicFileAttributes.class)
        //value = attr.size()
        value = attr.lastModifiedTime().toMillis()
        if ((!synchronizationapi.containsKey(channelId, key) || (synchronizationapi.get(channelId, key) != null && synchronizationapi.get(channelId, key) != value) )&& file.getName() ==~ /${pattern}/ || (parsedEndDate && parsedEndDate.isBefore(ZonedDateTime.now())) || detectedFilesList.size() > 0) {
            // if key is not there then we spotted a new file
            selected = true;
        }
    })
}
]]>
          </code>
        </script>
      </selection>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import groovy.io.FileType
//import org.apache.commons.io.FilenameUtils
import java.nio.file.attribute.BasicFileAttributes
import java.nio.file.Files
import java.sql.Timestamp


if (signalapi.isReceived("Terminate_Monitoring")) {
    result = true;
    return;
}

sourceFolderPath = new File(variables.get("SOURCE_FOLDER_PATH"))
schedulerapi.connect()
pattern = variables.get("FILENAME_PATTERN")
checkSubFolders = false
//if true, list files in the monitored folder and in its sub-folders
if (variables.get("CHECK_SUB-FOLDERS")?.trim()) {
    checkSubFolders = variables.get("CHECK_SUB-FOLDERS").toBoolean()
}
channelId = variables.get("CHANNEL_ID")

if(checkSubFolders){
    sourceFolderPath.eachFileRecurse(FileType.FILES, { file->
        fileTrigger(file)
    })
} else {
    sourceFolderPath.eachFile(FileType.FILES, { file->
        fileTrigger(file)
    })
}

/*
* check the presence of a new file arrival in the monitored folder matching the defined pattern
*
* @param file
*/
void fileTrigger(def file) {
    key = file.getAbsolutePath()
    attr = Files.readAttributes(file.toPath(), BasicFileAttributes.class)
    //value = attr.size()
    value = attr.lastModifiedTime().toMillis()
    previousValue = synchronizationapi.putIfAbsent(channelId, key, value)
    detectedFilesList = synchronizationapi.putIfAbsent(channelId, "detectedFilesList", [])
    if (((previousValue == null || previousValue != value) && file.getName() ==~ /${pattern}/)) {
        //the listener has detected a new file arrival matching the defined pattern
        if(previousValue != null ){
            synchronizationapi.put(channelId, key, value)
        }
        fileDetected = true
        println "Detected file : " + key
        if (detectedFilesList == null) {
            detectedFilesList = []
        }
        detectedFilesList.add(key)
        resultMap.put("File path: " + key, "Date: " + new Timestamp(value))
        synchronizationapi.put(channelId, "detectedFilesList", detectedFilesList)
    }
}

schedulerapi.disconnect()
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <loop target="File_Listener">
          <script>
            <code language="groovy">
              <![CDATA[
import org.apache.commons.io.FilenameUtils

schedulerapi.connect()

channelId = variables.get("CHANNEL_ID")
detectedFilesList = synchronizationapi.get(channelId, "detectedFilesList")
if (detectedFilesList.size() > 0) {
    detectedFileNameAndPath = detectedFilesList.removeAt(0)
    file = new File(detectedFileNameAndPath)
    // push file to userspace
    userspaceapi.connect()
    userspaceapi.pushFile(file, file.getName())
    variables.put("SOURCE_FILE",file.getName())
    variables.put("FILE_BASE_NAME", FilenameUtils.getBaseName(detectedFileNameAndPath))
    variables.put("DETECTED_FILE_NAME_AND_PATH", detectedFileNameAndPath)
    synchronizationapi.put(channelId, "detectedFilesList", detectedFilesList)
    loop = false
} else {
    if (signalapi.isReceived("Terminate_Monitoring")) {
        loop = false;
    } else {
        loop = true
    }
}
schedulerapi.disconnect()
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            417.58685302734375
        </positionTop>
        <positionLeft>
            483.2292175292969
        </positionLeft>
      </metadata>
    </task>
    <task name="Init_File_Listener"




    fork="true">
      <description>
        <![CDATA[ Create the synchronization api channel used by this workflow. ]]>
      </description>
      <depends>
        <task ref="Init_Source_Settings"/>
        <task ref="Init_File_Pattern"/>
        <task ref="Init_Frequency"/>
        <task ref="Init_Schedule"/>
        <task ref="Init_Sub_Folders"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
channelId = "FileTrigger_" + variables.get("PA_JOB_ID")
variables.put("CHANNEL_ID", channelId)
synchronizationapi.createChannel(channelId, true)
signalapi.readyForSignal("Terminate_Monitoring")
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            161.58856201171875
        </positionTop>
        <positionLeft>
            483.2292175292969
        </positionLeft>
      </metadata>
    </task>
    <task name="Start_Loop"




    fork="true">
      <depends>
        <task ref="Init_File_Listener"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println variables.get("PA_TASK_NAME")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <metadata>
        <positionTop>
            289.5833435058594
        </positionTop>
        <positionLeft>
            483.2292175292969
        </positionLeft>
      </metadata>
    </task>
    <task name="End_File_Listener"




    fork="true">
      <description>
        <![CDATA[ Clean up the synchronization api channel used by this workflow. ]]>
      </description>
      <depends>
        <task ref="Web_Notification"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
synchronizationapi.deleteChannel(variables.get("CHANNEL_ID"))
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            801.5885620117188
        </positionTop>
        <positionLeft>
            483.2292175292969
        </positionLeft>
      </metadata>
    </task>
    <task name="Web_Notification"




    fork="true">
      <description>
        <![CDATA[ Task to send a message to the notification service ]]>
      </description>
      <variables>
        <variable name="MESSAGE" value="The file listener has detected the file &quot; ${DETECTED_FILE_NAME_AND_PATH} &quot; to be processed by a post action task" inherited="false"  description="The notification message"  advanced="false" hidden="false"/>
        <variable name="SEVERITY" value="INFO" inherited="false" model="PA:LIST(INFO,WARNING,ERROR,CRITICAL)" description="The notification severity. It can be one of &lt;b&gt;INFO&lt;/b&gt;,&lt;b&gt;WARNING&lt;/b&gt;,&lt;b&gt;ERROR&lt;/b&gt;,&lt;b&gt;CRITICAL&lt;/b&gt;"  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/web_notification.png"/>
      </genericInformation>
      <depends>
        <task ref="SFTP_File_Transfer_Task"/>
      </depends>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/control-notification/resources/Web_Notification_Script/raw" language="groovy"></file>
        </script>
      </scriptExecutable>
      <controlFlow  block="end">
        <loop target="Start_Loop">
          <script>
            <code language="groovy">
              <![CDATA[
import java.time.ZonedDateTime
frequency = variables.get("FREQUENCY")
pollTime = variables.get("POLLING_INTERVAL")
endDate = variables.get("END_DATE")
parsedEndDate = null
if(endDate){
    parsedEndDate = ZonedDateTime.parse(endDate)
}
if (frequency == "Until success" || signalapi.isReceived("Terminate_Monitoring")) {
    loop = false;
} else {
    if(parsedEndDate == null || (parsedEndDate && parsedEndDate.isAfter(ZonedDateTime.now()))) {
        if (pollTime && pollTime != '0') {
            println("Polling the folder " + variables.get("SOURCE_FOLDER_PATH") + " for new file(s) arrival")
            loop = '*/' + pollTime + ' * * * *'
        } else {
            loop = true
        }
    } else {
        println "The end date is reached so the file listener schedule is interrupted"
        loop = false
    }
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            673.5850830078125
        </positionTop>
        <positionLeft>
            483.2292175292969
        </positionLeft>
      </metadata>
    </task>
    <task name="SFTP_File_Transfer_Task"




    fork="true">
      <description>
        <![CDATA[ This task allows to export files to an SFTP (SSH FTP) server. The task requires the following third-party credential: {key: sftp://<username>@<host>, value: PASSWORD}. Please refer to the User documentation to learn how to add third-party credentials. ]]>
      </description>
      <variables>
        <variable name="HOST" value="localhost" inherited="true" model="PA:NOT_EMPTY_STRING" description="Hostname or IP address of the SFTP server. Default value is localhost" group="SFTP Connection"  />
        <variable name="PORT" value="22" inherited="true" model="PA:INTEGER?" description="The listening port of the SFTP server. Default value is 22" group="SFTP Connection"  />
        <variable name="USERNAME" value="my_username" inherited="true" model="PA:NOT_EMPTY_STRING" description="SFTP server user name" group="SFTP Connection"  />
        <variable name="SSH_PASSWORD" value="sftp://${USERNAME}@${HOST}" inherited="true" model="PA:Credential" description="Third-party credential storing the password associated with the given user name" group="SFTP Connection"  />
        <variable name="PASSPHRASE" value="ENC(ZOB1TurNPWWUPw2lMXU2nSel9cCs83Wg)" inherited="true" model="PA:HIDDEN" description="SSH private key passphrase" group="SSH Connection" advanced="false" hidden="true"/>
        <variable name="SSH_PRIVATE_KEY" value="ssh_key://${USERNAME}@${HOST}" inherited="true" model="PA:CREDENTIAL" description="SSH private key" group="SSH Connection" advanced="false" hidden="true"/>
        <variable name="AUTHENTICATION_METHOD" value="SSH_PASSWORD" inherited="true" model="PA:LIST(SSH_PASSWORD,SSH_PRIVATE_KEY)" description="Authentication method to use either password or private key" group="SSH Connection" advanced="false" hidden="false"/>
        <variable name="AUTHENTICATION_METHOD_HANDLER" value="" inherited="true" model="PA:SPEL(variables[&#39;AUTHENTICATION_METHOD&#39;] == &#39;SSH_PASSWORD&#39; ? showVar(&#39;SSH_PASSWORD&#39;) &amp;&amp; hideVar(&#39;SSH_PRIVATE_KEY&#39;) &amp;&amp; hideVar(&#39;PASSPHRASE&#39;) &amp;&amp; t(models[&#39;SSH_PASSWORD&#39;] = &#39;PA:CREDENTIAL&#39;) &amp;&amp; t(variables[&#39;SSH_PASSWORD&#39;] = &#39;sftp://${USERNAME}@${HOST}&#39;) &amp;&amp; t(models[&#39;SSH_PRIVATE_KEY&#39;] = &#39;&#39;) : showVar(&#39;SSH_PRIVATE_KEY&#39;) &amp;&amp;  showVar(&#39;PASSPHRASE&#39;) &amp;&amp; hideVar(&#39;SSH_PASSWORD&#39;) &amp;&amp; t(models[&#39;SSH_PRIVATE_KEY&#39;] = &#39;PA:CREDENTIAL&#39;) &amp;&amp; t(variables[&#39;SSH_PRIVATE_KEY&#39;] = &#39;ssh_key://${USERNAME}@${HOST}&#39;) &amp;&amp; t(models[&#39;SSH_PASSWORD&#39;] = &#39;&#39;))" description="Handler which enables SSH_PASSWORD field or SSH_PRIVATE_KEY based on the chosen AUTHENTICATION_METHOD" group="SSH Connection" advanced="false" hidden="true"/>
        <variable name="FILE_PATTERN" value="${SOURCE_FILE}" inherited="false" model="PA:NOT_EMPTY_STRING" description="Either a file name or a wildcard string pattern (e.g. file.txt, *.txt, **)" group="SFTP Input Parameters" advanced="false" hidden="false"/>
        <variable name="REMOTE_BASE" value="${DESTINATION_FOLDER_PATH}" inherited="false" model="PA:REGEXP(^$|^.+/$)" description="The remote relative path on the SFTP server where exported file(s) will be stored. $REMOTE_BASE can be either a path to a folder terminated by / or an empty value for the root (e.g. REMOTE/)" group="SFTP Output Parameters" advanced="false" hidden="false"/>
        <variable name="LOCAL_BASE" value="" inherited="false" model="PA:REGEXP(^$|^.+/$)" description="Relative path of a folder inside the Global Data Space from which we export file(s) to the FTP server. LOCAL_BASE can be either a path to a folder terminated by / or an empty value for the root (e.g. LOCAL/, /global/path/LOCAL/)" group="SFTP Input Parameters" advanced="false" hidden="false"/>
        <variable name="PRE_ACTION_MESSAGE" value="Action STARTED - The detected file &quot; ${DETECTED_FILE_NAME_AND_PATH} &quot; is to be transferred to the SFTP server." inherited="false" model="PA:NOT_EMPTY_STRING" description="The pre action notification message" group="Notification Setup" advanced="false" hidden="false"/>
        <variable name="SEVERITY" value="INFO" inherited="false" model="PA:LIST(CRITICAL,ERROR,WARNING,INFO)" description="The notification severity. It can be one of &lt;b&gt;INFO&lt;/b&gt;,&lt;b&gt;WARNING&lt;/b&gt;,&lt;b&gt;ERROR&lt;/b&gt;,&lt;b&gt;CRITICAL&lt;/b&gt;" group="Notification Setup" advanced="false" hidden="false"/>
        <variable name="POST_ACTION_MESSAGE" value="Action COMPLETED - The detected file &quot; ${DETECTED_FILE_NAME_AND_PATH} &quot; has been successfully transferred to the SFTP server." inherited="false" model="PA:NOT_EMPTY_STRING" description="The pre action notification message" group="Notification Setup" advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/sftp_import.png"/>
        <info name="task.documentation" value="user/ProActiveUserGuide.html#_file"/>
      </genericInformation>
      <depends>
        <task ref="File_Listener"/>
      </depends>
      <inputFiles>
        <files  includes="${LOCAL_BASE}${FILE_PATTERN}" accessMode="transferFromUserSpace"/>
      </inputFiles>
      <pre>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/event-file-listener/resources/Web_Notification/raw" language="groovy">
            <arguments>
              <argument value="pre"/>
            </arguments>
          </file>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/data-connectors/resources/ExportToFileSystem/raw" language="groovy">
            <arguments>
              <argument value="sftp"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <post>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/event-file-listener/resources/Web_Notification/raw" language="groovy">
            <arguments>
              <argument value="post"/>
            </arguments>
          </file>
        </script>
      </post>
      <cleaning>
        <script>
          <code language="groovy">
            <![CDATA[
import java.nio.file.Paths
import java.nio.file.Files

detectedFoundFile = variables.get("DELETE_DETECTED_FILE").toBoolean()
filePath = variables.get("DETECTED_FILE_NAME_AND_PATH")
if (detectedFoundFile) {
    boolean result = Files.deleteIfExists(Paths.get(filePath))
    if (result) {
        println("File " + filePath + " is deleted!")
    } else {
        println("Sorry, unable to delete the file.")
    }
}
]]>
          </code>
        </script>
      </cleaning>
      <metadata>
        <positionTop>
            542.1788330078125
        </positionTop>
        <positionLeft>
            400.2257385253906
        </positionLeft>
      </metadata>
    </task>
    <task name="Init_Source_Settings"




    fork="true">
      <description>
        <![CDATA[ Configure the following listener rules:
Server Environment: Host that contains the Agent on which file listener runs.
Source Folder Path: Path to the folder to which the file listener listens. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/file_listner_rule.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
sourceFolderPath = variables.get("SOURCE_FOLDER_PATH")
serverEnvironment = variables.get("SERVER_TO_MONITOR")
println("Monitoring the folder : " + sourceFolderPath + " located in the server host : " + serverEnvironment)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            29.201385498046875
        </positionTop>
        <positionLeft>
            234.24478149414062
        </positionLeft>
      </metadata>
    </task>
    <task name="Init_File_Pattern"




    fork="true">
      <description>
        <![CDATA[ Specify a file name pattern, using wildcard characters, to decide which files will trigger the file listener. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/file_listner_rule.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println ("The file name pattern that triggers the file listener is : " + variables.get("FILENAME_PATTERN"))
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            24.192703247070312
        </positionTop>
        <positionLeft>
            393.2465515136719
        </positionLeft>
      </metadata>
    </task>
    <task name="Init_Frequency"




    fork="true">
      <description>
        <![CDATA[ Configure the file listener to run either on a reoccurring basis with a configurable polling interval or to stop listening to the folder when the listener rules are met. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/file_listner_rule.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
if (variables.get("FREQUENCY") == "Until success") {
    println "The file listener is configured to stop listening to the folder when the listener rules are met"
} else {
    pollingTime = variables.get("POLLING_INTERVAL")
    println "The file listener is configured to run on a reoccurring basis with a configurable polling interval  : " + pollingTime
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            23.177078247070312
        </positionTop>
        <positionLeft>
            564.2361145019531
        </positionLeft>
      </metadata>
    </task>
    <task name="Init_Schedule"




    fork="true">
      <description>
        <![CDATA[ Set the schedule options to start and end a file listener on a specific date and time, and seconds. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/file_listner_rule.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

startNow = variables.get("START_NOW").toBoolean()
startDate = ZonedDateTime.now()
if(!startNow){
    startDate = ZonedDateTime.parse(variables.get("START_DATE"))
}
daysToRun = Integer.parseInt(variables.get("DAYS_TO_RUN"))
hoursToRun = Integer.parseInt(variables.get("HOURS_TO_RUN"))
minutesToRun = Integer.parseInt(variables.get("MINUTES_TO_RUN"))
endDate = startDate.plusDays(daysToRun).plusHours(hoursToRun).plusMinutes(minutesToRun)
if(daysToRun == 0 && hoursToRun == 0 && minutesToRun == 0){
    endDate = variables.get("END_DATE")
}
println("The file listener is scheduled to listen to files on a defined location from the start date " + startDate.format(DateTimeFormatter.ISO_ZONED_DATE_TIME) + " until the end date "  + endDate.format(DateTimeFormatter.ISO_OFFSET_DATE_TIME))

variables.put("START_DATE", startDate.format(DateTimeFormatter.ISO_OFFSET_DATE_TIME))
variables.put("END_DATE", endDate.format(DateTimeFormatter.ISO_OFFSET_DATE_TIME))
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            27.161468505859375
        </positionTop>
        <positionLeft>
            738.2378845214844
        </positionLeft>
      </metadata>
    </task>
    <task name="Init_Sub_Folders"




    fork="true">
      <description>
        <![CDATA[ Indicate whether to recursively search for files in sub-folders of the folder to be monitored. Default value is true. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/file_listner_rule.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println ("The search for files in sub-folders of the folder to be monitored is : " + variables.get("CHECK_SUB-FOLDERS"))
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            28.151046752929688
        </positionTop>
        <positionLeft>
            892.2395935058594
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2388px;
            height:3249px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-18.177078247070312px;left:-229.24478149414062px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1091" style="top: 417.587px; left: 483.237px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This file listener workflow monitors a folder (SOURCE_FOLDER_PATH) on a given server (SERVER_TO_MONITOR). A file event is detected when a new file matching a specific pattern (FILENAME_PATTERN) arrives to this folder or an existing one has been modified.
For each new file detected, an appropriate Web Notification (the message contains the file path) is sent to ProActive Notification Portal.
The user is able to drag and drop a subsequent post action task and add it after the file listener to process the detected file.

The file listener can be interactively terminated by sending the Terminate_Monitoring signal."><img src="/automation-dashboard/styles/patterns/img/wf-icons/file_trigger.png" width="20px">&nbsp;<span class="name">File_Listener</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1094" style="top: 161.589px; left: 483.237px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Create the synchronization api channel used by this workflow."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Init_File_Listener</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1097" style="top: 289.584px; left: 483.237px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Start_Loop</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1100" style="top: 801.589px; left: 483.237px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Clean up the synchronization api channel used by this workflow."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">End_File_Listener</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1103" style="top: 673.586px; left: 483.237px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Task to send a message to the notification service"><img src="/automation-dashboard/styles/patterns/img/wf-icons/web_notification.png" width="20px">&nbsp;<span class="name">Web_Notification</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_1106" style="top: 542.179px; left: 400.234px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="" data-original-title="This task allows to export files to an SFTP (SSH FTP) server. The task requires the following third-party credential: {key: sftp://<username>@<host>, value: PASSWORD}. Please refer to the User documentation to learn how to add third-party credentials."><img src="/automation-dashboard/styles/patterns/img/wf-icons/sftp_import.png" width="20px">&nbsp;<span class="name">SFTP_File_Transfer_Task</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon" class="glyphicon glyphicon-list-alt"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_1109" style="top: 29.2019px; left: 234.253px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Configure the following listener rules:
Server Environment: Host that contains the Agent on which file listener runs.
Source Folder Path: Path to the folder to which the file listener listens."><img src="/automation-dashboard/styles/patterns/img/wf-icons/file_listner_rule.png" width="20px">&nbsp;<span class="name">Init_Source_Settings</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_1112" style="top: 24.1932px; left: 393.255px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Specify a file name pattern, using wildcard characters, to decide which files will trigger the file listener."><img src="/automation-dashboard/styles/patterns/img/wf-icons/file_listner_rule.png" width="20px">&nbsp;<span class="name">Init_File_Pattern</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_1115" style="top: 23.1776px; left: 564.244px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Configure the file listener to run either on a reoccurring basis with a configurable polling interval or to stop listening to the folder when the listener rules are met."><img src="/automation-dashboard/styles/patterns/img/wf-icons/file_listner_rule.png" width="20px">&nbsp;<span class="name">Init_Frequency</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_1118" style="top: 27.1619px; left: 738.246px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Set the schedule options to start and end a file listener on a specific date and time, and seconds."><img src="/automation-dashboard/styles/patterns/img/wf-icons/file_listner_rule.png" width="20px">&nbsp;<span class="name">Init_Schedule</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_1121" style="top: 28.1515px; left: 892.248px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Indicate whether to recursively search for files in sub-folders of the folder to be monitored. Default value is true."><img src="/automation-dashboard/styles/patterns/img/wf-icons/file_listner_rule.png" width="20px">&nbsp;<span class="name">Init_Sub_Folders</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><svg style="position:absolute;left:517.9817132113825px;top:329.5px" width="15.518286788617468" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 -10 50 0 0 " transform="translate(15.018286788617468,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-4.427999999999998,66.303232 L-1.2615185838583702,45.35154005301801 L-7.026331880366543,52.546463795240896 L-15.018286788617468,47.94987193338456 L-4.427999999999998,66.303232" class="" stroke="#666" fill="#666" transform="translate(15.018286788617468,0.5)"></path></svg><svg style="position:absolute;left:572.5px;top:407.5px" width="61" height="61" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C 50 -10 -10 50 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_1132" style="position: absolute; transform: translate(-50%, -50%); left: 597.5px; top: 437.5px;">loop</div><svg style="position:absolute;left:289.5px;top:68.5px" width="262" height="94" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 241 93 C 251 43 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M201.94349175,63.13697775 L184.45479657004657,51.17263318363639 L188.4260297947871,59.49304823786999 L180.81086705791657,64.69009513884929 L201.94349175,63.13697775" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M201.94349175,63.13697775 L184.45479657004657,51.17263318363639 L188.4260297947871,59.49304823786999 L180.81086705791657,64.69009513884929 L201.94349175,63.13697775" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:438.5px;top:63.5px" width="113" height="99" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 92 98 C 102 48 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M82.507348,70.487032 L71.21757104137671,52.555469429366646 L71.5531594023684,61.768904209727715 L62.499443251104424,63.509658026998245 L82.507348,70.487032" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M82.507348,70.487032 L71.21757104137671,52.555469429366646 L71.5531594023684,61.768904209727715 L62.499443251104424,63.509658026998245 L82.507348,70.487032" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:530.5px;top:62.5px" width="97" height="100" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 99 C -10 49 86 50 76 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M6.533823999999997,72.31910400000001 L25.66257900892949,63.2036922260671 L16.473113640656642,62.45956438401715 L15.803039392946628,53.26440258541046 L6.533823999999997,72.31910400000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M6.533823999999997,72.31910400000001 L25.66257900892949,63.2036922260671 L16.473113640656642,62.45956438401715 L15.803039392946628,53.26440258541046 L6.533823999999997,72.31910400000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:530.5px;top:66.5px" width="268" height="96" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 95 C -10 45 257 50 247 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M40.09724275000001,64.79006625 L61.232040818052624,66.31332283463679 L53.60954253696914,61.12704093380656 L57.569015501859184,52.80102304766767 L40.09724275000001,64.79006625" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M40.09724275000001,64.79006625 L61.232040818052624,66.31332283463679 L53.60954253696914,61.12704093380656 L57.569015501859184,52.80102304766767 L40.09724275000001,64.79006625" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:530.5px;top:67.5px" width="429.5" height="95" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 94 C -10 44 418.5 50 408.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M75.48329600000002,62.712576 L96.3306138095215,66.50590437344839 L89.3117930317683,60.52793190029497 L94.14596970981647,52.67740734168011 L75.48329600000002,62.712576" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M75.48329600000002,62.712576 L96.3306138095215,66.50590437344839 L89.3117930317683,60.52793190029497 L94.14596970981647,52.67740734168011 L75.48329600000002,62.712576" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:522.5px;top:201.5px" width="29" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 18 50 8 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.149632,66.303232 L7.49984351657956,47.438247975227235 L-0.24966605297428535,52.43275510120006 L-6.370633382220376,45.538282028201515 L-2.149632,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.149632,66.303232 L7.49984351657956,47.438247975227235 L-0.24966605297428535,52.43275510120006 L-6.370633382220376,45.538282028201515 L-2.149632,66.303232" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:530px;top:713.5px" width="23.5" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 2.5 88 C 12.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.112421874999999,66.78168750000002 L10.884335710384326,46.39333271897615 L4.261814091853611,52.80755187738454 L-3.0897999122311486,47.243940502122534 L5.112421874999999,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.112421874999999,66.78168750000002 L10.884335710384326,46.39333271897615 L4.261814091853611,52.80755187738454 L-3.0897999122311486,47.243940502122534 L5.112421874999999,66.78168750000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:467px;top:581.5px" width="84" height="93" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 63 92 C 73 42 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M58.71864600000001,67.09912399999999 L50.552923824668845,47.546094021111685 L49.35873698658402,56.68797116947377 L40.141770994142625,56.90600303452767 L58.71864600000001,67.09912399999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M58.71864600000001,67.09912399999999 L50.552923824668845,47.546094021111685 L49.35873698658402,56.68797116947377 L40.141770994142625,56.90600303452767 L58.71864600000001,67.09912399999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:582.5px;top:279.5px" width="51" height="445" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 0 C 50 -50 5 394 15 344 " transform="translate(0.5,50.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M22.81640625,50.27893750000001 L30.827564506641185,69.89580125002513 L23.530597039213966,64.26070890124248 L16.84579310539871,70.6099920392391 L22.81640625,50.27893750000001" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M22.81640625,50.27893750000001 L30.827564506641185,69.89580125002513 L23.530597039213966,64.26070890124248 L16.84579310539871,70.6099920392391 L22.81640625,50.27893750000001" class="" stroke="#316b31" fill="#316b31" transform="translate(0.5,50.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_1154" style="position: absolute; transform: translate(-50%, -50%); left: 605px; top: 501.5px;">loop</div><svg style="position:absolute;left:467px;top:457.5px" width="76.5" height="85" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 84 C -10 34 65.5 50 55.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M2.8919999999999986,60.864000000000004 L21.266492348668685,50.31042094222459 L12.047026970969355,50.272235219717935 L10.674727568386615,41.15539397125523 L2.8919999999999986,60.864000000000004" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M2.8919999999999986,60.864000000000004 L21.266492348668685,50.31042094222459 L12.047026970969355,50.272235219717935 L10.674727568386615,41.15539397125523 L2.8919999999999986,60.864000000000004" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 523px; top: 448px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 523px; top: 408px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 573px; top: 408px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 573px; top: 448px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 531px; top: 192px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 531px; top: 152px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 523px; top: 320px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 523px; top: 280px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 573px; top: 320px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 533px; top: 832px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 533px; top: 792px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 530.5px; top: 704px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 530.5px; top: 664px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 588px; top: 664px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 467.5px; top: 572px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 467.5px; top: 532px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 290px; top: 59px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 439px; top: 54px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 607px; top: 53px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 778px; top: 57px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 939.5px; top: 58px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>