<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Finish_MaaS_DL" tags="Services,Deep learning models,Tensorflow Serving,MLOps,Model deployment,Model Management" projectName="7. Lifecycle workflows" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="CLEAN_DATA" value="True" model="PA:Boolean" description="True if the service engine is Singularity and the data created by this service instance has to be cleaned." group="" advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ Delete MaaS_DL instance. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="service-automation"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png"/>
    <info name="pca.states" value="(RUNNING,FINISHED)(PAUSED,FINISHED)(ERROR,FINISHED)"/>
    <info name="Documentation" value="PAIO/PAIOUserGuide.html#_delete_finish_the_service_instance"/>
    <info name="NODE_ACCESS_TOKEN" value="PSA_$INSTANCE_NAME"/>
    <info name="pca.service.id" value="MaaS_DL"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Finish_MaaS_DL_S"




    fork="true">
      <description>
        <![CDATA[ Finish MaaS_DL instance and remove its docker container ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png"/>
        <info name="Documentation" value="PAIO/PAIOUserGuide.html#_delete_finish_update_pause_the_service"/>
      </genericInformation>
      <pre>
        <script>
          <code language="bash">
            <![CDATA[
CLEAN_DATA=$variables_CLEAN_DATA
if [ "${CLEAN_DATA,,}" = "true" ]; then
    INSTANCE_NAME=variables_INSTANCE_NAME
    IMAGE_PATH=$(singularity instance list ${INSTANCE_NAME} | awk 'NR>1 {print $3}')
    echo "INFO: Deleting data folder: ${DATA_FOLDER_PATH}"
    DATA_FOLDER_PATH=${IMAGE_PATH}/${INSTANCE_NAME}
    rm -rf ${DATA_FOLDER_PATH}
fi
]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
/*********************************************************************************
* THIS SCRIPT INFORMS PLATFORM THAT PCA SERVICE ACION IS TRIGGERED                   *
*********************************************************************************/

import org.ow2.proactive.pca.service.client.ApiClient
import org.ow2.proactive.pca.service.client.api.ServiceInstanceRestApi
import org.ow2.proactive.pca.service.client.model.ServiceInstanceData

def action = args[0]

def pcaUrl = variables.get('PA_CLOUD_AUTOMATION_REST_URL')
def instanceId = variables.get("PCA_INSTANCE_ID") as long
def instanceName = variables.get("INSTANCE_NAME")
def ALREADY_REMOVED_MESSAGE = "Error: No such container: " + instanceName

println("Removing singularity container:" + instanceName)

def status = "ERROR"
def command = ["singularity", "instance", "list"].execute() | ["grep", "${instanceName}"].execute()
command.waitFor()
def isContainerExist = command.text

if (!isContainerExist){
	println("[WARNING] sigularity container: " + instanceName + " is already removed.")
	status = ALREADY_REMOVED_MESSAGE
} else if (isContainerExist) {
    def command_stop = ["singularity", "instance", "stop", "${instanceName}"].execute()
    command_stop.waitFor()
    status = instanceName
}


// Get schedulerapi access and acquire session id
schedulerapi.connect()
def sessionId = schedulerapi.getSession()

// Connect to Cloud Automation API
def serviceInstanceRestApi = new ServiceInstanceRestApi(new ApiClient().setBasePath(pcaUrl))

// Update service instance data : (status, endpoint)
def currentStatus = (!status.equals(ALREADY_REMOVED_MESSAGE) && !status.equals(instanceName)) ? "ERROR" : action
def serviceInstanceData = serviceInstanceRestApi.getServiceInstance(sessionId, instanceId)
serviceInstanceData.setInstanceStatus(currentStatus)
serviceInstanceRestApi.updateServiceInstance(sessionId, instanceId, serviceInstanceData)

if(action.equals("FINISHED")){
    // Inform other jobs that the service is finished and deleted.
	def channel = "Service_Instance_" + instanceId
	synchronizationapi.put(channel, "FINISH_DONE", true)
}
println("END " + variables.get("PA_TASK_NAME"))
]]>
          </code>
          <arguments>
            <argument value="FINISHED"/>
          </arguments>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            442.46531677246094
        </positionTop>
        <positionLeft>
            298.3507080078125
        </positionLeft>
      </metadata>
    </task>
    <task name="Pre_Trigger_Action"




    fork="true">
      <description>
        <![CDATA[ The simplest task, ran by a Groovy engine. ]]>
      </description>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Pre_Trigger_Action/raw" language="groovy">
            <arguments>
              <argument value="FINISH_LAUNCHED"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            186.45835876464844
        </positionTop>
        <positionLeft>
            362.34375
        </positionLeft>
      </metadata>
    </task>
    <task name="Condition"




    fork="true">
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png"/>
        <info name="Documentation" value="user/ProActiveUserGuide.html#_branch"/>
      </genericInformation>
      <depends>
        <task ref="Pre_Trigger_Action"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def engine = variables.get("ENGINE")

println("INFO: Ending a Model_Service server running in a " + engine + " container.")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <if target="Finish_MaaS_DL_S"
        else="Finish_MaaS_DL_D">
          <script>
            <code language="groovy">
              <![CDATA[
def engine = variables.get("ENGINE")
if(engine.toLowerCase().equals("singularity")){
    branch = "if";
} else {
    branch = "else";
}
]]>
            </code>
          </script>
        </if>
      </controlFlow>
      <metadata>
        <positionTop>
            314.4618377685547
        </positionTop>
        <positionLeft>
            362.34375
        </positionLeft>
      </metadata>
    </task>
    <task name="Finish_MaaS_DL_D"




    fork="true">
      <description>
        <![CDATA[ Finish MaaS_DL instance and remove its docker container ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Finish_Action/raw" language="bash"></file>
        </script>
      </scriptExecutable>
      <post>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Post_Trigger_Action/raw" language="groovy">
            <arguments>
              <argument value="FINISHED"/>
            </arguments>
          </file>
        </script>
      </post>
      <cleaning>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Clean_Trigger_Action/raw" language="groovy"></file>
        </script>
      </cleaning>
      <metadata>
        <positionTop>
            442.46531677246094
        </positionTop>
        <positionLeft>
            426.35418701171875
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2200px;
            height:2511px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-181.45835876464844px;left:-293.3507080078125px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_149" style="top: 442.482px; left: 298.351px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Finish MaaS_DL instance and remove its docker container"><img src="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png" width="20px">&nbsp;<span class="name">Finish_MaaS_DL_S</span></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_152" style="top: 186.475px; left: 362.344px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Groovy engine."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Pre_Trigger_Action</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_155" style="top: 314.479px; left: 362.344px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_if.png" width="20px">&nbsp;<span class="name">Condition</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_158" style="top: 442.482px; left: 426.354px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Finish MaaS_DL instance and remove its docker container"><img src="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png" width="20px">&nbsp;<span class="name">Finish_MaaS_DL_D</span></a></div><svg style="position:absolute;left:401.5px;top:226.5px" width="31.5" height="88" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 0 87 C -10 37 20.5 50 10.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.9631718750000002,65.86284375000001 L8.233145278112556,47.28772284829004 L0.3410752397081034,52.053772628655196 L-5.57592584323226,44.98347573358193 L-1.9631718750000002,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-1.9631718750000002,65.86284375000001 L8.233145278112556,47.28772284829004 L0.3410752397081034,52.053772628655196 L-5.57592584323226,44.98347573358193 L-1.9631718750000002,65.86284375000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:288.5px;top:353.5px" width="84" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 73 50 63 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.9725617499999983,63.998374500000004 L22.74746480949857,54.174779684127806 L13.536616459808739,53.7744389804564 L12.523529289954968,44.61072497431906 L3.9725617499999983,63.998374500000004" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.9725617499999983,63.998374500000004 L22.74746480949857,54.174779684127806 L13.536616459808739,53.7744389804564 L12.523529289954968,44.61072497431906 L3.9725617499999983,63.998374500000004" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_169" style="position: absolute; transform: translate(-50%, -50%); left: 330px; top: 397.5px;">if</div><svg style="position:absolute;left:351.5px;top:353.5px" width="86" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector"><path d="M 65 88 C 75 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#00f" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M60.49109,63.554236 L51.502810984746205,44.36541528730512 L50.697721282594294,53.54974055220558 L41.49831553695178,54.15878400471082 L60.49109,63.554236" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M60.49109,63.554236 L51.502810984746205,44.36541528730512 L50.697721282594294,53.54974055220558 L41.49831553695178,54.15878400471082 L60.49109,63.554236" class="" stroke="#00f" fill="#00f" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_173" style="position: absolute; transform: translate(-50%, -50%); left: 394px; top: 397.5px;">else</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 350.5px; top: 472px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 289px; top: 432px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 412.5px; top: 217px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 402px; top: 344px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 402px; top: 304px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint if-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 352px; top: 344px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 479px; top: 472px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint if-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 417px; top: 432px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#00f" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
