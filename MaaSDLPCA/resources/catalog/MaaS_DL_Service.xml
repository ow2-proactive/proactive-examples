<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.13" xsi:schemaLocation="urn:proactive:jobdescriptor:3.13 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.13/schedulerjob.xsd"  name="MaaS_DL_Service" projectName="Service Automation - Management" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="NATIVE_SCHEDULER" value=""/>
    <variable name="NATIVE_SCHEDULER_PARAMS" value=""/>
    <variable name="NODE_NAME" value=""/>
    <variable name="INSTANCE_NAME" value="maas_dl-$PA_JOB_ID"/>
    <variable name="ENDPOINT_ID" value="maas_dl-gui-$PA_JOB_ID"/>
    <variable model="PA:Boolean" name="PROXYFIED" value="True"/>
    <variable model="PA:Boolean" name="HTTPS_ENABLED" value="False"/>
    <variable model="PA:Boolean" name="DEBUG_ENABLED" value="True"/>
    <variable model="PA:Boolean" name="TRACE_ENABLED" value="True"/>
    <variable name="YAML_FILE" value="dl_service-api"/>
    <variable name="PYTHON_ENTRYPOINT" value="dl_service"/>
    <variable name="SERVICE_PORT" value="-1"/>
    <variable model="PA:List(docker,singularity)" name="ENGINE" value="docker"/>
    <variable name="DOCKER_IMAGE" value="activeeon/maas_dl"/>
    <variable name="SINGULARITY_IMAGE_PATH" value="/tmp/maas_dl.sif"/>
    <variable model="PA:Boolean" name="BUILD_IMAGE_IF_NOT_EXISTS" value="True"/>
    <variable name="MODEL_BASE_PATH" value="/tmp"/>
    <variable model="PA:Integer" name="MODELS_DEPLOYMENT_REFRESH" value="30"/>
  </variables>
  <description>
    <![CDATA[ This service allows to launch an instance of MaaS_DL under the name: INSTANCE_NAME, through ProActive Service Automation (PSA) Portal. Using the launched instance, an already built, tested and validated machine or deep learning model can be deployed to be employed for predictive purposes on new datasets. Unlike MaaS_ML , MaaS_DL provides the following additional features
1. The model versioning capability i.e. a deployed model can be updated to new versions and rolled back to old versions.
2. The integration with TensorFlow Serving TFX characterized by its flexibility and high-performance serving system.

For the descriptions of the workflow variables below, please check the documentation link. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="service-automation"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png"/>
    <info name="Documentation" value="../doc/PSA/PSAUserGuide.html#_model_service"/>
    <info name="pca.service.id" value="MaaS_DL"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Start_MaaS_DL_Service"
    
    onTaskError="cancelJob" 
    
    
    fork="true">
      <description>
        <![CDATA[ Start the MaaS_DL as a service. ]]>
      </description>
      <variables>
        <variable name="SERVICE_ID" value="MaaS_DL" inherited="false" />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png"/>
        <info name="task.documentation" value="PSA/PSAUserGuide.html"/>
      </genericInformation>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Start/raw" language="groovy">
            <arguments>
              <argument value="true"/>
              <argument value="true"/>
              <argument value="NATIVE_SCHEDULER"/>
              <argument value="NATIVE_SCHEDULER_PARAMS"/>
              <argument value="NODE_NAME"/>
              <argument value="INSTANCE_NAME"/>
              <argument value="ENDPOINT_ID"/>
              <argument value="PROXYFIED"/>
              <argument value="HTTPS_ENABLED"/>
              <argument value="DEBUG_ENABLED"/>
              <argument value="TRACE_ENABLED"/>
              <argument value="YAML_FILE"/>
              <argument value="PYTHON_ENTRYPOINT"/>
              <argument value="SERVICE_PORT"/>
              <argument value="ENGINE"/>
              <argument value="DOCKER_IMAGE"/>
              <argument value="SINGULARITY_IMAGE_PATH"/>
              <argument value="BUILD_IMAGE_IF_NOT_EXISTS"/>
              <argument value="MODEL_BASE_PATH"/>
              <argument value="MODELS_DEPLOYMENT_REFRESH"/>
            </arguments>
          </file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            299.5
        </positionTop>
        <positionLeft>
            582.25
        </positionLeft>
      </metadata>
    </task>
    <task name="Stop_MaaS_DL_Service"
    
    onTaskError="cancelJob" 
    
    
    fork="true">
      <variables>
        <variable name="ACTION" value="Finish_MaaS_DL" inherited="false" model="PA:LIST(Finish_MaaS_DL, Deploy_DL_Model, Undeploy_DL_Model, Redeploy_DL_Model)"/>
        <variable name="INSTANCE_ID" value="" inherited="false" />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png"/>
        <info name="task.documentation" value="PSA/PSAUserGuide.html"/>
      </genericInformation>
      <depends>
        <task ref="wait_for_stop"/>
      </depends>
      <pre>
        <script>
          <code language="groovy">
            <![CDATA[

]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <file url="${PA_CATALOG_REST_URL}/buckets/service-automation/resources/Service_Action/raw" language="groovy"></file>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <metadata>
        <positionTop>
            552.5
        </positionTop>
        <positionLeft>
            637.25
        </positionLeft>
      </metadata>
    </task>
    <task name="wait_for_stop" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job. ]]>
      </description>
      <variables>
        <variable name="SIGNALS" value="Terminate_job_and_service" inherited="false" />
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png"/>
        <info name="TASK.DOCUMENTATION" value="user/ProActiveUserGuide.html#_task_signal_api"/>
      </genericInformation>
      <depends>
        <task ref="Start_MaaS_DL_Service"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import com.google.common.base.Splitter;

if (variables.get("PA_TASK_ITERATION")==0){

    // Read the variable SIGNALS
	signals = variables.get("SIGNALS")

	// Split the value of the variable SIGNALS and transform it into a list
	Set signalsSet = new HashSet<>(Splitter.on(',').trimResults().omitEmptyStrings().splitToList(signals))

    // Send a ready notification for each signal in the set
    println("Ready for signals "+ signalsSet)
    signalsSet.each {
        signal -> signalapi.readyForSignal(signal)
    }

    // Add the signals set as a variable to be used by next tasks
    variables.put("SIGNALS_SET", signalsSet)
}

//Read the variable SIGNALS_SET
Set signalsSet =  variables.get("SIGNALS_SET")

// Check whether one signal among those specified as input is received
println("Checking whether one signal in the set "+ signalsSet +" is received")
receivedSignal = signalapi.checkForSignals(signalsSet)

// If a signal is received, remove ready signals and break the loop, else sleep 10 seconds then restart
if (receivedSignal != null){

    // remove ready signals
	signalapi.removeManySignals(new HashSet<>(signalsSet.collect { signal -> "ready_"+signal }))

    // print the received signal
    println("Received signal: "+ receivedSignal.getName())
    result = receivedSignal.getName()

} else {
    result = null
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <loop target="wait_for_stop">
          <script>
            <code language="groovy">
              <![CDATA[
if (result!=null){
    loop = false
} else {
    loop = "* * * * *"
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            425.484375
        </positionTop>
        <positionLeft>
            637.25
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:3824px;
            height:4968px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-294.5px;left:-577.25px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_205" style="top: 299.5px; left: 582.25px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Start the MaaS_DL as a service."><img src="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png" width="20px">&nbsp;<span class="name">Start_MaaS_DL_Service</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_208" style="top: 552.5px; left: 637.25px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/model_as_service.png" width="20px">&nbsp;<span class="name">Stop_MaaS_DL_Service</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_211" style="top: 425.484px; left: 637.25px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A template task that sends a ready notification for all the signals specified in the variable SIGNALS, then waits until one signal among those specified is received by the job."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-wait.png" width="20px">&nbsp;<span class="name">wait_for_stop</span></a></div><svg style="position:absolute;left:676.5px;top:464.5px" width="44" height="89" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 23 88 C 33 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M23.77937725,65.8307285 L23.932110755965308,44.64165885369049 L19.24983728637406,52.58371873485242 L10.68510099081772,49.17119881731642 L23.77937725,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M23.77937725,65.8307285 L23.932110755965308,44.64165885369049 L19.24983728637406,52.58371873485242 L10.68510099081772,49.17119881731642 L23.77937725,65.8307285" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:645px;top:339.5px" width="52.5" height="86" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 31.5 85 C 41.5 35 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M31.514277375,63.10076375 L29.26668324195177,42.03068257756293 L25.51384460851373,50.451858397564244 L16.617777889516017,48.0311153440492 L31.514277375,63.10076375" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M31.514277375,63.10076375 L29.26668324195177,42.03068257756293 L25.51384460851373,50.451858397564244 L16.617777889516017,48.0311153440492 L31.514277375,63.10076375" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 645.5px; top: 330px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 700px; top: 583px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 700px; top: 543px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 677px; top: 455px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 677px; top: 415px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>