<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<job xmlns="urn:proactive:jobdescriptor:3.14" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" maxNumberOfExecution="2" name="Slack_Message" onTaskError="continueJobExecution" priority="normal" projectName="Notifications" tags="Message,Notification,Webhook,Slack" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd">
  <description>
    <![CDATA[ A workflow that sends a message to a slack channel using a webhook. ]]>
  </description>
  <genericInformation>
<info name="bucketName" value="control-notification"/>
<info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/slack-icon.png"/>
<info name="Documentation" value="https://api.slack.com/messaging/webhooks"/>
<info name="group" value="public-objects"/>
</genericInformation>
  <taskFlow>
    <task fork="true" name="Send_Message">
      <description>
        <![CDATA[ Executes a HTTP Post request to a slack webhook. ]]>
      </description>
      <variables>
        <variable advanced="false" description="The slack webhook queried to post the message." group="" hidden="false" inherited="false" name="WEBHOOK" value="https://hooks.slack.com"/>
        <variable advanced="false" description="The header of the message posted on slack." group="" hidden="false" inherited="false" name="MESSAGE_HEADER" value=""/>
        <variable advanced="false" description="The content of the message posted on slack." group="" hidden="false" inherited="false" name="MESSAGE_CONTENT" value=""/>
        <variable advanced="true" description="Prints the logs of the HTTP POST query sent to the webhook" group="" hidden="false" inherited="true" name="DEBUG" value="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/slack-icon.png"/>
      </genericInformation>
      <inputFiles>
        <files accessMode="cacheFromGlobalSpace" includes="rest-assured-fat-3.3.0.jar"/>
      </inputFiles>
      <forkEnvironment>
        <envScript>
          <script>
            <code language="groovy">
              <![CDATA[
def jarFile = new File(cachespace, "rest-assured-fat-3.3.0.jar")

forkEnvironment.addAdditionalClasspath(jarFile.getAbsolutePath())
]]>
            </code>
          </script>
        </envScript>
      </forkEnvironment>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import static io.restassured.RestAssured.*;
import static io.restassured.config.EncoderConfig.*;
import io.restassured.http.ContentType;
import org.apache.commons.lang3.StringUtils;

def webHookPrefix = "https://hooks.slack.com/services";
def webHook = variables.get('WEBHOOK');
def debug = Boolean.parseBoolean(variables.get("DEBUG"));
def isSkippedFailure = variables.get(SKIP_FAILURE)?Boolean.parseBoolean(variables.get(SKIP_FAILURE)):false;

if (StringUtils.isBlank(webHook) || !webHook.contains(webHookPrefix)) {
    throw new IllegalArgumentException("Slack webhook has bad format: "+ webHook);
}

def messageHeader = StringUtils.isBlank(variables.get("MESSAGE_HEADER"))?"Message from ProActive job "+variables.get("PA_JOB_ID"):variables.get("MESSAGE_HEADER");
def messageContent = StringUtils.isBlank(variables.get("MESSAGE_CONTENT"))?"Content was empty ...":variables.get("MESSAGE_CONTENT");

StringBuilder postData = new StringBuilder();
postData.append('{"blocks":[{');
postData.append('"type": "header","text":{"type": "plain_text","text": "').append(messageHeader).append('"}},{');
postData.append('"type": "section","text":{"type": "mrkdwn", "text":"').append(messageContent).append('"}}]}');

restCall = given().contentType("application/json")	
restCall = restCall.relaxedHTTPSValidation()	
restCall = restCall.body(postData.toString())

if (debug) {
    println "-------------- REQUEST -----------------"
	restCall = restCall.log().all()
}

response = restCall.post(webHook)
def isRequestFailed = response.statusCode() != 200;

if (debug || isRequestFailed) {
    println "-------------- RESPONSE -----------------"
    println response.statusLine()
    println response.prettyPrint()

    if (isRequestFailed && !isSkippedFailure) {
        throw new IllegalStateException("Request to post slack message failed with error code: " + response.statusCode());
    }
}


]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            321.46665954589844
        </positionTop>
        <positionLeft>
            394.75
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:1886px;
            height:2972px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-316.46665954589844px;left:-389.75px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable active-task" style="top: 321.467px; left: 394.75px;" id="jsPlumb_1_76"><a class="task-name" data-toggle="tooltip" data-placement="right" title="" data-original-title="The simplest task, ran by a Groovy engine."><img src="/automation-dashboard/styles/patterns/img/wf-icons/slack-icon.png" width="20px">&nbsp;<span class="name">Send_Message</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div style="position: absolute; height: 20px; width: 20px; left: 441.5px; top: 351px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
