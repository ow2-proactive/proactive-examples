<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.3"
     xsi:schemaLocation="urn:proactive:jobdescriptor:3.3 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.3/schedulerjob.xsd"
    name="Solve_multiple_labs_PBS_NS" 
    projectName="CLIMB treatment"
    priority="normal"
    cancelJobOnError="false">
<variables>
    <variable name="qsub_inputs_file_path_from_dataspace" value="qsub_inputs.txt"/>
</variables>
    <description>
        <![CDATA[ An example of multiple PBS jobs submissions. Here we natively handle PBS jobs. ]]>
    </description>
<genericInformation>
    <info name="group" value="public-objects"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/multiple_labssolver_pbs.png"/>
  </genericInformation>
<taskFlow>
   <task name="Split_inputs">
  <inputFiles>
        <files  includes="$qsub_inputs_file_path_from_dataspace" accessMode="transferFromGlobalSpace"/>
      </inputFiles>
     <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println "Split_inputs ..."

// Retrieve the qsub inputs
def qsub_inputs_file_path_from_dataspace = variables.get("qsub_inputs_file_path_from_dataspace")

// 1line = 1 qsub inputs
def file_content = new File(qsub_inputs_file_path_from_dataspace).text
def lines_array = file_content.split("\n")

// Retrieve nb_qsub_commands
nb_qsub_commands = lines_array.length
variables["nb_qsub_commands"] = nb_qsub_commands

(0..nb_qsub_commands-1).each {
	variables["qsub_inputs_${it}"] = lines_array[it]
}

println "... Split_inputs"
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <replicate>
          <script>
            <code language="groovy">
              <![CDATA[
runs=variables.get('nb_qsub_commands')
]]>
            </code>
          </script>
        </replicate>
      </controlFlow>
    </task>
 

   <task name="Qsub">
      <genericInformation>
        <info name="NS" value="pbs_nodes"/>
      </genericInformation>
      <depends>
        <task ref="Split_inputs"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println "Qsub ..."

def task_id = variables.get("PA_TASK_REPLICATION")
println variables.get('qsub_inputs_' + task_id)

println "... Qsub"
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
   

 <task name="Merge">
     <depends>
        <task ref="Qsub"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println "Merge ..."
println "... Merge"
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
  </taskFlow>
</job>
